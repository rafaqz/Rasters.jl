import{_ as a,c as i,a5 as n,o as t}from"./chunks/framework.CakgBPm9.js";const e="/Rasters.jl/previews/PR820/assets/xwiwznx.oyWWmvC1.png",p="/Rasters.jl/previews/PR820/assets/dwidafi.BjE2G97N.png",l="/Rasters.jl/previews/PR820/assets/odfctki.2YhfOv1i.png",h="/Rasters.jl/previews/PR820/assets/jvnmdze.CO0mgiME.png",k="/Rasters.jl/previews/PR820/assets/asahzrv.BsE3Kr89.png",o="/Rasters.jl/previews/PR820/assets/tainjtt.CVxd1wxn.png",d="/Rasters.jl/previews/PR820/assets/fsxszfk.BPZOvOxi.png",r="/Rasters.jl/previews/PR820/assets/odzwlck.Djo3H46f.png",c="/Rasters.jl/previews/PR820/assets/cbbsany.CUldC_pQ.png",g="/Rasters.jl/previews/PR820/assets/urdhxrf.DI2ee96v.png",E="/Rasters.jl/previews/PR820/assets/neghajq.D9tQTCLW.png",u="/Rasters.jl/previews/PR820/assets/wqbxhqu.E3BoP-gc.png",D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"plotting.md","filePath":"plotting.md","lastUpdated":null}'),y={name:"plotting.md"};function m(F,s,C,v,b,q){return t(),i("div",null,s[0]||(s[0]=[n(`<h2 id="Plots,-simple" tabindex="-1">Plots, simple <a class="header-anchor" href="#Plots,-simple" aria-label="Permalink to &quot;Plots, simple {#Plots,-simple}&quot;">​</a></h2><p><a href="https://github.com/JuliaPlots/Plots.jl" target="_blank" rel="noreferrer"><code>Plots.jl</code></a> and <a href="https://makie.org" target="_blank" rel="noreferrer"><code>Makie.jl</code></a> are fully supported by Rasters.jl, with recipes for plotting <code>Raster</code> and <code>RasterStack</code> provided. <code>plot</code> will plot a heatmap with axes matching dimension values. If <code>mappedcrs</code> is used, converted values will be shown on axes instead of the underlying <code>crs</code> values. <code>contourf</code> will similarly plot a filled contour plot.</p><p>Pixel resolution is limited to allow loading very large files quickly. <code>max_res</code> specifies the maximum pixel resolution to show on the longest axis of the array. It can be set manually to change the resolution (e.g. for large or high-quality plots):</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, ArchGDAL, Plots</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{BioClim}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A; max_res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><img src="`+e+`" alt=""></p><p>For Makie, <code>plot</code> functions in a similar way. <code>plot</code> will only accept two-dimensional rasters. You can invoke <code>contour</code>, <code>contourf</code>, <code>heatmap</code>, <code>surface</code> or any Makie plotting function which supports surface-like data on a <strong>2D raster</strong>.</p><p>To obtain tiled plots for 3D rasters and RasterStacks, use the function <code>Rasters.rplot([gridposition], raster; kw_args...)</code>. This is an unexported function, since we&#39;re not sure how the API will change going forward.</p><h2 id="Makie,-simple" tabindex="-1">Makie, simple <a class="header-anchor" href="#Makie,-simple" aria-label="Permalink to &quot;Makie, simple {#Makie,-simple}&quot;">​</a></h2><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CairoMakie</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CairoMakie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">activate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(px_per_unit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, CairoMakie, RasterDataSources, ArchGDAL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{BioClim}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A)</span></span></code></pre></div><p><img src="`+p+`" alt=""></p><h2 id="Loading-data" tabindex="-1">Loading data <a class="header-anchor" href="#Loading-data" aria-label="Permalink to &quot;Loading data {#Loading-data}&quot;">​</a></h2><p>Our first example simply loads a file from disk and plots it.</p><p>This <code>netcdf</code> file only has one layer, if it has more we could use RasterStack instead.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, NCDatasets, Plots</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Downloads</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> download</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://www.unidata.ucar.edu/software/netcdf/examples/tos_O1_2001-2002.nc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filename </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> download</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(url, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tos_O1_2001-2002.nc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(filename)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>╭───────────────────────────────────────────────────╮</span></span>
<span class="line"><span>│ 180×170×24 Raster{Union{Missing, Float32}, 3} tos │</span></span>
<span class="line"><span>├───────────────────────────────────────────────────┴──────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X  Mapped{Float64} [1.0, 3.0, …, 357.0, 359.0] ForwardOrdered Regular Intervals{Center},</span></span>
<span class="line"><span>  → Y  Mapped{Float64} [-79.5, -78.5, …, 88.5, 89.5] ForwardOrdered Regular Intervals{Center},</span></span>
<span class="line"><span>  ↗ Ti Sampled{DateTime360Day} [DateTime360Day(2001-01-16T00:00:00), …, DateTime360Day(2002-12-16T00:00:00)] ForwardOrdered Explicit Intervals{Center}</span></span>
<span class="line"><span>├──────────────────────────────────────────────────────────────────── metadata ┤</span></span>
<span class="line"><span>  Metadata{Rasters.NCDsource} of Dict{String, Any} with 9 entries:</span></span>
<span class="line"><span>  &quot;units&quot;          =&gt; &quot;K&quot;</span></span>
<span class="line"><span>  &quot;missing_value&quot;  =&gt; 1.0f20</span></span>
<span class="line"><span>  &quot;original_units&quot; =&gt; &quot;degC&quot;</span></span>
<span class="line"><span>  &quot;cell_methods&quot;   =&gt; &quot;time: mean (interval: 30 minutes)&quot;</span></span>
<span class="line"><span>  &quot;history&quot;        =&gt; &quot; At   16:37:23 on 01/11/2005: CMOR altered the data in t…</span></span>
<span class="line"><span>  &quot;long_name&quot;      =&gt; &quot;Sea Surface Temperature&quot;</span></span>
<span class="line"><span>  &quot;standard_name&quot;  =&gt; &quot;sea_surface_temperature&quot;</span></span>
<span class="line"><span>  &quot;_FillValue&quot;     =&gt; 1.0f20</span></span>
<span class="line"><span>  &quot;original_name&quot;  =&gt; &quot;sosstsst&quot;</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (0.0, 360.0), Y = (-80.0, 90.0), Ti = (DateTime360Day(2001-01-01T00:00:00), DateTime360Day(2003-01-01T00:00:00)))</span></span>
<span class="line"><span>  missingval: missing</span></span>
<span class="line"><span>  crs: EPSG:4326</span></span>
<span class="line"><span>  mappedcrs: EPSG:4326</span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>[:, :, 1]</span></span>
<span class="line"><span> ⋮      ⋱</span></span></code></pre></div><p>Objects with Dimensions other than X and Y will produce multi-pane plots. Here we plot every third month in the first year in one plot:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A[Ti</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> plot</span></span></code></pre></div><p><img src="`+l+`" alt=""></p><p>Now plot the ocean temperatures around the Americas in the first month of 2001. Notice we are using lat/lon coordinates and date/time instead of regular indices. The time dimension uses <code>DateTime360Day</code>, so we need to load CFTime.jl to index it with <code>Near</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CFTime</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ti</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Near</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DateTime360Day</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">01</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">17</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 90.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">45.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 190.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> plot</span></span></code></pre></div><p><img src="`+h+`" alt=""></p><p>Now get the mean over the timespan, then save it to disk, and plot it as a filled contour.</p><p>Other plot functions and sliced objects that have only one <code>X</code>/<code>Y</code>/<code>Z</code> dimension fall back to generic DimensionalData.jl plotting, which will still correctly label plot axes.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Statistics</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Take the mean</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mean_tos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ti)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>╭──────────────────────────────────────────────────╮</span></span>
<span class="line"><span>│ 180×170×1 Raster{Union{Missing, Float32}, 3} tos │</span></span>
<span class="line"><span>├──────────────────────────────────────────────────┴───────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X  Mapped{Float64} [1.0, 3.0, …, 357.0, 359.0] ForwardOrdered Regular Intervals{Center},</span></span>
<span class="line"><span>  → Y  Mapped{Float64} [-79.5, -78.5, …, 88.5, 89.5] ForwardOrdered Regular Intervals{Center},</span></span>
<span class="line"><span>  ↗ Ti Sampled{DateTime360Day} DateTime360Day(2002-01-16T00:00:00):Millisecond(2592000000):DateTime360Day(2002-01-16T00:00:00) ForwardOrdered Explicit Intervals{Center}</span></span>
<span class="line"><span>├──────────────────────────────────────────────────────────────────── metadata ┤</span></span>
<span class="line"><span>  Metadata{Rasters.NCDsource} of Dict{String, Any} with 9 entries:</span></span>
<span class="line"><span>  &quot;units&quot;          =&gt; &quot;K&quot;</span></span>
<span class="line"><span>  &quot;missing_value&quot;  =&gt; 1.0f20</span></span>
<span class="line"><span>  &quot;original_units&quot; =&gt; &quot;degC&quot;</span></span>
<span class="line"><span>  &quot;cell_methods&quot;   =&gt; &quot;time: mean (interval: 30 minutes)&quot;</span></span>
<span class="line"><span>  &quot;history&quot;        =&gt; &quot; At   16:37:23 on 01/11/2005: CMOR altered the data in t…</span></span>
<span class="line"><span>  &quot;long_name&quot;      =&gt; &quot;Sea Surface Temperature&quot;</span></span>
<span class="line"><span>  &quot;standard_name&quot;  =&gt; &quot;sea_surface_temperature&quot;</span></span>
<span class="line"><span>  &quot;_FillValue&quot;     =&gt; 1.0f20</span></span>
<span class="line"><span>  &quot;original_name&quot;  =&gt; &quot;sosstsst&quot;</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (0.0, 360.0), Y = (-80.0, 90.0), Ti = (DateTime360Day(2001-01-01T00:00:00), DateTime360Day(2003-01-01T00:00:00)))</span></span>
<span class="line"><span>  missingval: missing</span></span>
<span class="line"><span>  crs: EPSG:4326</span></span>
<span class="line"><span>  mappedcrs: EPSG:4326</span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>[:, :, 1]</span></span>
<span class="line"><span> ⋮      ⋱</span></span></code></pre></div><h3 id="Plot-a-contour-plot" tabindex="-1">Plot a contour plot <a class="header-anchor" href="#Plot-a-contour-plot" aria-label="Permalink to &quot;Plot a contour plot {#Plot-a-contour-plot}&quot;">​</a></h3><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Plots</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Plots</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contourf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mean_tos; dpi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p><img src="`+k+'" alt=""></p><h3 id="write-to-disk" tabindex="-1">write to disk <a class="header-anchor" href="#write-to-disk" aria-label="Permalink to &quot;write to disk {#write-to-disk}&quot;">​</a></h3><p>Write the mean values to disk</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mean_tos.nc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mean_tos)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;mean_tos.nc&quot;</span></span></code></pre></div><p>Plotting recipes in DimensionalData.jl are the fallback for Rasters.jl when the object doesn&#39;t have 2 <code>X</code>/<code>Y</code>/<code>Z</code> dimensions, or a non-spatial plot command is used. So (as a random example) we could plot a transect of ocean surface temperature at 20 degree latitude :</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Near</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ti</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> plot</span></span></code></pre></div><p><img src="'+o+`" alt=""></p><h2 id="Polygon-masking,-mosaic-and-plot" tabindex="-1">Polygon masking, mosaic and plot <a class="header-anchor" href="#Polygon-masking,-mosaic-and-plot" aria-label="Permalink to &quot;Polygon masking, mosaic and plot {#Polygon-masking,-mosaic-and-plot}&quot;">​</a></h2><p>In this example we will <code>mask</code> the Scandinavian countries with border polygons, then <code>mosaic</code> together to make a single plot.</p><p>First, get the country boundary shape files using GADM.jl.</p><p>using Rasters, RasterDataSources, ArchGDAL, Shapefile, Plots, Dates, Downloads, NCDatasets</p><h2 id="Download-the-shapefile" tabindex="-1">Download the shapefile <a class="header-anchor" href="#Download-the-shapefile" aria-label="Permalink to &quot;Download the shapefile {#Download-the-shapefile}&quot;">​</a></h2><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Downloads</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Shapefile</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shapefile_url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/nvkelso/natural-earth-vector/raw/master/10m_cultural/ne_10m_admin_0_countries.shp&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shapefile_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;boundary_lines.shp&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Downloads</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">download</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(shapefile_url, shapefile_name);</span></span></code></pre></div><h3 id="Load-using-Shapefile.jl" tabindex="-1">Load using Shapefile.jl <a class="header-anchor" href="#Load-using-Shapefile.jl" aria-label="Permalink to &quot;Load using Shapefile.jl {#Load-using-Shapefile.jl}&quot;">​</a></h3><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shapes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Shapefile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(shapefile_name)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">denmark_border </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> shapes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shapes[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">71</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">norway_border </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> shapes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shapes[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">53</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sweden_border </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> shapes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shapes[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">54</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><p>Then load raster data. We load some worldclim layers using <code>RasterDataSources</code> via Rasters.jl:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Dates</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">climate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{Climate}, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:tmin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:tmax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:prec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:wind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">July)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>╭───────────────────────╮</span></span>
<span class="line"><span>│ 2160×1080 RasterStack │</span></span>
<span class="line"><span>├───────────────────────┴──────────────────────────────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Projected{Float64} -180.0:0.16666666666666666:179.83333333333331 ForwardOrdered Regular Intervals{Start},</span></span>
<span class="line"><span>  → Y Projected{Float64} 89.83333333333333:-0.16666666666666666:-90.0 ReverseOrdered Regular Intervals{Start}</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── layers ┤</span></span>
<span class="line"><span>  :tmin eltype: Float32 dims: X, Y size: 2160×1080</span></span>
<span class="line"><span>  :tmax eltype: Float32 dims: X, Y size: 2160×1080</span></span>
<span class="line"><span>  :prec eltype: Int16 dims: X, Y size: 2160×1080</span></span>
<span class="line"><span>  :wind eltype: Float32 dims: X, Y size: 2160×1080</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (-180.0, 179.99999999999997), Y = (-90.0, 90.0))</span></span>
<span class="line"><span>  missingval: (tmin = -3.4f38,</span></span>
<span class="line"><span> tmax = -3.4f38,</span></span>
<span class="line"><span> prec = -32768,</span></span>
<span class="line"><span> wind = -3.4f38,)</span></span>
<span class="line"><span>  crs: GEOGCS[&quot;WGS 84&quot;,DATUM[&quot;WGS_1984&quot;,SPHEROID[&quot;WGS 84&quot;,6378137,298.257223563,AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6326&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AXIS[&quot;Latitude&quot;,NORTH],AXIS[&quot;Longitude&quot;,EAST],AUTHORITY[&quot;EPSG&quot;,&quot;4326&quot;]]</span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span></code></pre></div><p><code>mask</code> Denmark, Norway and Sweden from the global dataset using their border polygon, then trim the missing values. We pad <code>trim</code> with a 10 pixel margin.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mask_trim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(climate, poly) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> trim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(climate; with</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">poly); pad</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">denmark </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mask_trim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(climate, denmark_border)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">norway </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mask_trim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(climate, norway_border)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sweden </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mask_trim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(climate, sweden_border)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>╭────────────────────╮</span></span>
<span class="line"><span>│ 98×102 RasterStack │</span></span>
<span class="line"><span>├────────────────────┴─────────────────────────────────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Projected{Float64} 9.49999999999999:0.16666666666666666:25.666666666666657 ForwardOrdered Regular Intervals{Start},</span></span>
<span class="line"><span>  → Y Projected{Float64} 70.5:-0.16666666666666666:53.666666666666664 ReverseOrdered Regular Intervals{Start}</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── layers ┤</span></span>
<span class="line"><span>  :tmin eltype: Float32 dims: X, Y size: 98×102</span></span>
<span class="line"><span>  :tmax eltype: Float32 dims: X, Y size: 98×102</span></span>
<span class="line"><span>  :prec eltype: Int16 dims: X, Y size: 98×102</span></span>
<span class="line"><span>  :wind eltype: Float32 dims: X, Y size: 98×102</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (9.49999999999999, 25.833333333333325), Y = (53.666666666666664, 70.66666666666667))</span></span>
<span class="line"><span>  missingval: (tmin = -3.4f38,</span></span>
<span class="line"><span> tmax = -3.4f38,</span></span>
<span class="line"><span> prec = -32768,</span></span>
<span class="line"><span> wind = -3.4f38,)</span></span>
<span class="line"><span>  crs: GEOGCS[&quot;WGS 84&quot;,DATUM[&quot;WGS_1984&quot;,SPHEROID[&quot;WGS 84&quot;,6378137,298.257223563,AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6326&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AXIS[&quot;Latitude&quot;,NORTH],AXIS[&quot;Longitude&quot;,EAST],AUTHORITY[&quot;EPSG&quot;,&quot;4326&quot;]]</span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span></code></pre></div><h3 id="Plotting-with-Plots.jl" tabindex="-1">Plotting with Plots.jl <a class="header-anchor" href="#Plotting-with-Plots.jl" aria-label="Permalink to &quot;Plotting with Plots.jl {#Plotting-with-Plots.jl}&quot;">​</a></h3><p>First define a function to add borders to all subplots.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> borders!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p, poly)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Plots</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p, poly; subplot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">i, fillalpha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, linewidth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>borders! (generic function with 1 method)</span></span></code></pre></div><p>Now we can plot the individual countries.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(denmark)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">borders!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dp, denmark_border)</span></span></code></pre></div><p><img src="`+d+`" alt=""></p><p>and sweden</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sweden)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">borders!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sp, sweden_border)</span></span></code></pre></div><p><img src="`+r+`" alt=""></p><p>and norway</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">np </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(norway)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">borders!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(np, norway_border)</span></span></code></pre></div><p><img src="`+c+`" alt=""></p><p>The Norway shape includes a lot of islands. Lets crop them out using <code>..</code> intervals:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">norway_region </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> climate[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">55</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">73</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(norway_region)</span></span></code></pre></div><p><img src="`+g+`" alt=""></p><p>And mask it with the border again:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">norway </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mask_trim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(norway_region, norway_border)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">np </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(norway)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">borders!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(np, norway_border)</span></span></code></pre></div><p><img src="`+E+`" alt=""></p><p>Now we can combine the countries into a single raster using mosaic. first will take the first value if/when there is an overlap.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scandinavia </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mosaic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(first, denmark, norway, sweden)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>╭─────────────────────╮</span></span>
<span class="line"><span>│ 177×119 RasterStack │</span></span>
<span class="line"><span>├─────────────────────┴────────────────────────────────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Projected{Float64} 3.166666666666657:0.16666666666666666:32.499999999999986 ForwardOrdered Regular Intervals{Start},</span></span>
<span class="line"><span>  → Y Projected{Float64} 72.66666666666667:-0.16666666666666666:53.00000000000001 ReverseOrdered Regular Intervals{Start}</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── layers ┤</span></span>
<span class="line"><span>  :tmin eltype: Float32 dims: X, Y size: 177×119</span></span>
<span class="line"><span>  :tmax eltype: Float32 dims: X, Y size: 177×119</span></span>
<span class="line"><span>  :prec eltype: Int16 dims: X, Y size: 177×119</span></span>
<span class="line"><span>  :wind eltype: Float32 dims: X, Y size: 177×119</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (3.166666666666657, 32.66666666666665), Y = (53.00000000000001, 72.83333333333334))</span></span>
<span class="line"><span>  missingval: (tmin = -3.4f38,</span></span>
<span class="line"><span> tmax = -3.4f38,</span></span>
<span class="line"><span> prec = -32768,</span></span>
<span class="line"><span> wind = -3.4f38,)</span></span>
<span class="line"><span>  crs: GEOGCS[&quot;WGS 84&quot;,DATUM[&quot;WGS_1984&quot;,SPHEROID[&quot;WGS 84&quot;,6378137,298.257223563,AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6326&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AXIS[&quot;Latitude&quot;,NORTH],AXIS[&quot;Longitude&quot;,EAST],AUTHORITY[&quot;EPSG&quot;,&quot;4326&quot;]]</span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span></code></pre></div><p>And plot scandinavia, with all borders included:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scandinavia)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">borders!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p, denmark_border)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">borders!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p, norway_border)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">borders!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p, sweden_border)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p</span></span></code></pre></div><p><img src="`+u+`" alt=""></p><p>And save to <code>netcdf</code> - a single multi-layered file, and <code>tif</code>, which will write a file for each stack layer.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scandinavia.nc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, scandinavia)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scandinavia.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, scandinavia)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>(tmin = &quot;scandinavia_tmin.tif&quot;,</span></span>
<span class="line"><span> tmax = &quot;scandinavia_tmax.tif&quot;,</span></span>
<span class="line"><span> prec = &quot;scandinavia_prec.tif&quot;,</span></span>
<span class="line"><span> wind = &quot;scandinavia_wind.tif&quot;,)</span></span></code></pre></div><p><code>Rasters.jl</code> provides a range of other methods that are being added to over time. Where applicable these methods read and write lazily to and from disk-based arrays of common raster file types. These methods also work for entire RasterStacks and RasterSeries using the same syntax.</p>`,78)]))}const f=a(y,[["render",m]]);export{D as __pageData,f as default};
