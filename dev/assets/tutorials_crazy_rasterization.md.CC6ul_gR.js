import{_ as i,c as a,o as t,aA as n}from"./chunks/framework.DrVCILDs.js";const e="/Rasters.jl/dev/assets/afzffku.BE0JYikG.png",h="/Rasters.jl/dev/assets/zlcbiah.DI5dNfJT.png",c=JSON.parse('{"title":"Rasterize with crazy things","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/crazy_rasterization.md","filePath":"tutorials/crazy_rasterization.md","lastUpdated":null}'),l={name:"tutorials/crazy_rasterization.md"};function p(k,s,r,d,g,o){return t(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="Rasterize-with-crazy-things" tabindex="-1">Rasterize with crazy things <a class="header-anchor" href="#Rasterize-with-crazy-things" aria-label="Permalink to &quot;Rasterize with crazy things {#Rasterize-with-crazy-things}&quot;">​</a></h1><p>A benefit of being written in pure Julia is that you can do anything you want with <code>rasterize</code> - you can rasterize to any type or combination of types that you can get to work.</p><p>Let&#39;s take an example. Say you want to rasterize all the countries in the world, but where two countries overlap, you want to save the indices of both countries.</p><p>A simple way to do this is to have each pixel of the raster actually be an array of integers, which stores the index of each geometry that touches the pixel.</p><p>First, let&#39;s get some data. This is a feature collection of all countries in the world.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NaturalEarth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> naturalearth</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CairoMakie </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># plotting</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">countries </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> naturalearth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;admin_0_countries&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">poly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(countries</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">geometry; strokewidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><img src="`+e+`" alt="" width="600px" height="450px"></p><p>Next, we can rasterize it. Note that if you&#39;re going beyond the standard datatypes like <code>Int</code>, <code>Float64</code>, etc., you will need to specify some extra kwargs to <code>rasterize</code>, so Rasters doesn&#39;t have to guess what you want.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ras </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rasterize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    countries;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    op </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vcat,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fill </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(countries</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">geometry)], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># By default a Vector with just the current country id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    boundary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :touches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># this one is just for the plot to look good</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># half-degree resolutoin</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Below are the kwargs you have to provide if using a</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # custom type that might not have e.g. \`zero\` defined</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    eltype </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vector{Int},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    missingval </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Int[], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># empty vector of Int</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    init </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Int[],       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># empty vector of Int</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">┌ </span><span style="--shiki-light:#ff875f;--shiki-dark:#ff875f;">721</span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">×</span><span style="--shiki-light:#0087d7;--shiki-dark:#0087d7;">348</span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;"> Raster{Vector{Int64}, 2}</span><span style="--shiki-light:#00afaf;--shiki-dark:#00afaf;"> nothing</span><span style="--shiki-light:#959da5;--shiki-dark:#959da5;"> ┐</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">├──────────────────────────────────────────┴───────────────────────────── dims ┐</span></span>
<span class="line"><span style="--shiki-light:#ff875f;--shiki-dark:#ff875f;">  ↓ </span><span style="--shiki-light:#ff875f;--shiki-dark:#ff875f;">X</span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;"> Sampled{Float64} </span><span style="--shiki-light:#ff875f;--shiki-dark:#ff875f;">-180.0:0.5:180.0</span><span style="--shiki-light:#808080;--shiki-dark:#808080;"> ForwardOrdered</span><span style="--shiki-light:#808080;--shiki-dark:#808080;"> Regular</span><span style="--shiki-light:#808080;--shiki-dark:#808080;"> Intervals{Start}</span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">,</span></span>
<span class="line"><span style="--shiki-light:#0087d7;--shiki-dark:#0087d7;">  → </span><span style="--shiki-light:#0087d7;--shiki-dark:#0087d7;">Y</span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;"> Sampled{Float64} </span><span style="--shiki-light:#0087d7;--shiki-dark:#0087d7;">-90.0:0.5:83.5</span><span style="--shiki-light:#808080;--shiki-dark:#808080;"> ForwardOrdered</span><span style="--shiki-light:#808080;--shiki-dark:#808080;"> Regular</span><span style="--shiki-light:#808080;--shiki-dark:#808080;"> Intervals{Start}</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">├──────────────────────────────────────────────────────────────────── metadata ┤</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">  Metadata</span><span style="--shiki-light:#959da5;--shiki-dark:#959da5;"> of </span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">Dict{Any, Any} with 1 entry:</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">  &quot;missed_geometries&quot; =&gt; Bool[0, 0, 0, 0, 0, 0, 0, 0, 0, 0  …  0, 0, 0, 0, 0, 0…</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">  missingval: </span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">Int64[]</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">  extent: </span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">Extent(X = (-180.0, 180.5), Y = (-90.0, 84.0))</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">└──────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span style="--shiki-light:#ff875f;--shiki-dark:#ff875f;">    ↓</span><span style="--shiki-light:#0087d7;--shiki-dark:#0087d7;"> →</span><span style="--shiki-light:#0087d7;--shiki-dark:#0087d7;">  -90.0</span><span style="--shiki-light:#0087d7;--shiki-dark:#0087d7;">     -89.5</span><span style="--shiki-light:#0087d7;--shiki-dark:#0087d7;">     -89.0</span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">     …  </span><span style="--shiki-light:#0087d7;--shiki-dark:#0087d7;">81.0</span><span style="--shiki-light:#0087d7;--shiki-dark:#0087d7;">  81.5</span><span style="--shiki-light:#0087d7;--shiki-dark:#0087d7;">  82.0</span><span style="--shiki-light:#0087d7;--shiki-dark:#0087d7;">  82.5</span><span style="--shiki-light:#0087d7;--shiki-dark:#0087d7;">  83.0</span><span style="--shiki-light:#0087d7;--shiki-dark:#0087d7;">  83.5</span></span>
<span class="line"><span style="--shiki-light:#ff875f;--shiki-dark:#ff875f;"> -180.0</span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">     [176]     [176]     [176]       []    []    []    []    []    []</span></span>
<span class="line"><span style="--shiki-light:#ff875f;--shiki-dark:#ff875f;"> -179.5</span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">     [176]     [176]     [176]       []    []    []    []    []    []</span></span>
<span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">    ⋮                                  ⋱               ⋮                </span></span>
<span class="line"><span style="--shiki-light:#ff875f;--shiki-dark:#ff875f;">  179.5</span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">     [176]     [176]     [176]  …    []    []    []    []    []    []</span></span>
<span class="line"><span style="--shiki-light:#ff875f;--shiki-dark:#ff875f;">  180.0</span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">     [176]     [176]     [176]       []    []    []    []    []    []</span></span></code></pre></div><p>You can also see that this has a <em>lot</em> of unique values:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unique</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ras))</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">755</span></span></code></pre></div><p>It&#39;s clearest if you plot a heatmap of the lengths of each cell:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">heatmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(ras))</span></span></code></pre></div><p><img src="`+h+'" alt="" width="600px" height="450px"></p>',16)])])}const E=i(l,[["render",p]]);export{c as __pageData,E as default};
