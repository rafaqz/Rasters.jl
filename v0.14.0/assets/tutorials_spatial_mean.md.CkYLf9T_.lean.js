import{_ as t,c as n,ai as i,j as a,a as p,G as l,B as h,o as r}from"./chunks/framework.B5PEIasK.js";const k="/Rasters.jl/v0.14.0/assets/jwucjbd.BCgNrSTH.png",o="/Rasters.jl/v0.14.0/assets/zqyvmdd.D-TYhoHQ.png",d="/Rasters.jl/v0.14.0/assets/hfhjmdx.CPrVXbo5.png",v=JSON.parse('{"title":"Computing spatial means","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/spatial_mean.md","filePath":"tutorials/spatial_mean.md","lastUpdated":null}'),c={name:"tutorials/spatial_mean.md"},g={class:"jldocstring custom-block"};function u(E,s,m,y,C,F){const e=h("Badge");return r(),n("div",null,[s[3]||(s[3]=i(`<h1 id="Computing-spatial-means" tabindex="-1">Computing spatial means <a class="header-anchor" href="#Computing-spatial-means" aria-label="Permalink to &quot;Computing spatial means {#Computing-spatial-means}&quot;">​</a></h1><p>It&#39;s very common to want to compute the mean of some value over some area of a raster. The initial approach is to simply average the values, but this will give you the arithmetic mean, not the spatial mean.</p><p>The reason for this is that raster cells do not always have the same area, especially over a large region of the Earth where its curvature comes into play.</p><p>To compute the spatial mean, you need to weight the values by the area of each cell. You can do this by multiplying the values by the cell area, then summing the values, and dividing that number by the total area. That was the motivation for this example.</p><p>Let&#39;s get the rainfall over Chile, and compute the average rainfall across the country for the month of June.</p><h2 id="Acquiring-the-data" tabindex="-1">Acquiring the data <a class="header-anchor" href="#Acquiring-the-data" aria-label="Permalink to &quot;Acquiring the data {#Acquiring-the-data}&quot;">​</a></h2><p>We&#39;ll get the precipitation data across the globe from <a href="https://www.worldclim.org/data/index.html" target="_blank" rel="noreferrer">WorldClim</a>, via <a href="https://github.com/EcoJulia/RasterDataSources.jl" target="_blank" rel="noreferrer">RasterDataSources.jl</a>, and use the <code>month</code> keyword argument to get the June data.</p><p>Then, we can get the geometry of Chile from <a href="https://github.com/JuliaGeo/NaturalEarth.jl" target="_blank" rel="noreferrer">NaturalEarth.jl</a>, and use <code>Rasters.mask</code> to get the data just for Chile.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Proj </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># to activate the spherical \`cellarea\` method</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ArchGDAL, RasterDataSources, NaturalEarth </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># purely for data loading</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CairoMakie </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># for plotting</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">precip </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{Climate}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:prec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; month </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌ 2160×1080 Raster{Union{Missing, Int16}, 2} prec ┐</span></span>
<span class="line"><span>├─────────────────────────────────────────────────┴────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Projected{Float64} -180.0:0.16666666666666666:179.83333333333331 ForwardOrdered Regular Intervals{Start},</span></span>
<span class="line"><span>  → Y Projected{Float64} 89.83333333333333:-0.16666666666666666:-90.0 ReverseOrdered Regular Intervals{Start}</span></span>
<span class="line"><span>├──────────────────────────────────────────────────────────────────── metadata ┤</span></span>
<span class="line"><span>  Metadata{Rasters.GDALsource} of Dict{String, Any} with 1 entry:</span></span>
<span class="line"><span>  &quot;filepath&quot; =&gt; &quot;./WorldClim/Climate/prec/wc2.1_10m_prec_06.tif&quot;</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (-180.0, 179.99999999999997), Y = (-90.0, 90.0))</span></span>
<span class="line"><span>  missingval: missing</span></span>
<span class="line"><span>  crs: GEOGCS[&quot;WGS 84&quot;,DATUM[&quot;WGS_1984&quot;,SPHEROID[&quot;WGS 84&quot;,6378137,298.257223563,AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6326&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AXIS[&quot;Latitude&quot;,NORTH],AXIS[&quot;Longitude&quot;,EAST],AUTHORITY[&quot;EPSG&quot;,&quot;4326&quot;]]</span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>    ↓ →    89.8333    89.6667    …  -89.5  -89.6667  -89.8333  -90.0</span></span>
<span class="line"><span> -180.0      missing    missing       0      0         0         0</span></span>
<span class="line"><span> -179.833    missing    missing       0      0         0         0</span></span>
<span class="line"><span>    ⋮                            ⋱                               ⋮</span></span>
<span class="line"><span>  179.5      missing    missing       0      0         0         0</span></span>
<span class="line"><span>  179.667    missing    missing       0      0         0         0</span></span>
<span class="line"><span>  179.833    missing    missing  …    0      0         0         0</span></span></code></pre></div><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">all_countries </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> naturalearth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;admin_0_countries&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> all_countries</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">geometry[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">findfirst</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Chile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), all_countries</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NAME)]</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>2D MultiPolygonwith 163 sub-geometries</span></span></code></pre></div><p>Let&#39;s plot the precipitation on the world map, and highlight Chile:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f, a, p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> heatmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(precip; colorrange </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zscale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">replace_missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(precip, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NaN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)), axis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (; aspect </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DataAspect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> poly!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, chile; color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), strokecolor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, strokewidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f</span></span></code></pre></div><p><img src="`+k+`" alt=""></p><p>You can see Chile highlighted in red, in the bottom left quadrant.</p><h2 id="Processing-the-data" tabindex="-1">Processing the data <a class="header-anchor" href="#Processing-the-data" aria-label="Permalink to &quot;Processing the data {#Processing-the-data}&quot;">​</a></h2><p>First, let&#39;s make sure that we only have the data that we care about, and crop and mask the raster so it only has values in Chile. We can crop by the geometry, which really just generates a view into the raster that is bounded by the geometry&#39;s bounding box.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cropped_precip </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> crop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(precip; to </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chile)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌ 257×229 Raster{Union{Missing, Int16}, 2} prec ┐</span></span>
<span class="line"><span>├───────────────────────────────────────────────┴──────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Projected{Float64} -109.33333333333334:0.16666666666666666:-66.66666666666667 ForwardOrdered Regular Intervals{Start},</span></span>
<span class="line"><span>  → Y Projected{Float64} -17.833333333333332:-0.16666666666666666:-55.833333333333336 ReverseOrdered Regular Intervals{Start}</span></span>
<span class="line"><span>├──────────────────────────────────────────────────────────────────── metadata ┤</span></span>
<span class="line"><span>  Metadata{Rasters.GDALsource} of Dict{String, Any} with 1 entry:</span></span>
<span class="line"><span>  &quot;filepath&quot; =&gt; &quot;./WorldClim/Climate/prec/wc2.1_10m_prec_06.tif&quot;</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (-109.33333333333334, -66.5), Y = (-55.833333333333336, -17.666666666666664))</span></span>
<span class="line"><span>  missingval: missing</span></span>
<span class="line"><span>  crs: GEOGCS[&quot;WGS 84&quot;,DATUM[&quot;WGS_1984&quot;,SPHEROID[&quot;WGS 84&quot;,6378137,298.257223563,AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6326&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AXIS[&quot;Latitude&quot;,NORTH],AXIS[&quot;Longitude&quot;,EAST],AUTHORITY[&quot;EPSG&quot;,&quot;4326&quot;]]</span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>    ↓ →     -17.8333    -18.0       …  -55.5       -55.6667    -55.8333</span></span>
<span class="line"><span> -109.333      missing     missing        missing     missing     missing</span></span>
<span class="line"><span> -109.167      missing     missing        missing     missing     missing</span></span>
<span class="line"><span>    ⋮                               ⋱                          </span></span>
<span class="line"><span>  -67.0       6           4         …   61            missing     missing</span></span>
<span class="line"><span>  -66.8333    7           6               missing   66          74</span></span>
<span class="line"><span>  -66.6667    6           5               missing     missing     missing</span></span></code></pre></div><p>Now, we mask the data such that any data outside the geometry is set to <code>missing</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">masked_precip </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cropped_precip; with </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chile)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">heatmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(masked_precip)</span></span></code></pre></div><p><img src="`+o+'" alt=""></p><p>This is a lot of missing data, but that&#39;s mainly because the Chile geometry we have encompasses the Easter Islands as well, in the middle of the Pacific.</p>',24)),a("details",g,[a("summary",null,[s[0]||(s[0]=a("a",{id:"Rasters.cellarea-tutorials-spatial_mean",href:"#Rasters.cellarea-tutorials-spatial_mean"},[a("span",{class:"jlbinding"},"Rasters.cellarea")],-1)),s[1]||(s[1]=p()),l(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[2]||(s[2]=i(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cellarea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([method], x)</span></span></code></pre></div><p>Gives the approximate area of each gridcell of <code>x</code>. By assuming the earth is a sphere, it approximates the true size to about 0.1%, depending on latitude.</p><p>Run <code>using ArchGDAL</code> or <code>using Proj</code> to make this method fully available.</p><ul><li><p><code>method</code>: You can specify whether you want to compute the area in the plane of your projection <code>Planar()</code> or on a sphere of some radius <code>Spherical(; radius=...)</code>(the default).</p></li><li><p><code>Spherical</code> will compute cell area on the sphere, by transforming all points back to long-lat. You can specify the radius by the <code>radius</code> keyword argument here. By default, this is <code>6371008.8</code>, the mean radius of the Earth.</p></li><li><p><code>Planar</code> will compute cell area in the plane of the CRS you have chosen. Be warned that this will likely be incorrect for non-equal-area projections.</p></li></ul><p>Returns a Raster with the same x and y dimensions as the input, where each value in the raster encodes the area of the cell (in meters by default).</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, Proj, Rasters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Lookups</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xdim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Projected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; sampling</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Intervals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()), crs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EPSG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4326</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ydim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Projected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; sampling</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Intervals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()), crs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EPSG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4326</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myraster </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xdim, ydim)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cellarea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(myraster)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">╭───────────────────────╮</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">×</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Raster{Float64,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} │</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├───────────────────────┴─────────────────────────────────────────────────── dims ┐</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ↓</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> X Projected{Float64} </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ForwardOrdered Regular Intervals{Start},</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  →</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Y Projected{Float64} </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ForwardOrdered Regular Intervals{Start}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├───────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  extent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Extent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">130.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), Y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  crs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EPSG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4326</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">└─────────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ↓</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> →</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        10.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        20.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        30.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            40.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      50.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  90.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.23017e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.19279e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.11917e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.01154e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  873182.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  708290.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.23017e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.19279e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.11917e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.01154e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  873182.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  708290.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 110.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.23017e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.19279e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.11917e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.01154e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  873182.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  708290.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 120.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.23017e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.19279e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.11917e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.01154e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  873182.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  708290.0</span></span></code></pre></div><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/extensions.jl#L165-L209" target="_blank" rel="noreferrer">source</a></p>`,9))]),s[4]||(s[4]=i(`<p><code>cellarea</code> computes the area of each cell in a raster. This is useful for a number of reasons - if you have a variable like population per cell, or elevation (<a href="https://r-spatial.org/book/05-Attributes.html#sec-extensiveintensive" target="_blank" rel="noreferrer">spatially extensive variables</a>), you&#39;ll want to account for the fact that different cells have different areas.</p><p>You can specify whether you want to compute the area in the plane of your projection (<code>Planar()</code>), or on a sphere of some radius (<code>Spherical(; radius=...)</code>).</p><p>Now, let&#39;s compute the average precipitation per square meter across Chile. First, we need to get the area of each cell in square meters. We&#39;ll use the spherical method, since we&#39;re working with a geographic coordinate system. This is the default.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">areas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cellarea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(masked_precip)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">masked_areas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(areas; with </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chile)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">heatmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(masked_areas; axis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (; title </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Cell area in square meters&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p><img src="`+d+`" alt=""></p><p>You can see here that cells are largest towards the equator, and smallest away from it. This means that cells away from the equator should have a smaller contribution to the average than cells nearer the equator.</p><h2 id="Computing-the-spatial-mean" tabindex="-1">Computing the spatial mean <a class="header-anchor" href="#Computing-the-spatial-mean" aria-label="Permalink to &quot;Computing the spatial mean {#Computing-the-spatial-mean}&quot;">​</a></h2><p>Now we can compute the average precipitation per square meter. First, we compute total precipitation over each grid cell. (The units of this Raster will be m^2 * mm, which happens to be equal to liter.)</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">precip_per_area </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> masked_precip </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> masked_areas</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌ 257×229 Raster{Union{Missing, Float64}, 2} ┐</span></span>
<span class="line"><span>├────────────────────────────────────────────┴─────────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Projected{Float64} -109.33333333333334:0.16666666666666666:-66.66666666666667 ForwardOrdered Regular Intervals{Start},</span></span>
<span class="line"><span>  → Y Projected{Float64} -17.833333333333332:-0.16666666666666666:-55.833333333333336 ReverseOrdered Regular Intervals{Start}</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (-109.33333333333334, -66.5), Y = (-55.833333333333336, -17.666666666666664))</span></span>
<span class="line"><span>  missingval: missing</span></span>
<span class="line"><span>  crs: GEOGCS[&quot;WGS 84&quot;,DATUM[&quot;WGS_1984&quot;,SPHEROID[&quot;WGS 84&quot;,6378137,298.257223563,AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6326&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AXIS[&quot;Latitude&quot;,NORTH],AXIS[&quot;Longitude&quot;,EAST],AUTHORITY[&quot;EPSG&quot;,&quot;4326&quot;]]</span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>    ↓ →     -17.8333    -18.0       …  -55.5       -55.6667    -55.8333</span></span>
<span class="line"><span> -109.333      missing     missing        missing     missing     missing</span></span>
<span class="line"><span> -109.167      missing     missing        missing     missing     missing</span></span>
<span class="line"><span> -109.0        missing     missing        missing     missing     missing</span></span>
<span class="line"><span> -108.833      missing     missing        missing     missing     missing</span></span>
<span class="line"><span>    ⋮                               ⋱                          </span></span>
<span class="line"><span>  -67.3333     missing     missing        missing     missing     missing</span></span>
<span class="line"><span>  -67.1667     missing     missing        missing     missing     missing</span></span>
<span class="line"><span>  -67.0        missing     missing  …     missing     missing     missing</span></span>
<span class="line"><span>  -66.8333     missing     missing        missing     missing     missing</span></span>
<span class="line"><span>  -66.6667     missing     missing        missing     missing     missing</span></span></code></pre></div><p>We can sum this to get the total precipitation across Chile:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">total_precip </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">skipmissing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(precip_per_area))</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>8.143158931480214e13</span></span></code></pre></div><p>We can also sum the areas to get the total area of Chile (in this raster, at least).</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">total_area </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">skipmissing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(masked_areas))</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>7.344109655259728e11</span></span></code></pre></div><p>And we can convert that to an average (in mm) by dividing by the total area:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">avg_precip </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> total_precip </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> total_area</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>110.88013814783145</span></span></code></pre></div><p>According to the internet, Chile gets about 100mm of rain per square meter in June, so our statistic seems pretty close.</p><p>Let&#39;s see what happens if we don&#39;t account for cell areas. An equivalent assumption would be that all cells have the same area.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bad_total_precip </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">skipmissing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(masked_precip))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bad_avg_precip </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bad_total_precip </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">skipmissing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(masked_precip)))</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>118.05119825708061</span></span></code></pre></div><p>This is misestimated! This is why it&#39;s important to account for cell areas when computing averages.</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>If you made it this far, congratulations!</p><p>It&#39;s interesting to note that we&#39;ve replicated the workflow of <code>zonal</code> here. <code>zonal</code> is a more general function that can be used to compute any function over geometries, and it has multithreading built in.</p><p>But fundamentally, this is all that <code>zonal</code> is doing under the hood - masking and cropping the raster to the geometry, and then computing the statistic.</p></div><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>In this tutorial, we&#39;ve seen how to compute the spatial mean of a raster, and how to account for the fact that raster cells do not always have the same area.</p><p>We&#39;ve also seen how to use the <code>cellarea</code> function to compute the area of each cell in a raster, and how to use the <code>mask</code> function to get the data within a geometry.</p><p>We&#39;ve seen that the spatial mean is not the same as the arithmetic mean, and that we need to account for the area of each cell when computing the average.</p><h2 id="Bonus:-Computing-spatial-means-across-dimensions" tabindex="-1">Bonus: Computing spatial means across dimensions <a class="header-anchor" href="#Bonus:-Computing-spatial-means-across-dimensions" aria-label="Permalink to &quot;Bonus: Computing spatial means across dimensions {#Bonus:-Computing-spatial-means-across-dimensions}&quot;">​</a></h2><p>As a next step, we would like to know how precipitation will change in Chile until the end of the 21st century. To do this, we can use climate model outputs. This is a bit more complicated than calculating historical precipitation, because the forecast data can come from multiple climate models (GCMs), which each can be run under different socio-economic scenarios (SSPs). Here, we&#39;ll show how to use additional dimensions to keep track of this type of data.</p><p>To start, we define a simple function that takes an SSP (socioeconomic scenario) and a GCM (climate model) as input, and return the appropriate climate data.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Dates</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getfutureprec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ssp, gcm) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{Future{Climate, CMIP6, gcm, ssp}}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:prec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2090</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>getfutureprec (generic function with 1 method)</span></span></code></pre></div><p>Rather than having a seperate Raster object for each combination of GCM and SSP, we will do our analysis on a single Raster, which will have <code>gcm</code> and <code>ssp</code> as additional dimensions. In total, our Raster will have four dimensions: X, Y, gcm, and ssp.</p><p>To accomplish this, we will leverage some tools from <a href="https://github.com/rafaqz/DimensionalData.jl" target="_blank" rel="noreferrer">DimensionalData</a>, which is the package that underlies Rasters.jl. We start by defining two dimensions that correspond to the SSPs and GCMs we are interested in, then use the <code>@d</code> macro from <a href="https://github.com/rafaqz/DimensionalData.jl" target="_blank" rel="noreferrer">DimensionalData</a> to preserve these dimensions as we get the data, and then combine all Rasters into a single object using <code>Rasters.combine</code>.</p><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SSPs = Dim{:ssp}([SSP126, SSP370]) # SSP126 is a low-emission scenario, SSP370 is a high-emission scenario</span></span>
<span class="line"><span>GCMs = Dim{:gcm}([GFDL_ESM4, IPSL_CM6A_LR]) # These are different general circulation (climate) models</span></span>
<span class="line"><span></span></span>
<span class="line"><span>precip_future = (@d getfutureprec.(SSPs, GCMs)) |&gt; RasterSeries |&gt; Rasters.combine</span></span></code></pre></div><p>Since the format of WorldClim&#39;s datasets for future climate is slightly different from the dataset for the historical period, this actually returned a 5-dimensional raster, with a <code>Band</code> dimension that represents months. Here we&#39;ll just select the 6th month, matching the selection above (but note that the analysis would also work for all Bands simultaneously). We will also replace the <code>NaN</code> missing value by the more standard <code>missing</code> using <a href="/Rasters.jl/v0.14.0/tutorials/array_operations#replace_missing"><code>replace_missing</code></a>.</p><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>precip_future = precip_future[Band = 6]</span></span>
<span class="line"><span>precip_future = replace_missing(precip_future)</span></span></code></pre></div><p>On our 4-dimensional raster, functions like <code>crop</code> and <code>mask</code>, as well as broadcasting, will still work.</p><p>Here we repeat the procedure from above to mask out areas so we only have data for Chile, and then multiply by the cell area.</p><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>masked_precip_future = mask(crop(precip_future; to = chile); with = chile)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>precip_litres_future = masked_precip_future .* areas</span></span></code></pre></div><p>Now we calculate the average precipitation for each SSP and each GCM. Annoyingly, the future WorldClim doesn&#39;t have data for all land pixels, so we have to re-calculate the total area.</p><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>masked_areas_future = mask(areas, with = masked_precip_future[ssp = 1, gcm = 1])</span></span>
<span class="line"><span>total_area_f = sum(skipmissing(masked_areas_future))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>avg_prec_future = map(eachslice(precip_litres_future; dims = (:ssp, :gcm))) do slice</span></span>
<span class="line"><span>   sum(skipmissing(slice)) / total_area_f</span></span>
<span class="line"><span>end</span></span></code></pre></div><p>Which shows us that June rainfall in Chile will be slightly lower in the future, especially under the high-emission SSP370 scenario.</p>`,45))])}const f=t(c,[["render",u]]);export{v as __pageData,f as default};
