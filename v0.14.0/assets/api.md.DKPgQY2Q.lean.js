import{_ as l,c as o,ai as t,j as i,a as e,G as n,B as p,o as r}from"./chunks/framework.B5PEIasK.js";const h="/Rasters.jl/v0.14.0/assets/aggregate_example.vPDkaGne.png",d="/Rasters.jl/v0.14.0/assets/boolmask_example.B6nOyO_A.png",k="/Rasters.jl/v0.14.0/assets/classify_example.D0ZS4s3g.png",c="/Rasters.jl/v0.14.0/assets/classify_bang_example.Ch0DZvbI.png",g="/Rasters.jl/v0.14.0/assets/nz_crop_example.Dgn6MbZF.png",E="/Rasters.jl/v0.14.0/assets/argentina_crop_example.DlKBBk5m.png",y="/Rasters.jl/v0.14.0/assets/extend_example.DNJ4wwKN.png",u="/Rasters.jl/v0.14.0/assets/boolmask_example.B6nOyO_A.png",m="/Rasters.jl/v0.14.0/assets/mosaic_bang_example.Cvk5RuyI.png",b="/Rasters.jl/v0.14.0/assets/mosaic_example_combined.YolyGcS6.png",F="/Rasters.jl/v0.14.0/assets/china_rasterized.kM95Jnlf.png",f="/Rasters.jl/v0.14.0/assets/indonesia_rasterized.CAASrLmh.png",C="/Rasters.jl/v0.14.0/assets/warp_example_before.DrW8As6m.png",A="/Rasters.jl/v0.14.0/assets/resample_example_after.C_gavhhT.png",v="/Rasters.jl/v0.14.0/assets/trim_example_before.CicUDTMv.png",R="/Rasters.jl/v0.14.0/assets/trim_example_after.DqVtyr0a.png",D="/Rasters.jl/v0.14.0/assets/warp_example_before.DrW8As6m.png",B="/Rasters.jl/v0.14.0/assets/warp_example_after.rgHHAHxc.png",Ys=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":null}'),j={name:"api.md"},w={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},z={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""},W={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},K={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},Y={class:"jldocstring custom-block",open:""},X={class:"jldocstring custom-block",open:""},H={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},Z={class:"jldocstring custom-block",open:""},$={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},ss={class:"jldocstring custom-block",open:""},is={class:"jldocstring custom-block",open:""},es={class:"jldocstring custom-block",open:""},as={class:"jldocstring custom-block",open:""},ts={class:"jldocstring custom-block",open:""},ns={class:"jldocstring custom-block",open:""},ls={class:"jldocstring custom-block",open:""},os={class:"jldocstring custom-block",open:""},ps={class:"jldocstring custom-block",open:""},rs={class:"jldocstring custom-block",open:""},hs={class:"jldocstring custom-block",open:""},ds={class:"jldocstring custom-block",open:""},ks={class:"jldocstring custom-block",open:""},cs={class:"jldocstring custom-block",open:""},gs={class:"jldocstring custom-block",open:""},Es={class:"jldocstring custom-block",open:""},ys={class:"jldocstring custom-block",open:""},us={class:"jldocstring custom-block",open:""},ms={class:"jldocstring custom-block",open:""},bs={class:"jldocstring custom-block",open:""},Fs={class:"jldocstring custom-block",open:""},fs={class:"jldocstring custom-block",open:""},Cs={class:"jldocstring custom-block",open:""},As={class:"jldocstring custom-block",open:""},vs={class:"jldocstring custom-block",open:""},Rs={class:"jldocstring custom-block",open:""},Ds={class:"jldocstring custom-block",open:""},Bs={class:"jldocstring custom-block",open:""},js={class:"jldocstring custom-block",open:""},ws={class:"jldocstring custom-block",open:""},xs={class:"jldocstring custom-block",open:""},Ts={class:"jldocstring custom-block",open:""},Ss={class:"jldocstring custom-block",open:""},qs={class:"jldocstring custom-block",open:""},Is={class:"jldocstring custom-block",open:""},Ls={class:"jldocstring custom-block",open:""},zs={class:"jldocstring custom-block",open:""},Ns={class:"jldocstring custom-block",open:""},Gs={class:"jldocstring custom-block",open:""},Ms={class:"jldocstring custom-block",open:""};function Os(Ps,s,Us,Ws,_s,Ks){const a=p("Badge");return r(),o("div",null,[s[195]||(s[195]=t('<h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><ul><li><a href="#Rasters.Rasters"><code>Rasters.Rasters</code></a></li><li><a href="#Rasters.AbstractProjected"><code>Rasters.AbstractProjected</code></a></li><li><a href="#Rasters.AbstractRaster"><code>Rasters.AbstractRaster</code></a></li><li><a href="#Rasters.AbstractRasterSeries"><code>Rasters.AbstractRasterSeries</code></a></li><li><a href="#Rasters.AbstractRasterStack"><code>Rasters.AbstractRasterStack</code></a></li><li><a href="#Rasters.Band"><code>Rasters.Band</code></a></li><li><a href="#Rasters.FileArray"><code>Rasters.FileArray</code></a></li><li><a href="#Rasters.FileStack"><code>Rasters.FileStack</code></a></li><li><a href="#Rasters.Mapped"><code>Rasters.Mapped</code></a></li><li><a href="#Rasters.OpenStack"><code>Rasters.OpenStack</code></a></li><li><a href="#Rasters.Projected"><code>Rasters.Projected</code></a></li><li><a href="#Rasters.Raster"><code>Rasters.Raster</code></a></li><li><a href="#Rasters.RasterDiskArray"><code>Rasters.RasterDiskArray</code></a></li><li><a href="#Rasters.RasterSeries"><code>Rasters.RasterSeries</code></a></li><li><a href="#Rasters.RasterStack"><code>Rasters.RasterStack</code></a></li><li><a href="#Rasters.aggregate"><code>Rasters.aggregate</code></a></li><li><a href="#Rasters.aggregate!-Tuple{Locus, AbstractRaster, Any, Any}"><code>Rasters.aggregate!</code></a></li><li><a href="#Rasters.boolmask"><code>Rasters.boolmask</code></a></li><li><a href="#Rasters.cellarea-Tuple{Any}"><code>Rasters.cellarea</code></a></li><li><a href="#Rasters.checkmem!-Tuple{Bool}"><code>Rasters.checkmem!</code></a></li><li><a href="#Rasters.classify"><code>Rasters.classify</code></a></li><li><a href="#Rasters.classify!-Tuple{AbstractRaster, Pair, Vararg{Pair}}"><code>Rasters.classify!</code></a></li><li><a href="#Rasters.combine-Tuple{AbstractRasterSeries}"><code>Rasters.combine</code></a></li><li><a href="#Rasters.convertlookup-Tuple{Type{&lt;:Lookup}, AbstractDimArray}"><code>Rasters.convertlookup</code></a></li><li><a href="#Rasters.coverage-Tuple{Any}"><code>Rasters.coverage</code></a></li><li><a href="#Rasters.coverage!-Tuple{Union{typeof(sum), typeof(union)}, AbstractRaster, Any}"><code>Rasters.coverage!</code></a></li><li><a href="#Rasters.crop"><code>Rasters.crop</code></a></li><li><a href="#Rasters.disaggregate"><code>Rasters.disaggregate</code></a></li><li><a href="#Rasters.disaggregate!-Tuple{AbstractRaster, Any, Any}"><code>Rasters.disaggregate!</code></a></li><li><a href="#Rasters.extend"><code>Rasters.extend</code></a></li><li><a href="#Rasters.extract"><code>Rasters.extract</code></a></li><li><a href="#Rasters.mappedbounds"><code>Rasters.mappedbounds</code></a></li><li><a href="#Rasters.mappedcrs"><code>Rasters.mappedcrs</code></a></li><li><a href="#Rasters.mappedindex"><code>Rasters.mappedindex</code></a></li><li><a href="#Rasters.mask-Tuple{Any}"><code>Rasters.mask</code></a></li><li><a href="#Rasters.mask!"><code>Rasters.mask!</code></a></li><li><a href="#Rasters.missingmask-Tuple{Any}"><code>Rasters.missingmask</code></a></li><li><a href="#Rasters.missingval"><code>Rasters.missingval</code></a></li><li><a href="#Rasters.mosaic-Tuple{Function, Union{AbstractRaster, AbstractRasterStack}, Vararg{Union{AbstractRaster, AbstractRasterStack}}}"><code>Rasters.mosaic</code></a></li><li><a href="#Rasters.mosaic!-Tuple{Function, Union{AbstractRaster, AbstractRasterStack}, Vararg{Union{AbstractRaster, AbstractRasterStack}}}"><code>Rasters.mosaic!</code></a></li><li><a href="#Rasters.points-Tuple{AbstractRaster}"><code>Rasters.points</code></a></li><li><a href="#Rasters.rasterize"><code>Rasters.rasterize</code></a></li><li><a href="#Rasters.rasterize!"><code>Rasters.rasterize!</code></a></li><li><a href="#Rasters.replace_missing-Tuple{Any}"><code>Rasters.replace_missing</code></a></li><li><a href="#Rasters.reproject-NTuple{4, Any}"><code>Rasters.reproject</code></a></li><li><a href="#Rasters.reproject-Tuple{Any}"><code>Rasters.reproject</code></a></li><li><a href="#Rasters.resample-Tuple"><code>Rasters.resample</code></a></li><li><a href="#Rasters.rplot"><code>Rasters.rplot</code></a></li><li><a href="#Rasters.rplot-Tuple"><code>Rasters.rplot</code></a></li><li><a href="#Rasters.sample-Tuple"><code>Rasters.sample</code></a></li><li><a href="#Rasters.setcrs-Tuple{Union{AbstractRaster, AbstractRasterStack}, Any}"><code>Rasters.setcrs</code></a></li><li><a href="#Rasters.setmappedcrs-Tuple{Union{AbstractRaster, AbstractRasterStack}, Any}"><code>Rasters.setmappedcrs</code></a></li><li><a href="#Rasters.slice-Tuple{Union{AbstractRaster, AbstractRasterStack}, Any}"><code>Rasters.slice</code></a></li><li><a href="#Rasters.trim-Tuple{Union{AbstractRaster, AbstractRasterStack}}"><code>Rasters.trim</code></a></li><li><a href="#Rasters.warp-Tuple"><code>Rasters.warp</code></a></li><li><a href="#Rasters.zonal-Tuple{Any, Union{AbstractRaster, AbstractRasterStack}}"><code>Rasters.zonal</code></a></li></ul><h2 id="Reference-Exported-functions" tabindex="-1">Reference - Exported functions <a class="header-anchor" href="#Reference-Exported-functions" aria-label="Permalink to &quot;Reference - Exported functions {#Reference-Exported-functions}&quot;">​</a></h2>',3)),i("details",w,[i("summary",null,[s[0]||(s[0]=i("a",{id:"Rasters.Rasters",href:"#Rasters.Rasters"},[i("span",{class:"jlbinding"},"Rasters.Rasters")],-1)),s[1]||(s[1]=e()),n(a,{type:"info",class:"jlObjectType jlModule",text:"Module"})]),s[2]||(s[2]=i("p",null,[i("a",{href:"https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/Rasters.jl#L4",target:"_blank",rel:"noreferrer"},"source")],-1))]),i("details",x,[i("summary",null,[s[3]||(s[3]=i("a",{id:"Rasters.AbstractRaster",href:"#Rasters.AbstractRaster"},[i("span",{class:"jlbinding"},"Rasters.AbstractRaster")],-1)),s[4]||(s[4]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[5]||(s[5]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractRaster </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DimensionalData.AbstractDimArray</span></span></code></pre></div><p>Abstract supertype for objects that wrap an array (or location of an array) and metadata about its contents. It may be memory or hold a <code>FileArray</code>, which holds the filename, and is only opened when required.</p><p><code>AbstractRaster</code>s inherit from <a href="https://rafaqz.github.io/DimensionalData.jl/stable/api/#DimensionalData.AbstractDimensionalArray" target="_blank" rel="noreferrer"><code>AbstractDimArray</code></a> from DimensionalData.jl. They can be indexed as regular Julia arrays or with DimensionalData.jl <a href="https://rafaqz.github.io/DimensionalData.jl/stable/api/#DimensionalData.Dimension" target="_blank" rel="noreferrer"><code>Dimension</code></a>s. They will plot as a heatmap in Plots.jl with correct coordinates and labels, even after slicing with <code>getindex</code> or <code>view</code>. <code>getindex</code> on a <code>AbstractRaster</code> will always return a memory-backed <code>Raster</code>.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/array.jl#L22-L35" target="_blank" rel="noreferrer">source</a></p>',4))]),i("details",T,[i("summary",null,[s[6]||(s[6]=i("a",{id:"Rasters.AbstractRasterSeries",href:"#Rasters.AbstractRasterSeries"},[i("span",{class:"jlbinding"},"Rasters.AbstractRasterSeries")],-1)),s[7]||(s[7]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[8]||(s[8]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractRasterSeries </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DimensionalData.AbstractDimensionalArray</span></span></code></pre></div><p>Abstract supertype for high-level <code>DimensionalArray</code> that hold <code>RasterStacks</code>, <code>Rasters</code>, or the paths they can be loaded from. <code>RasterSeries</code> are indexed with dimensions as with a <code>AbstractRaster</code>. This is useful when you have multiple files containing rasters or stacks of rasters spread over dimensions like time and elevation.</p><p>As much as possible, implementations should facilitate loading entire directories and detecting the dimensions from metadata.</p><p>This allows syntax like below for a series of stacks of arrays:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RasterSeries[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Near</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))][</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:temp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">70</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">150</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`</span></span></code></pre></div><p><a href="/Rasters.jl/v0.14.0/api#Rasters.RasterSeries"><code>RasterSeries</code></a> is the concrete implementation.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/series.jl#L1-L19" target="_blank" rel="noreferrer">source</a></p>',7))]),i("details",S,[i("summary",null,[s[9]||(s[9]=i("a",{id:"Rasters.AbstractRasterStack",href:"#Rasters.AbstractRasterStack"},[i("span",{class:"jlbinding"},"Rasters.AbstractRasterStack")],-1)),s[10]||(s[10]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[11]||(s[11]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractRasterStack</span></span></code></pre></div><p>Abstract supertype for objects that hold multiple <a href="/Rasters.jl/v0.14.0/api#Rasters.AbstractRaster"><code>AbstractRaster</code></a>s that share spatial dimensions.</p><p>They are <code>NamedTuple</code>-like structures that may either contain <code>NamedTuple</code> of <a href="/Rasters.jl/v0.14.0/api#Rasters.AbstractRaster"><code>AbstractRaster</code></a>s, string paths that will load <a href="/Rasters.jl/v0.14.0/api#Rasters.AbstractRaster"><code>AbstractRaster</code></a>s, or a single path that points to a file containing multiple layers, like NetCDF or HDF5. Use and syntax is similar or identical for all cases.</p><p><code>AbstractRasterStack</code> can hold layers that share some or all of their dimensions. They cannot have the same dimension with different length or spatial extent as another layer.</p><p><code>getindex</code> on an <code>AbstractRasterStack</code> generally returns a memory backed standard <a href="/Rasters.jl/v0.14.0/api#Rasters.Raster"><code>Raster</code></a>. <code>raster[:somelayer] |&gt; plot</code> plots the layers array, while <code>raster[:somelayer, X(1:100), Band(2)] |&gt; plot</code> will plot the subset without loading the whole array.</p><p><code>getindex</code> on an <code>AbstractRasterStack</code> with a key returns another stack with <code>getindex</code> applied to all the arrays in the stack.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/stack.jl#L6-L28" target="_blank" rel="noreferrer">source</a></p>',7))]),i("details",q,[i("summary",null,[s[12]||(s[12]=i("a",{id:"Rasters.Band",href:"#Rasters.Band"},[i("span",{class:"jlbinding"},"Rasters.Band")],-1)),s[13]||(s[13]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[14]||(s[14]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Band </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dimension</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Band</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:)</span></span></code></pre></div><p>Band <a href="https://rafaqz.github.io/DimensionalData.jl/stable/api/#DimensionalData.Dimension" target="_blank" rel="noreferrer"><code>Dimension</code></a> for multi-band rasters.</p><p><strong>Example:</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">banddim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Band</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Or</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> A[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Band</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Or</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Band)</span></span></code></pre></div><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/dimensions.jl#L4-L19" target="_blank" rel="noreferrer">source</a></p>`,5))]),i("details",I,[i("summary",null,[s[15]||(s[15]=i("a",{id:"Rasters.Mapped",href:"#Rasters.Mapped"},[i("span",{class:"jlbinding"},"Rasters.Mapped")],-1)),s[16]||(s[16]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[17]||(s[17]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Mapped </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractProjected</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Mapped</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(order, span, sampling, crs, mappedcrs)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Mapped</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; order</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AutoOrder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), span</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AutoSpan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), sampling</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AutoSampling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), crs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mappedcrs)</span></span></code></pre></div><p>An <a href="https://rafaqz.github.io/DimensionalData.jl/stable/api/#DimensionalData.AbstractSampled" target="_blank" rel="noreferrer"><code>AbstractSampled</code></a> <code>Lookup</code>, where the dimension index has been mapped to another projection, usually lat/lon or <code>EPSG(4326)</code>. <code>Mapped</code> matches the dimension format commonly used in netcdf files.</p><p>Fields and behaviours are identical to <a href="https://rafaqz.github.io/DimensionalData.jl/stable/api/#DimensionalData.Sampled" target="_blank" rel="noreferrer"><code>Sampled</code></a> with the addition of <code>crs</code> and <code>mappedcrs</code> fields.</p><p>The mapped dimension index will be used as for <a href="https://rafaqz.github.io/DimensionalData.jl/stable/api/#DimensionalData.Sampled" target="_blank" rel="noreferrer"><code>Sampled</code></a>, but to save in another format the underlying <code>crs</code> may be used to convert it.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/lookup.jl#L117-L132" target="_blank" rel="noreferrer">source</a></p>`,5))]),i("details",L,[i("summary",null,[s[18]||(s[18]=i("a",{id:"Rasters.Projected",href:"#Rasters.Projected"},[i("span",{class:"jlbinding"},"Rasters.Projected")],-1)),s[19]||(s[19]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[20]||(s[20]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Projected </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractProjected</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Projected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(order, span, sampling, crs, mappedcrs)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Projected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; order</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AutoOrder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), span</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AutoSpan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), sampling</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AutoSampling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), crs, mappedcrs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>An <a href="https://rafaqz.github.io/DimensionalData.jl/stable/api/#DimensionalData.AbstractSampled" target="_blank" rel="noreferrer"><code>AbstractSampled</code></a> <code>Lookup</code> with projections attached.</p><p>Fields and behaviours are identical to <a href="https://rafaqz.github.io/DimensionalData.jl/stable/api/#DimensionalData.Sampled" target="_blank" rel="noreferrer"><code>Sampled</code></a> with the addition of <code>crs</code> and <code>mappedcrs</code> fields.</p><p>If both <code>crs</code> and <code>mappedcrs</code> fields contain CRS data (in a <code>GeoFormat</code> wrapper from GeoFormatTypes.jl) the selector inputs and plot axes will be converted from and to the specified <code>mappedcrs</code> projection automatically. A common use case would be to pass <code>mappedcrs=EPSG(4326)</code> to the constructor when loading eg. a GDALarray:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GDALarray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(filename; mappedcrs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EPSG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4326</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p>The underlying <code>crs</code> will be detected by GDAL.</p><p>If <code>mappedcrs</code> is not supplied (ie. <code>mappedcrs=nothing</code>), the base index will be shown on plots, and selectors will need to use whatever format it is in.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/lookup.jl#L32-L56" target="_blank" rel="noreferrer">source</a></p>`,8))]),i("details",z,[i("summary",null,[s[21]||(s[21]=i("a",{id:"Rasters.Raster",href:"#Rasters.Raster"},[i("span",{class:"jlbinding"},"Rasters.Raster")],-1)),s[22]||(s[22]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[23]||(s[23]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Raster </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractRaster</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(filepath</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDimArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dims; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A generic <a href="/Rasters.jl/v0.14.0/api#Rasters.AbstractRaster"><code>AbstractRaster</code></a> for spatial/raster array data. It can hold either memory-backed arrays or, if <code>lazy=true</code>, a <a href="/Rasters.jl/v0.14.0/api#Rasters.FileArray"><code>FileArray</code></a>, which stores the <code>String</code> path to an unopened file.</p><p>If <code>lazy=true</code>, the file will only be opened lazily when it is indexed with <code>getindex</code> or when <code>read(A)</code> is called. Broadcasting, taking a view, reversing, and most other methods will <em>not</em> load data from disk; they will be applied later, lazily.</p><p><strong>Arguments</strong></p><ul><li><code>dims</code>: <code>Tuple</code> of <code>Dimension</code>s needed when an <code>AbstractArray</code> is used.</li></ul><p><strong>Keywords</strong></p><ul><li><p><code>name</code>: a <code>Symbol</code> name for a Raster, which will also retrieve the a named layer if <code>Raster</code> is used on a multi-layered file like a NetCDF.</p></li><li><p><code>group</code>: the group in the dataset where <code>name</code> can be found. Only needed for nested datasets. A <code>String</code> or <code>Symbol</code> will select a single group. Pairs can also used to access groups at any nested depth, i.e <code>group=:group1 =&gt; :group2 =&gt; :group3</code>.</p></li><li><p><code>missingval</code>: value representing missing data, normally detected from the file and automatically converted to <code>missing</code>. Setting to an alternate value, such as <code>0</code> or <code>NaN</code> may be desirable for improved perfomance. <code>nothing</code> specifies no missing value. Using the same <code>missingval</code> the file already has removes the overhead of replacing it, this can be done by passing the <code>missingval</code> function as <code>missingval</code>. If the file has an incorrect value, we can manually define the transformation as a pair like <code>correct_value =&gt; missing</code> or <code>correct_value =&gt; NaN</code>. <code>correct_value =&gt; correct_value</code> will keep remove the overhead of changing it. Note: When <code>raw=true</code> is set, <code>missingval</code> is not changed from the value specified in the file.</p></li><li><p><code>metadata</code>: <code>Dict</code> or <code>Metadata</code> object for the array, or <code>NoMetadata()</code>.</p></li><li><p><code>crs</code>: the coordinate reference system of the objects <code>XDim</code>/<code>YDim</code> dimensions. Only set this if you know the detected crs is incorrect, or it is not present in the file. The <code>crs</code> is expected to be a GeoFormatTypes.jl <code>CRS</code> or <code>Mixed</code> mode <code>GeoFormat</code> object, like <code>EPSG(4326)</code>.</p></li><li><p><code>mappedcrs</code>: the mapped coordinate reference system of the objects <code>XDim</code>/<code>YDim</code> dimensions. for <code>Mapped</code> lookups these are the actual values of the index. For <code>Projected</code> lookups this can be used to index in eg. <code>EPSG(4326)</code> lat/lon values, having it converted automatically. Only set this if the detected <code>mappedcrs</code> in incorrect, or the file does not have a <code>mappedcrs</code>, e.g. a tiff. The <code>mappedcrs</code> is expected to be a GeoFormatTypes.jl <code>CRS</code> or <code>Mixed</code> mode <code>GeoFormat</code> type.</p></li><li><p><code>refdims</code>: <code>Tuple of</code> position <code>Dimension</code>s the array was sliced from, defaulting to <code>()</code>. Usually not needed.</p></li></ul><p>When a filepath <code>String</code> is used:</p><ul><li><p><code>dropband</code>: drop single band dimensions when creating stacks from filenames. <code>true</code> by default.</p></li><li><p><code>lazy</code>: A <code>Bool</code> specifying if to load data lazily from disk. <code>false</code> by default.</p></li><li><p><code>source</code>: Usually automatically detected from filepath extension. To manually force, a <code>Symbol</code> can be passed <code>:gdal</code>, <code>:netcdf</code>, <code>:grd</code>, <code>:grib</code>. The internal <a href="./@ref"><code>Rasters.Source</code></a> objects, such as <code>Rasters.GDALsource()</code>, <code>Rasters.GRIBsource()</code> or <code>Rasters.NCDsource()</code> can also be used.</p></li><li><p><code>scaled</code>: apply scale and offset as <code>x * scale + offset</code> where <code>scale</code> and/or <code>offset</code> are found in file metadata. <code>true</code> by default. This is common where data has been convert to e.g. UInt8 to save disk space. To ignore <code>scale</code> and <code>offset</code> metadata, use <code>scaled=false</code>. Note 1: If <code>scale</code> and <code>offset</code> are <code>1.0</code> and <code>0.0</code> they will be ignored and the original type will be used even when <code>scaled=true</code>. This is because these values may be fallback defaults and we do not want to convert every <code>Real</code> array to larger <code>Float64</code> values. Note 2: <code>raw=true</code> will ignore <code>scaled</code> and <code>missingval</code> and return the raw values.</p></li><li><p><code>raw</code>: turn of all scaling and masking and load the raw values from disk. <code>false</code> by default. If <code>true</code>, <code>scaled</code> will be set to <code>false</code> and <code>missingval</code> will to the existing missing value in the file. A warning will be printed if <code>scaled</code> or <code>missingval</code> are manually set to another value.</p></li></ul><p>When A is an <code>AbstractDimArray</code>:</p><ul><li><code>data</code>: can replace the data in an existing <code>AbstractRaster</code></li></ul><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/array.jl#L188-L226" target="_blank" rel="noreferrer">source</a></p>`,12))]),i("details",N,[i("summary",null,[s[24]||(s[24]=i("a",{id:"Rasters.RasterSeries",href:"#Rasters.RasterSeries"},[i("span",{class:"jlbinding"},"Rasters.RasterSeries")],-1)),s[25]||(s[25]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[26]||(s[26]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RasterSeries </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractRasterSeries</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RasterSeries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rasters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray{&lt;:AbstractRaster}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dims; [refdims])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RasterSeries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(stacks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray{&lt;:AbstractRasterStack}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dims; [refdims]) </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RasterSeries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(paths</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray{&lt;:AbstractString}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dims; child, duplicate_first, kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RasterSeries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dims; ext, separator, child, duplicate_first, kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RasterSeries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(objects</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractBasicDimArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Concrete implementation of <a href="/Rasters.jl/v0.14.0/api#Rasters.AbstractRasterSeries"><code>AbstractRasterSeries</code></a>.</p><p>A <code>RasterSeries</code> is an array of <code>Raster</code>s or <code>RasterStack</code>s, along some dimension(s).</p><p>Existing <code>Raster</code> <code>RasterStack</code> can be wrapped in a <code>RasterSeries</code>, or new files can be loaded from an array of <code>String</code> or from a single <code>String</code>.</p><p>A single <code>String</code> can refer to a whole directory, or the name of a series of files in a directory, sharing a common stem. The differnce between the filenames can be used as the lookup for the series.</p><p>For example, with some tifs at these paths :</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;series_dir/myseries_2001-01-01T00:00:00.tif&quot;</span></span>
<span class="line"><span>&quot;series_dir/myseries_2002-01-01T00:00:00.tif&quot;</span></span></code></pre></div><p>We can load a <code>RasterSeries</code> with a <code>DateTime</code> lookup:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RasterSeries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;series_dir/myseries.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ti</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DateTime))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element RasterSeries{Raster,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} with dimensions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Ti Sampled{DateTime} DateTime[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2001-01-01T00:00:00&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2002-01-01T00:00:00&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)] ForwardOrdered Irregular Points</span></span></code></pre></div><p>The <code>DateTime</code> suffix is parsed from the filenames. Using <code>Ti(Int)</code> would try to parse integers instead.</p><p>Just using the directory will also work, unless there are other files mixed in it:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RasterSeries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;series_dir&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ti</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DateTime))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element RasterSeries{Raster,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} with dimensions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Ti Sampled{DateTime} DateTime[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2001-01-01T00:00:00&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2002-01-01T00:00:00&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)] ForwardOrdered Irregular Points</span></span></code></pre></div><p><strong>Arguments</strong></p><ul><li><code>dims</code>: series dimension/s.</li></ul><p><strong>Keywords</strong></p><p>When loading a series from a Vector of <code>String</code> paths or a single <code>String</code> path:</p><ul><li><p><code>child</code>: constructor of child objects for use when filenames are passed in, can be <code>Raster</code> or <code>RasterStack</code>. Defaults to <code>Raster</code>.</p></li><li><p><code>duplicate_first::Bool</code>: wether to duplicate the dimensions and metadata of the first file with all other files. This can save load time with a large series where dimensions are identical. <code>false</code> by default.</p></li><li><p><code>lazy</code>: A <code>Bool</code> specifying if to load data lazily from disk. <code>false</code> by default.</p></li><li><p><code>kw</code>: keywords passed to the child constructor <a href="/Rasters.jl/v0.14.0/api#Rasters.Raster"><code>Raster</code></a> or <a href="/Rasters.jl/v0.14.0/api#Rasters.RasterStack"><code>RasterStack</code></a>.</p></li></ul><p>When loading a series from a single <code>String</code> path:</p><ul><li><code>separator</code>: separator used to split lookup elements from the rest of a filename. &#39;_&#39; by default.</li></ul><p>Others:</p><ul><li><code>refdims</code>: existing reference dimension/s, normally not required.</li></ul><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/series.jl#L46-L115" target="_blank" rel="noreferrer">source</a></p>`,22))]),i("details",G,[i("summary",null,[s[27]||(s[27]=i("a",{id:"Rasters.RasterStack",href:"#Rasters.RasterStack"},[i("span",{class:"jlbinding"},"Rasters.RasterStack")],-1)),s[28]||(s[28]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[29]||(s[29]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RasterStack </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstrackRasterStack</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; name, kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Vector,Tuple}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; name, kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; layersfrom</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Band, kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(filepath</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Load a file path or a <code>NamedTuple</code> of paths as a <code>RasterStack</code>, or convert arguments, a <code>Vector</code> or <code>NamedTuple</code> of <code>Raster</code>s to <code>RasterStack</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>data</code>: A <code>NamedTuple</code> of <a href="/Rasters.jl/v0.14.0/api#Rasters.Raster"><code>Raster</code></a>s or <code>String</code>, or a <code>Vector</code>, <code>Tuple</code> or splatted arguments of <a href="/Rasters.jl/v0.14.0/api#Rasters.Raster"><code>Raster</code></a>. The latter options must pass a <code>name</code> keyword argument.</p></li><li><p><code>filepath</code>: A file (such as netcdf or tif) to be loaded as a stack, or a directory path containing multiple files.</p></li></ul><p><strong>Keywords</strong></p><ul><li><p><code>name</code>: Used as stack layer names when a <code>Tuple</code>, <code>Vector</code> or splat of <code>Raster</code> is passed in. Has no effect when <code>NameTuple</code> is used - the <code>NamedTuple</code> keys are the layer names.</p></li><li><p><code>group</code>: the group in the dataset where <code>name</code> can be found. Only needed for nested datasets. A <code>String</code> or <code>Symbol</code> will select a single group. Pairs can also used to access groups at any nested depth, i.e <code>group=:group1 =&gt; :group2 =&gt; :group3</code>.</p></li><li><p><code>metadata</code>: A <code>Dict</code> or <code>DimensionalData.Metadata</code> object.</p></li><li><p><code>missingval</code>: value representing missing data, normally detected from the file and automatically converted to <code>missing</code>. Setting to an alternate value, such as <code>0</code> or <code>NaN</code> may be desirable for improved perfomance. <code>nothing</code> specifies no missing value. Using the same <code>missingval</code> the file already has removes the overhead of replacing it, this can be done by passing the <code>missingval</code> function as <code>missingval</code>. If the file has an incorrect value, we can manually define the transformation as a pair like <code>correct_value =&gt; missing</code> or <code>correct_value =&gt; NaN</code>. <code>correct_value =&gt; correct_value</code> will keep remove the overhead of changing it. Note: When <code>raw=true</code> is set, <code>missingval</code> is not changed from the value specified in the file. For <code>RasterStack</code> a <code>NamedTuple</code> can also be passed if layers should have different <code>missingval</code>.</p></li><li><p><code>crs</code>: the coordinate reference system of the objects <code>XDim</code>/<code>YDim</code> dimensions. Only set this if you know the detected crs is incorrect, or it is not present in the file. The <code>crs</code> is expected to be a GeoFormatTypes.jl <code>CRS</code> or <code>Mixed</code> mode <code>GeoFormat</code> object, like <code>EPSG(4326)</code>.</p></li><li><p><code>mappedcrs</code>: the mapped coordinate reference system of the objects <code>XDim</code>/<code>YDim</code> dimensions. for <code>Mapped</code> lookups these are the actual values of the index. For <code>Projected</code> lookups this can be used to index in eg. <code>EPSG(4326)</code> lat/lon values, having it converted automatically. Only set this if the detected <code>mappedcrs</code> in incorrect, or the file does not have a <code>mappedcrs</code>, e.g. a tiff. The <code>mappedcrs</code> is expected to be a GeoFormatTypes.jl <code>CRS</code> or <code>Mixed</code> mode <code>GeoFormat</code> type.</p></li><li><p><code>refdims</code>: <code>Tuple</code> of <code>Dimension</code> that the stack was sliced from.</p></li></ul><p>For when one or multiple filepaths are used:</p><ul><li><p><code>dropband</code>: drop single band dimensions when creating stacks from filenames. <code>true</code> by default.</p></li><li><p><code>lazy</code>: A <code>Bool</code> specifying if to load data lazily from disk. <code>false</code> by default.</p></li><li><p><code>raw</code>: turn of all scaling and masking and load the raw values from disk. <code>false</code> by default. If <code>true</code>, <code>scaled</code> will be set to <code>false</code> and <code>missingval</code> will to the existing missing value in the file. A warning will be printed if <code>scaled</code> or <code>missingval</code> are manually set to another value.</p></li><li><p><code>scaled</code>: apply scale and offset as <code>x * scale + offset</code> where <code>scale</code> and/or <code>offset</code> are found in file metadata. <code>true</code> by default. This is common where data has been convert to e.g. UInt8 to save disk space. To ignore <code>scale</code> and <code>offset</code> metadata, use <code>scaled=false</code>. Note 1: If <code>scale</code> and <code>offset</code> are <code>1.0</code> and <code>0.0</code> they will be ignored and the original type will be used even when <code>scaled=true</code>. This is because these values may be fallback defaults and we do not want to convert every <code>Real</code> array to larger <code>Float64</code> values. Note 2: <code>raw=true</code> will ignore <code>scaled</code> and <code>missingval</code> and return the raw values.</p></li><li><p><code>source</code>: Usually automatically detected from filepath extension. To manually force, a <code>Symbol</code> can be passed <code>:gdal</code>, <code>:netcdf</code>, <code>:grd</code>, <code>:grib</code>. The internal <a href="./@ref"><code>Rasters.Source</code></a> objects, such as <code>Rasters.GDALsource()</code>, <code>Rasters.GRIBsource()</code> or <code>Rasters.NCDsource()</code> can also be used.</p></li></ul><p>For when a single <code>Raster</code> is used:</p><ul><li><code>layersfrom</code>: <code>Dimension</code> to source stack layers from if the file is not already multi-layered. <code>nothing</code> is default, so that a single <code>RasterStack(raster)</code> is a single layered stack. <code>RasterStack(raster; layersfrom=Band)</code> will use the bands as layers.</li></ul><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">files </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (temp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;temp.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, pressure</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pressure.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, relhum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;relhum.tif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stack </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(files; mappedcrs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EPSG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4326</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stack[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:relhum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">37</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">144</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/stack.jl#L146-L198" target="_blank" rel="noreferrer">source</a></p>`,12))]),i("details",M,[i("summary",null,[s[30]||(s[30]=i("a",{id:"DimensionalData.modify-Tuple{Any, AbstractRasterSeries}",href:"#DimensionalData.modify-Tuple{Any, AbstractRasterSeries}"},[i("span",{class:"jlbinding"},"DimensionalData.modify")],-1)),s[31]||(s[31]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[32]||(s[32]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">modify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, series</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRasterSeries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Apply function <code>f</code> to the data of the child object. If the child is an <code>AbstractRasterStack</code> the function will be passed on to its child <code>AbstractRaster</code>s.</p><p><code>f</code> must return an identically sized array.</p><p>This method triggers a complete rebuild of all objects, and disk based objects will be transferred to memory.</p><p>An example of the usefulnesss of this is for swapping out array backend for an entire series to <code>CuArray</code> from CUDA.jl to copy data to a GPU.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/series.jl#L29-L43" target="_blank" rel="noreferrer">source</a></p>',6))]),i("details",O,[i("summary",null,[s[33]||(s[33]=i("a",{id:"GeoInterface.crs-Tuple{Union{Tuple{Dimension, Vararg{Dimension}}, AbstractRaster, AbstractRasterSeries, AbstractRasterStack}}",href:"#GeoInterface.crs-Tuple{Union{Tuple{Dimension, Vararg{Dimension}}, AbstractRaster, AbstractRasterSeries, AbstractRasterStack}}"},[i("span",{class:"jlbinding"},"GeoInterface.crs")],-1)),s[34]||(s[34]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[35]||(s[35]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">crs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Get the projected coordinate reference system of a <code>Y</code> or <code>X</code> <code>Dimension</code>, or of the <code>Y</code>/<code>X</code> dims of an <code>AbstractRaster</code>.</p><p>For <a href="/Rasters.jl/v0.14.0/api#Rasters.Mapped"><code>Mapped</code></a> lookup this may be <code>nothing</code> as there may be no projected coordinate reference system at all. See <a href="/Rasters.jl/v0.14.0/api#Rasters.setcrs-Tuple{Union{AbstractRaster, AbstractRasterStack}, Any}"><code>setcrs</code></a> to set it manually.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/crs.jl#L1-L10" target="_blank" rel="noreferrer">source</a></p>',4))]),i("details",P,[i("summary",null,[s[36]||(s[36]=i("a",{id:"Rasters.aggregate",href:"#Rasters.aggregate"},[i("span",{class:"jlbinding"},"Rasters.aggregate")],-1)),s[37]||(s[37]=e()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[38]||(s[38]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aggregate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(method, object, scale; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Aggregate a <code>Raster</code>, or all arrays in a <code>RasterStack</code> or <code>RasterSeries</code>, by <code>scale</code> using <code>method</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>method</code>: a function such as <code>mean</code> or <code>sum</code> that can combine the value of multiple cells to generate the aggregated cell, or a <a href="https://rafaqz.github.io/DimensionalData.jl/stable/api/#DimensionalData.Locus" target="_blank" rel="noreferrer"><code>Locus</code></a> like <code>Start()</code> or <code>Center()</code> that species where to sample from in the interval.</p></li><li><p><code>object</code>: Object to aggregate, like <code>AbstractRasterSeries</code>, <code>AbstractStack</code>, <code>AbstractRaster</code> or <code>Dimension</code>.</p></li><li><p><code>scale</code>: the aggregation factor, which can be an <code>Int</code>, a <code>Tuple</code> of <code>Int</code> for each dimension, or a <code>:</code> colon to mean the whole dimension. You can also use any <code>Dimension</code>, <code>Selector</code> or <code>Int</code> combination you can usually use in <code>getindex</code>. <code>Tuple</code> of <code>Pair</code> or <code>NamedTuple</code> where keys are dimension names will also work. Using a <code>Selector</code> will determine the scale by the distance from the start of the index. Selectors will find the first offset and repeat the same aggregation size for the rest.</p></li></ul><p>When the aggregation <code>scale</code> of is larger than the array axis, the length of the axis is used.</p><p><strong>Keywords</strong></p><ul><li><p><code>skipmissing</code>: if <code>true</code>, any <code>missingval</code> will be skipped during aggregation, so that only areas of all missing values will be aggregated to <code>missingval(dst)</code>. If <code>false</code>, aggregated areas containing one or more <code>missingval</code> will be assigned <code>missingval</code>. <code>false</code> by default. <code>skipmissing</code> behaviour is independent of function <code>f</code>, which is only applied to completely non-missing values.</p></li><li><p><code>filename</code>: a filename to write to directly, useful for large files.</p></li><li><p><code>suffix</code>: a string or value to append to the filename. A tuple of <code>suffix</code> will be applied to stack layers. <code>keys(stack)</code> are the default.</p></li><li><p><code>progress</code>: show a progress bar, <code>true</code> by default, <code>false</code> to hide.</p></li><li><p><code>threaded</code>: run operations in parallel, <code>false</code> by default. In some circumstances <code>threaded</code> can give large speedups over single-threaded operation. This can be true for complicated geometries written into low-resolution rasters, but may not be for simple geometries with high-resolution rasters. With very large rasters threading may be counter productive due to excessive memory use. Caution should also be used: <code>threaded</code> should not be used in in-place functions writing to <code>BitArray</code> or other arrays where race conditions can occur.</p></li><li><p><code>vebose</code>: whether to print messages about potential problems. <code>true</code> by default.</p></li></ul><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, Statistics, Plots</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ArchGDAL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Center</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">st </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{Climate}; month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ag </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> aggregate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), st, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); skipmissingval</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, progress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ag)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/aggregate_example.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span></code></pre></div><p><img src="`+h+'" alt=""></p><p>Note: currently it is faster to aggregate over memory-backed arrays. Use <a href="/Rasters.jl/v0.14.0/api#Base.read-Tuple{Union{AbstractRaster, AbstractRasterSeries, AbstractRasterStack}}"><code>read</code></a> on <code>src</code> before use where required.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/aggregate.jl#L29-L71" target="_blank" rel="noreferrer">source</a></p>',12))]),i("details",U,[i("summary",null,[s[39]||(s[39]=i("a",{id:"Rasters.aggregate!-Tuple{Locus, AbstractRaster, Any, Any}",href:"#Rasters.aggregate!-Tuple{Locus, AbstractRaster, Any, Any}"},[i("span",{class:"jlbinding"},"Rasters.aggregate!")],-1)),s[40]||(s[40]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[41]||(s[41]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aggregate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(method, dst</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRaster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRaster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, scale; skipmissing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Aggregate raster <code>src</code> to raster <code>dst</code> by <code>scale</code>, using <code>method</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>method</code>: a function such as <code>mean</code> or <code>sum</code> that can combine the value of multiple cells to generate the aggregated cell, or a <a href="https://rafaqz.github.io/DimensionalData.jl/stable/api/#DimensionalData.Locus" target="_blank" rel="noreferrer"><code>Locus</code></a> like <code>Start()</code> or <code>Center()</code> that species where to sample from in the interval.</p></li><li><p><code>scale</code>: the aggregation factor, which can be an <code>Int</code>, a <code>Tuple</code> of <code>Int</code> for each dimension, or a <code>:</code> colon to mean the whole dimension. You can also use any <code>Dimension</code>, <code>Selector</code> or <code>Int</code> combination you can usually use in <code>getindex</code>. <code>Tuple</code> of <code>Pair</code> or <code>NamedTuple</code> where keys are dimension names will also work. Using a <code>Selector</code> will determine the scale by the distance from the start of the index. Selectors will find the first offset and repeat the same aggregation size for the rest.</p></li></ul><p>When the aggregation <code>scale</code> of is larger than the array axis, the length of the axis is used.</p><p><strong>Keywords</strong></p><ul><li><p><code>skipmissing</code>: if <code>true</code>, any <code>missingval</code> will be skipped during aggregation, so that only areas of all missing values will be aggregated to <code>missingval(dst)</code>. If <code>false</code>, aggregated areas containing one or more <code>missingval</code> will be assigned <code>missingval</code>. <code>false</code> by default. <code>skipmissing</code> behaviour is independent of function <code>f</code>, which is only applied to completely non-missing values.</p></li><li><p><code>progress</code>: show a progress bar, <code>true</code> by default, <code>false</code> to hide.</p></li><li><p><code>vebose</code>: whether to print messages about potential problems. <code>true</code> by default.</p></li></ul><p>Note: currently it is <em>much</em> faster to aggregate over memory-backed source arrays. Use <a href="/Rasters.jl/v0.14.0/api#Base.read-Tuple{Union{AbstractRaster, AbstractRasterSeries, AbstractRasterStack}}"><code>read</code></a> on <code>src</code> before use where required.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/aggregate.jl#L124-L144" target="_blank" rel="noreferrer">source</a></p>',9))]),i("details",W,[i("summary",null,[s[42]||(s[42]=i("a",{id:"Rasters.boolmask",href:"#Rasters.boolmask"},[i("span",{class:"jlbinding"},"Rasters.boolmask")],-1)),s[43]||(s[43]=e()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[44]||(s[44]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">boolmask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; [missingval])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">boolmask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj; [to, res, size])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">boolmask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; alllayers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a mask array of <code>Bool</code> values, from another <code>Raster</code>. <code>AbstractRasterStack</code> or <code>AbstractRasterSeries</code> are also accepted.</p><p>The array returned from calling <code>boolmask</code> on a <code>AbstractRaster</code> is a <a href="/Rasters.jl/v0.14.0/api#Rasters.Raster"><code>Raster</code></a> with the same dimensions as the original array and a <code>missingval</code> of <code>false</code>.</p><p><strong>Arguments</strong></p><ul><li>a <a href="/Rasters.jl/v0.14.0/api#Rasters.Raster"><code>Raster</code></a> or one or multiple geometries. Geometries can be a GeoInterface.jl <code>AbstractGeometry</code>, a nested <code>Vector</code> of <code>AbstractGeometry</code>, or a Tables.jl compatible object containing a <code>:geometry</code> column or points and values columns, in which case <code>geometrycolumn</code> must be specified.</li></ul><p><strong><code>Raster</code> / <code>RasterStack</code> Keywords</strong></p><ul><li><p><code>invert</code>: invert the mask, so that areas no missing in <code>with</code> are masked, and areas missing in <code>with</code> are masked.</p></li><li><p><code>missingval</code>: The missing value of the source array, with default <code>missingval(raster)</code>.</p></li></ul><p><strong>Keywords</strong></p><ul><li><p><code>alllayers</code>: if <code>true</code> a mask is taken for all layers, otherwise only the first layer is used. Defaults to <code>true</code></p></li><li><p><code>to</code>: a <code>Raster</code>, <code>RasterStack</code>, <code>Tuple</code> of <code>Dimension</code> or <code>Extents.Extent</code>. If no <code>to</code> object is provided the extent will be calculated from the geometries, Additionally, when no <code>to</code> object or an <code>Extent</code> is passed for <code>to</code>, the <code>size</code> or <code>res</code> keyword must also be used.</p></li><li><p><code>res</code>: the resolution of the dimensions (often in meters or degrees), a <code>Real</code> or <code>Tuple{&lt;:Real,&lt;:Real}</code>. Only required when <code>to</code> is not used or is an <code>Extents.Extent</code>, and <code>size</code> is not used.</p></li><li><p><code>size</code>: the size of the output array, as a <code>Tuple{Int,Int}</code> or single <code>Int</code> for a square. Only required when <code>to</code> is not used or is an <code>Extents.Extent</code>, and <code>res</code> is not used.</p></li><li><p><code>crs</code>: a <code>crs</code> which will be attached to the resulting raster when <code>to</code> not passed or is an <code>Extent</code>. Otherwise the crs from <code>to</code> is used.</p></li><li><p><code>boundary</code>: for polygons, include pixels where the <code>:center</code> is inside the polygon, where the polygon <code>:touches</code> the pixel, or that are completely <code>:inside</code> the polygon. The default is <code>:center</code>.</p></li><li><p><code>shape</code>: Force <code>data</code> to be treated as <code>:polygon</code>, <code>:line</code> or <code>:point</code> geometries. using points or lines as polygons may have unexpected results.</p></li><li><p><code>geometrycolumn</code>: <code>Symbol</code> to manually select the column the geometries are in when <code>data</code> is a Tables.jl compatible table, or a tuple of <code>Symbol</code> for columns of point coordinates.</p></li><li><p><code>threaded</code>: run operations in parallel, <code>false</code> by default. In some circumstances <code>threaded</code> can give large speedups over single-threaded operation. This can be true for complicated geometries written into low-resolution rasters, but may not be for simple geometries with high-resolution rasters. With very large rasters threading may be counter productive due to excessive memory use. Caution should also be used: <code>threaded</code> should not be used in in-place functions writing to <code>BitArray</code> or other arrays where race conditions can occur.</p></li><li><p><code>progress</code>: show a progress bar, <code>true</code> by default, <code>false</code> to hide.</p></li></ul><p>For tabular data, feature collections and other iterables</p><ul><li><code>collapse</code>: if <code>true</code>, collapse all geometry masks into a single mask. Otherwise return a Raster with an additional <code>geometry</code> dimension, so that each slice along this axis is the mask of the <code>geometry</code> opbject of each row of the table, feature in the feature collection, or just each geometry in the iterable.</li></ul><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, ArchGDAL, Plots, Dates</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{Climate}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:prec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">boolmask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wc) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> plot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/boolmask_example.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span></code></pre></div><p><img src="`+d+'" alt=""></p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/mask.jl#L215-L264" target="_blank" rel="noreferrer">source</a></p>',16))]),i("details",_,[i("summary",null,[s[45]||(s[45]=i("a",{id:"Rasters.cellarea-Tuple{Any}",href:"#Rasters.cellarea-Tuple{Any}"},[i("span",{class:"jlbinding"},"Rasters.cellarea")],-1)),s[46]||(s[46]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[47]||(s[47]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cellarea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([method], x)</span></span></code></pre></div><p>Gives the approximate area of each gridcell of <code>x</code>. By assuming the earth is a sphere, it approximates the true size to about 0.1%, depending on latitude.</p><p>Run <code>using ArchGDAL</code> or <code>using Proj</code> to make this method fully available.</p><ul><li><p><code>method</code>: You can specify whether you want to compute the area in the plane of your projection <code>Planar()</code> or on a sphere of some radius <code>Spherical(; radius=...)</code>(the default).</p></li><li><p><code>Spherical</code> will compute cell area on the sphere, by transforming all points back to long-lat. You can specify the radius by the <code>radius</code> keyword argument here. By default, this is <code>6371008.8</code>, the mean radius of the Earth.</p></li><li><p><code>Planar</code> will compute cell area in the plane of the CRS you have chosen. Be warned that this will likely be incorrect for non-equal-area projections.</p></li></ul><p>Returns a Raster with the same x and y dimensions as the input, where each value in the raster encodes the area of the cell (in meters by default).</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, Proj, Rasters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Lookups</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xdim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Projected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; sampling</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Intervals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()), crs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EPSG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4326</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ydim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Projected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; sampling</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Intervals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()), crs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EPSG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4326</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myraster </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xdim, ydim)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cellarea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(myraster)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">╭───────────────────────╮</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">×</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Raster{Float64,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} │</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├───────────────────────┴─────────────────────────────────────────────────── dims ┐</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ↓</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> X Projected{Float64} </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ForwardOrdered Regular Intervals{Start},</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  →</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Y Projected{Float64} </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ForwardOrdered Regular Intervals{Start}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├───────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  extent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Extent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">130.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), Y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  crs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EPSG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4326</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">└─────────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ↓</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> →</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        10.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        20.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        30.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            40.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      50.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  90.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.23017e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.19279e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.11917e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.01154e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  873182.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  708290.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.23017e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.19279e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.11917e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.01154e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  873182.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  708290.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 110.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.23017e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.19279e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.11917e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.01154e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  873182.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  708290.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 120.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.23017e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.19279e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.11917e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.01154e6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  873182.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  708290.0</span></span></code></pre></div><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/extensions.jl#L165-L209" target="_blank" rel="noreferrer">source</a></p>`,9))]),i("details",K,[i("summary",null,[s[48]||(s[48]=i("a",{id:"Rasters.classify",href:"#Rasters.classify"},[i("span",{class:"jlbinding"},"Rasters.classify")],-1)),s[49]||(s[49]=e()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[50]||(s[50]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">classify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, pairs; lower</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), upper</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), others</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">classify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, pairs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; lower, upper, others)</span></span></code></pre></div><p>Create a new array with values in <code>x</code> classified by the values in <code>pairs</code>.</p><p><code>pairs</code> can hold tuples fo values <code>(2, 3)</code>, a <code>Fix2</code> function e.g. <code>&lt;=(1)</code>, a <code>Tuple</code> of <code>Fix2</code> e.g. <code>(&gt;=(4), &lt;(7))</code>, or an IntervalSets.jl interval, e.g. <code>3..9</code> or <code>OpenInterval(10, 12)</code>. <code>pairs</code> can also be a <code>n * 3</code> matrix where each row is lower bounds, upper bounds, replacement.</p><p>If tuples or a <code>Matrix</code> are used, the <code>lower</code> and <code>upper</code> keywords define how the lower and upper boundaries are chosen.</p><p>If <code>others</code> is set other values not covered in <code>pairs</code> will be set to that values.</p><p><strong>Arguments</strong></p><ul><li><p><code>x</code>: a <code>Raster</code> or <code>RasterStack</code></p></li><li><p><code>pairs</code>: each pair contains a value and a replacement, a tuple of lower and upper range and a replacement, or a Tuple of <code>Fix2</code> like <code>(&gt;(x), &lt;(y)</code>.</p></li></ul><p><strong>Keywords</strong></p><ul><li><p><code>lower</code>: Which comparison (<code>&lt;</code> or <code>&lt;=</code>) to use for lower values, if <code>Fix2</code> are not used.</p></li><li><p><code>upper</code>: Which comparison (<code>&gt;</code> or <code>&gt;=</code>) to use for upper values, if <code>Fix2</code> are not used.</p></li><li><p><code>others</code>: A value to assign to all values not included in <code>pairs</code>. Passing <code>nothing</code> (the default) will leave them unchanged.</p></li></ul><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, ArchGDAL, Plots</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{Climate}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:tavg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">classes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          15</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          25</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">35</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          &gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">35</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 40</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">classified </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> classify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A, classes; others</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, missingval</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(classified; c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:magma</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/classify_example.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span></code></pre></div><p><img src="`+k+'" alt=""></p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/classify.jl#L1-L49" target="_blank" rel="noreferrer">source</a></p>',14))]),i("details",V,[i("summary",null,[s[51]||(s[51]=i("a",{id:"Rasters.classify!-Tuple{AbstractRaster, Pair, Vararg{Pair}}",href:"#Rasters.classify!-Tuple{AbstractRaster, Pair, Vararg{Pair}}"},[i("span",{class:"jlbinding"},"Rasters.classify!")],-1)),s[52]||(s[52]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[53]||(s[53]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">classify!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, pairs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; lower, upper, others)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">classify!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, pairs; lower, upper, others)</span></span></code></pre></div><p>Classify the values of <code>x</code> in-place, by the values in <code>pairs</code>.</p><p>If <code>Fix2</code> is not used, the <code>lower</code> and <code>upper</code> keywords</p><p>If <code>others</code> is set other values not covered in <code>pairs</code> will be set to that values.</p><p><strong>Arguments</strong></p><ul><li><p><code>x</code>: a <code>Raster</code> or <code>RasterStack</code></p></li><li><p><code>pairs</code>: each pair contains a value and a replacement, a tuple of lower and upper range and a replacement, or a Tuple of <code>Fix2</code> like <code>(&gt;(x), &lt;(y)</code>.</p></li></ul><p><strong>Keywords</strong></p><ul><li><p><code>lower</code>: Which comparison (<code>&lt;</code> or <code>&lt;=</code>) to use for lower values, if <code>Fix2</code> are not used.</p></li><li><p><code>upper</code>: Which comparison (<code>&gt;</code> or <code>&gt;=</code>) to use for upper values, if <code>Fix2</code> are not used.</p></li><li><p><code>others</code>: A value to assign to all values not included in <code>pairs</code>. Passing <code>nothing</code> (the default) will leave them unchanged.</p></li></ul><p><strong>Example</strong></p><p><code>classify!</code> to disk, with key steps:</p><ul><li><p>copying a tempory file so we don&#39;t write over the RasterDataSources.jl version.</p></li><li><p>use <code>open</code> with <code>write=true</code> to open the file with disk-write permissions.</p></li><li><p>use <code>Float32</code> like <code>10.0f0</code> for all our replacement values and <code>other</code>, because the file is stored as <code>Float32</code>. Attempting to write some other type will fail.</p></li></ul><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, ArchGDAL, Plots</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Download and copy the file</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filename </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> getraster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{Climate}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:tavg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tempfile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tempname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;.tif&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(filename, tempfile)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Define classes</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">classes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">35</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          &gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">35</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 40</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Open the file with write permission</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tempfile); write</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> A</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    classify!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A, classes; others</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Open it again to plot the changes</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tempfile); c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:magma</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/classify_bang_example.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span></code></pre></div><p><img src="`+c+'" alt=""></p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/classify.jl#L82-L139" target="_blank" rel="noreferrer">source</a></p>',15))]),i("details",Y,[i("summary",null,[s[54]||(s[54]=i("a",{id:"Rasters.combine-Tuple{AbstractRasterSeries}",href:"#Rasters.combine-Tuple{AbstractRasterSeries}"},[i("span",{class:"jlbinding"},"Rasters.combine")],-1)),s[55]||(s[55]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[56]||(s[56]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">combine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstracRasterSeries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; [dims], [lazy]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Raster</span></span></code></pre></div><p>Combine a <code>RasterSeries</code> along some dimension/s, creating a new <code>Raster</code> or <code>RasterStack</code>, depending on the contents of the series.</p><p>If <code>dims</code> are passed, only the specified dimensions will be combined with a <code>RasterSeries</code> returned, unless <code>dims</code> is all the dims in the series.</p><p>If <code>lazy</code>, concatenate lazily. The default is to concatenate lazily for lazy <code>Raster</code>s and eagerly otherwise.</p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/slice_combine.jl#L32-L44" target="_blank" rel="noreferrer">source</a></p>',6))]),i("details",X,[i("summary",null,[s[57]||(s[57]=i("a",{id:"Rasters.convertlookup-Tuple{Type{<:Lookup}, AbstractDimArray}",href:"#Rasters.convertlookup-Tuple{Type{<:Lookup}, AbstractDimArray}"},[i("span",{class:"jlbinding"},"Rasters.convertlookup")],-1)),s[58]||(s[58]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[59]||(s[59]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convertlookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dstlookup</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{&lt;:Lookup}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x)</span></span></code></pre></div><p>Convert the dimension lookup between <code>Projected</code> and <code>Mapped</code>. Other dimension lookups pass through unchanged.</p><p>This is used to e.g. save a netcdf file to GeoTiff.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/lookup.jl#L168-L175" target="_blank" rel="noreferrer">source</a></p>',4))]),i("details",H,[i("summary",null,[s[60]||(s[60]=i("a",{id:"Rasters.coverage!-Tuple{Union{typeof(sum), typeof(union)}, AbstractRaster, Any}",href:"#Rasters.coverage!-Tuple{Union{typeof(sum), typeof(union)}, AbstractRaster, Any}"},[i("span",{class:"jlbinding"},"Rasters.coverage!")],-1)),s[61]||(s[61]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[62]||(s[62]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coverage!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A, geom; [mode, scale])</span></span></code></pre></div><p>Calculate the area of a raster covered by GeoInterface.jl compatible geometry <code>geom</code>, as a fraction.</p><p>Each pixel is assigned a grid of points (by default 10 x 10) that are each checked to be inside the geometry. The sum divided by the number of points to give coverage.</p><p>In practice, most pixel coverage is not calculated this way - shortcuts that produce the same result are taken wherever possible.</p><p>If <code>geom</code> is an <code>AbstractVector</code> or table, the <code>mode</code> keyword will determine how coverage is combined.</p><p><strong>Keywords</strong></p><ul><li><p><code>mode</code>: method for combining multiple geometries - <code>union</code> or <code>sum</code>.</p><ul><li><p><code>union</code> (the default) gives the areas covered by all geometries. Usefull in spatial coverage where overlapping regions should not be counted twice. The returned raster will contain <code>Float64</code> values between <code>0.0</code> and <code>1.0</code>.</p></li><li><p><code>sum</code> gives the summed total of the areas covered by all geometries, as in taking the sum of running <code>coverage</code> separately on all geometries. The returned values are positive <code>Float64</code>.</p></li></ul><p>For a single geometry, the <code>mode</code> keyword has no effect - the result is the same.</p></li><li><p><code>scale</code>: <code>Integer</code> scale of pixel subdivision. The default of <code>10</code> means each pixel has 10 x 10 or 100 points that contribute to coverage. Using <code>100</code> means 10,000 points contribute. Performance will decline as <code>scale</code> increases. Memory use will grow by <code>scale^2</code> when <code>mode=:union</code>.</p></li><li><p><code>threaded</code>: run operations in parallel, <code>false</code> by default. In some circumstances <code>threaded</code> can give large speedups over single-threaded operation. This can be true for complicated geometries written into low-resolution rasters, but may not be for simple geometries with high-resolution rasters. With very large rasters threading may be counter productive due to excessive memory use. Caution should also be used: <code>threaded</code> should not be used in in-place functions writing to <code>BitArray</code> or other arrays where race conditions can occur.</p></li><li><p><code>progress</code>: show a progress bar, <code>true</code> by default, <code>false</code> to hide.</p></li><li><p><code>vebose</code>: whether to print messages about potential problems. <code>true</code> by default.</p></li></ul><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/coverage.jl#L64-L72" target="_blank" rel="noreferrer">source</a></p>',8))]),i("details",J,[i("summary",null,[s[63]||(s[63]=i("a",{id:"Rasters.coverage-Tuple{Any}",href:"#Rasters.coverage-Tuple{Any}"},[i("span",{class:"jlbinding"},"Rasters.coverage")],-1)),s[64]||(s[64]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[65]||(s[65]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coverage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mode, geom; [to, res, size, scale, verbose, progress])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coverage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(geom; [to, mode, res, size, scale, verbose, progress])</span></span></code></pre></div><p>Calculate the area of a raster covered by GeoInterface.jl compatible geometry <code>geom</code>, as a fraction.</p><p>Each pixel is assigned a grid of points (by default 10 x 10) that are each checked to be inside the geometry. The sum divided by the number of points to give coverage.</p><p>In practice, most pixel coverage is not calculated this way - shortcuts that produce the same result are taken wherever possible.</p><p>If <code>geom</code> is an <code>AbstractVector</code> or table, the <code>mode</code> keyword will determine how coverage is combined.</p><p><strong>Keywords</strong></p><ul><li><p><code>mode</code>: method for combining multiple geometries - <code>union</code> or <code>sum</code>.</p><ul><li><p><code>union</code> (the default) gives the areas covered by all geometries. Usefull in spatial coverage where overlapping regions should not be counted twice. The returned raster will contain <code>Float64</code> values between <code>0.0</code> and <code>1.0</code>.</p></li><li><p><code>sum</code> gives the summed total of the areas covered by all geometries, as in taking the sum of running <code>coverage</code> separately on all geometries. The returned values are positive <code>Float64</code>.</p></li></ul><p>For a single geometry, the <code>mode</code> keyword has no effect - the result is the same.</p></li><li><p><code>scale</code>: <code>Integer</code> scale of pixel subdivision. The default of <code>10</code> means each pixel has 10 x 10 or 100 points that contribute to coverage. Using <code>100</code> means 10,000 points contribute. Performance will decline as <code>scale</code> increases. Memory use will grow by <code>scale^2</code> when <code>mode=:union</code>.</p></li><li><p><code>threaded</code>: run operations in parallel, <code>false</code> by default. In some circumstances <code>threaded</code> can give large speedups over single-threaded operation. This can be true for complicated geometries written into low-resolution rasters, but may not be for simple geometries with high-resolution rasters. With very large rasters threading may be counter productive due to excessive memory use. Caution should also be used: <code>threaded</code> should not be used in in-place functions writing to <code>BitArray</code> or other arrays where race conditions can occur.</p></li><li><p><code>progress</code>: show a progress bar, <code>true</code> by default, <code>false</code> to hide.</p></li><li><p><code>vebose</code>: whether to print messages about potential problems. <code>true</code> by default.</p></li><li><p><code>to</code>: a <code>Raster</code>, <code>RasterStack</code>, <code>Tuple</code> of <code>Dimension</code> or <code>Extents.Extent</code>. If no <code>to</code> object is provided the extent will be calculated from the geometries, Additionally, when no <code>to</code> object or an <code>Extent</code> is passed for <code>to</code>, the <code>size</code> or <code>res</code> keyword must also be used.</p></li><li><p><code>geometrycolumn</code>: <code>Symbol</code> to manually select the column the geometries are in when <code>data</code> is a Tables.jl compatible table, or a tuple of <code>Symbol</code> for columns of point coordinates.</p></li><li><p><code>size</code>: the size of the output array, as a <code>Tuple{Int,Int}</code> or single <code>Int</code> for a square. Only required when <code>to</code> is not used or is an <code>Extents.Extent</code>, and <code>res</code> is not used.</p></li><li><p><code>res</code>: the resolution of the dimensions (often in meters or degrees), a <code>Real</code> or <code>Tuple{&lt;:Real,&lt;:Real}</code>. Only required when <code>to</code> is not used or is an <code>Extents.Extent</code>, and <code>size</code> is not used.</p></li></ul><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/coverage.jl#L32-L45" target="_blank" rel="noreferrer">source</a></p>`,8))]),i("details",Z,[i("summary",null,[s[66]||(s[66]=i("a",{id:"Rasters.crop",href:"#Rasters.crop"},[i("span",{class:"jlbinding"},"Rasters.crop")],-1)),s[67]||(s[67]=e()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[68]||(s[68]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">crop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x; to, touches</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [geometrycolumn])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">crop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; to)</span></span></code></pre></div><p>Crop one or multiple <a href="/Rasters.jl/v0.14.0/api#Rasters.AbstractRaster"><code>AbstractRaster</code></a> or <a href="/Rasters.jl/v0.14.0/api#Rasters.AbstractRasterStack"><code>AbstractRasterStack</code></a> <code>x</code> to match the size of the object <code>to</code>, or smallest of any dimensions that are shared.</p><p><code>crop</code> is lazy, using a <code>view</code> into the object rather than allocating new memory.</p><p><strong>Keywords</strong></p><ul><li><p><code>to</code>: the object to crop to. This can be a <a href="/Rasters.jl/v0.14.0/api#Rasters.Raster"><code>Raster</code></a> or one or multiple geometries. Geometries can be a GeoInterface.jl <code>AbstractGeometry</code>, a nested <code>Vector</code> of <code>AbstractGeometry</code>, or a Tables.jl compatible object containing a <code>:geometry</code> column or points and values columns, in which case <code>geometrycolumn</code> must be specified. If no <code>to</code> keyword is passed, the smallest shared area of all <code>xs</code> is used.</p></li><li><p><code>touches</code>: <code>true</code> or <code>false</code>. Whether to use <code>Touches</code> wraper on the object extent. When lines need to be included in e.g. zonal statistics, <code>true</code> should be used.</p></li><li><p><code>geometrycolumn</code>: <code>Symbol</code> to manually select the column the geometries are in when <code>data</code> is a Tables.jl compatible table, or a tuple of <code>Symbol</code> for columns of point coordinates.</p></li></ul><p>As <code>crop</code> is lazy, <code>filename</code> and <code>suffix</code> keywords are not used.</p><p><strong>Example</strong></p><p>Crop to another raster:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, Plots</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">evenness </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(EarthEnv{HabitatHeterogeneity}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:evenness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rnge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(EarthEnv{HabitatHeterogeneity}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Roughly cut out New Zealand from the evenness raster</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nz_bounds </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">165</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nz_evenness </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> evenness[nz_bounds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Crop range to match evenness</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nz_range </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> crop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rnge; to</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nz_evenness)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nz_range)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/nz_crop_example.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span></code></pre></div><p><img src="`+g+`" alt=""></p><p>Crop to a polygon:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, Plots, Dates, Shapefile, Downloads</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Download a borders shapefile</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shapefile_url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/nvkelso/natural-earth-vector/raw/master/10m_cultural/ne_10m_admin_0_countries.shp&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shapefile_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;boundary.shp&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(shapefile_name) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Downloads</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">download</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(shapefile_url, shapefile_name)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Shapefile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(shapefile_name)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shapes[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">evenness </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(EarthEnv{HabitatHeterogeneity}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:evenness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">argentina_evenness </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> crop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(evenness; to</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shp)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(argentina_evenness)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/argentina_crop_example.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span></code></pre></div><p><img src="`+E+'" alt=""></p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/crop_extend.jl#L1-L69" target="_blank" rel="noreferrer">source</a></p>',15))]),i("details",$,[i("summary",null,[s[69]||(s[69]=i("a",{id:"Rasters.disaggregate",href:"#Rasters.disaggregate"},[i("span",{class:"jlbinding"},"Rasters.disaggregate")],-1)),s[70]||(s[70]=e()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[71]||(s[71]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">disaggregate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(object, scale; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Disaggregate array, or all arrays in a stack or series, by some scale.</p><p><strong>Arguments</strong></p><ul><li><p><code>object</code>: Object to aggregate, like <code>AbstractRasterSeries</code>, <code>AbstractStack</code>, <code>AbstractRaster</code>, <code>Dimension</code> or <code>Lookup</code>.</p></li><li><p><code>scale</code>: the aggregation factor, which can be an <code>Int</code>, a <code>Tuple</code> of <code>Int</code> for each dimension, or a <code>:</code> colon to mean the whole dimension. You can also use any <code>Dimension</code>, <code>Selector</code> or <code>Int</code> combination you can usually use in <code>getindex</code>. <code>Tuple</code> of <code>Pair</code> or <code>NamedTuple</code> where keys are dimension names will also work. Using a <code>Selector</code> will determine the scale by the distance from the start of the index. Selectors will find the first offset and repeat the same aggregation size for the rest.</p></li></ul><p><strong>Keywords</strong></p><ul><li><p><code>filename</code>: a filename to write to directly, useful for large files.</p></li><li><p><code>suffix</code>: a string or value to append to the filename. A tuple of <code>suffix</code> will be applied to stack layers. <code>keys(stack)</code> are the default.</p></li><li><p><code>progress</code>: show a progress bar, <code>true</code> by default, <code>false</code> to hide.</p></li><li><p><code>threaded</code>: run operations in parallel, <code>false</code> by default. In some circumstances <code>threaded</code> can give large speedups over single-threaded operation. This can be true for complicated geometries written into low-resolution rasters, but may not be for simple geometries with high-resolution rasters. With very large rasters threading may be counter productive due to excessive memory use. Caution should also be used: <code>threaded</code> should not be used in in-place functions writing to <code>BitArray</code> or other arrays where race conditions can occur.</p></li></ul><p>Note: currently it is <em>much</em> faster to disaggregate over a memory-backed source array. Use <a href="/Rasters.jl/v0.14.0/api#Base.read-Tuple{Union{AbstractRaster, AbstractRasterSeries, AbstractRasterStack}}"><code>read</code></a> on <code>src</code> before use where required.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/aggregate.jl#L206-L226" target="_blank" rel="noreferrer">source</a></p>',8))]),i("details",Q,[i("summary",null,[s[72]||(s[72]=i("a",{id:"Rasters.disaggregate!-Tuple{AbstractRaster, Any, Any}",href:"#Rasters.disaggregate!-Tuple{AbstractRaster, Any, Any}"},[i("span",{class:"jlbinding"},"Rasters.disaggregate!")],-1)),s[73]||(s[73]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[74]||(s[74]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">disaggregate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dst</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRaster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRaster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, scale)</span></span></code></pre></div><p>Disaggregate array <code>src</code> to array <code>dst</code> by some scale.</p><ul><li><code>scale</code>: the aggregation factor, which can be an <code>Int</code>, a <code>Tuple</code> of <code>Int</code> for each dimension, or a <code>:</code> colon to mean the whole dimension. You can also use any <code>Dimension</code>, <code>Selector</code> or <code>Int</code> combination you can usually use in <code>getindex</code>. <code>Tuple</code> of <code>Pair</code> or <code>NamedTuple</code> where keys are dimension names will also work. Using a <code>Selector</code> will determine the scale by the distance from the start of the index. Selectors will find the first offset and repeat the same aggregation size for the rest.</li></ul><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/aggregate.jl#L281-L287" target="_blank" rel="noreferrer">source</a></p>',4))]),i("details",ss,[i("summary",null,[s[75]||(s[75]=i("a",{id:"Rasters.extend",href:"#Rasters.extend"},[i("span",{class:"jlbinding"},"Rasters.extend")],-1)),s[76]||(s[76]=e()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[77]||(s[77]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; [to])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xs; [to])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{AbstractRaster,AbstractRasterStack}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; to, kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extend one or multiple <a href="/Rasters.jl/v0.14.0/api#Rasters.AbstractRaster"><code>AbstractRaster</code></a> to match the area covered by all <code>xs</code>, or by the keyword argument <code>to</code>.</p><p><strong>Keywords</strong></p><ul><li><p><code>to</code>: the Raster or dims to extend to. If no <code>to</code> keyword is passed, the largest shared area of all <code>xs</code> is used.</p></li><li><p><code>touches</code>: <code>true</code> or <code>false</code>. Whether to use <code>Touches</code> wrapper on the object extent. When lines need to be included in e.g. zonal statistics, <code>true</code> shoudle be used.</p></li><li><p><code>filename</code>: a filename to write to directly, useful for large files.</p></li><li><p><code>suffix</code>: a string or value to append to the filename. A tuple of <code>suffix</code> will be applied to stack layers. <code>keys(stack)</code> are the default.</p></li></ul><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, Plots</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">evenness </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(EarthEnv{HabitatHeterogeneity}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:evenness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rnge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(EarthEnv{HabitatHeterogeneity}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Roughly cut out South America</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sa_bounds </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">88</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">57</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sa_evenness </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> evenness[sa_bounds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Extend range to match the whole-world raster</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sa_range </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> extend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sa_evenness; to</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rnge)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sa_range)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/extend_example.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span></code></pre></div><p><img src="`+y+'" alt=""></p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/crop_extend.jl#L117-L155" target="_blank" rel="noreferrer">source</a></p>',8))]),i("details",is,[i("summary",null,[s[78]||(s[78]=i("a",{id:"Rasters.extract",href:"#Rasters.extract"},[i("span",{class:"jlbinding"},"Rasters.extract")],-1)),s[79]||(s[79]=e()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[80]||(s[80]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, geometries; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extracts the value of <code>Raster</code> or <code>RasterStack</code> for the passed in geometries, returning an <code>Vector{NamedTuple}</code> with properties for <code>:geometry</code> and <code>Raster</code> or <code>RasterStack</code> layer values.</p><p>For lines, linestrings and linear rings points are extracted for each pixel that the line touches.</p><p>For polygons, all cells witih centers covered by the polygon are returned.</p><p>Note that if objects have more dimensions than the length of the point tuples, sliced arrays or stacks will be returned instead of single values.</p><p><strong>Arguments</strong></p><ul><li><p><code>x</code>: a <code>Raster</code> or <code>RasterStack</code> to extract values from.</p></li><li><p><code>data</code>: a GeoInterface.jl <code>AbstractGeometry</code>, a nested <code>Vector</code> of <code>AbstractGeometry</code>, or a Tables.jl compatible object containing a <code>:geometry</code> column or points and values columns, in which case <code>geometrycolumn</code> must be specified.</p></li></ul><p><strong>Keywords</strong></p><ul><li><p><code>geometry</code>: include a <code>:geometry</code> field in rows, which will be a tuple point. Either the original point for points or the pixel center point for line and polygon extract. <code>true</code> by default.</p></li><li><p><code>index</code>: include <code>:index</code> field of extracted points in rows, <code>false</code> by default.</p></li><li><p><code>name</code>: a <code>Symbol</code> or <code>Tuple</code> of <code>Symbol</code> corresponding to layer/s of a <code>RasterStack</code> to extract. All layers are extracted by default.</p></li><li><p><code>skipmissing</code>: skip missing points automatically.</p></li><li><p><code>flatten</code>: flatten extracted points from multiple geometries into a single vector. <code>true</code> by default. Unmixed point geometries are always flattened. Flattening is slow and single threaded, <code>flatten=false</code> may be a large performance improvement in combination with <code>threaded=true</code>.</p></li><li><p><code>atol</code>: a tolerance for floating point lookup values for when the <code>Lookup</code> contains <code>Points</code>. <code>atol</code> is ignored for <code>Intervals</code>.</p></li><li><p><code>boundary</code>: for polygons, include pixels where the <code>:center</code> is inside the polygon, where the polygon <code>:touches</code> the pixel, or that are completely <code>:inside</code> the polygon. The default is <code>:center</code>.</p></li><li><p><code>geometrycolumn</code>: <code>Symbol</code> to manually select the column the geometries are in when <code>data</code> is a Tables.jl compatible table, or a tuple of <code>Symbol</code> for columns of point coordinates.</p></li></ul><p><strong>Example</strong></p><p>Here we extract points matching the occurrence of the Mountain Pygmy Possum, <em>Burramis parvus</em>. This could be used to fit a species distribution model.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, ArchGDAL, GBIF2, CSV</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Get a stack of BioClim layers, and replace missing values with \`missing\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">st </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{BioClim}, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> replace_missing</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Download some occurrence data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">obs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GBIF2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">occurrence_search</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Burramys parvus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; limit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, year</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2009&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># use \`extract\` to get values for all layers at each observation point.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># We \`collect\` to get a \`Vector\` from the lazy iterator.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(st, obs; skipmissing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element Vector{NamedTuple{(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:geometry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:bio1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:bio3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:bio5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:bio7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:bio12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)}}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (geometry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.21</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40.07</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), bio1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 17.077084f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 41.20417f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio5 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30.1f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio7 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 24.775f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio12 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 446.0f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (geometry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">39.97</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), bio1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 17.076923f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 39.7983f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio5 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 29.638462f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio7 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 24.153847f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio12 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 441.0f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (geometry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">39.97</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), bio1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 17.076923f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 39.7983f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio5 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 29.638462f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio7 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 24.153847f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio12 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 441.0f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (geometry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.52</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40.37</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), bio1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio5 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio7 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio12 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (geometry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40.24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), bio1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16.321388f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 41.659454f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio5 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30.029825f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio7 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25.544561f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bio12 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 480.0f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Note: passing in arrays, geometry collections or feature collections containing a mix of points and other geometries has undefined results.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/extract.jl#L80-L148" target="_blank" rel="noreferrer">source</a></p>`,14))]),i("details",es,[i("summary",null,[s[81]||(s[81]=i("a",{id:"Rasters.mappedbounds",href:"#Rasters.mappedbounds"},[i("span",{class:"jlbinding"},"Rasters.mappedbounds")],-1)),s[82]||(s[82]=e()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[83]||(s[83]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mappedbounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>Get the bounds converted to the <a href="/Rasters.jl/v0.14.0/api#Rasters.mappedcrs"><code>mappedcrs</code></a> value.</p><p>Without ArchGDAL loaded, this is just the regular bounds.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/lookup.jl#L230-L236" target="_blank" rel="noreferrer">source</a></p>',4))]),i("details",as,[i("summary",null,[s[84]||(s[84]=i("a",{id:"Rasters.mappedcrs",href:"#Rasters.mappedcrs"},[i("span",{class:"jlbinding"},"Rasters.mappedcrs")],-1)),s[85]||(s[85]=e()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[86]||(s[86]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mappedcrs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>Get the mapped coordinate reference system for the <code>Y</code>/<code>X</code> dims of an array.</p><p>In <a href="/Rasters.jl/v0.14.0/api#Rasters.Projected"><code>Projected</code></a> lookup this is used to convert <a href="https://rafaqz.github.io/DimensionalData.jl/stable/api/#DimensionalData.Selector" target="_blank" rel="noreferrer"><code>Selector</code></a> values form the mappedcrs defined projection to the underlying projection, and to show plot axes in the mapped projection.</p><p>In <code>Mapped</code> lookup this is the coordinate reference system of the index values. See <a href="/Rasters.jl/v0.14.0/api#Rasters.setmappedcrs-Tuple{Union{AbstractRaster, AbstractRasterStack}, Any}"><code>setmappedcrs</code></a> to set it manually.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/crs.jl#L22-L33" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",ts,[i("summary",null,[s[87]||(s[87]=i("a",{id:"Rasters.mappedindex",href:"#Rasters.mappedindex"},[i("span",{class:"jlbinding"},"Rasters.mappedindex")],-1)),s[88]||(s[88]=e()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[89]||(s[89]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mappedindex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>Get the index value of a dimension converted to the <code>mappedcrs</code> value.</p><p>Without ArchGDAL loaded, this is just the regular dim value.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/lookup.jl#L259-L265" target="_blank" rel="noreferrer">source</a></p>',4))]),i("details",ns,[i("summary",null,[s[90]||(s[90]=i("a",{id:"Rasters.mask!",href:"#Rasters.mask!"},[i("span",{class:"jlbinding"},"Rasters.mask!")],-1)),s[91]||(s[91]=e()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[92]||(s[92]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mask!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x; with, missingval</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">missingval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A))</span></span></code></pre></div><p>Mask <code>A</code> by the missing values of <code>with</code>, or by all values outside <code>with</code> if it is a polygon.</p><p>If <code>with</code> is a polygon, creates a new array where points falling outside the polygon have been replaced by <code>missingval(A)</code>.</p><p>Return a new array with values of <code>A</code> masked by the missing values of <code>with</code>, or by a polygon.</p><p><strong>Arguments</strong></p><ul><li><code>x</code>: a <code>Raster</code> or <code>RasterStack</code>.</li></ul><p><strong>Keywords</strong></p><ul><li><p><code>with</code>: another <code>AbstractRaster</code>, a <code>AbstractVector</code> of <code>Tuple</code> points, or any GeoInterface.jl <code>AbstractGeometry</code>. The coordinate reference system of the point must match <code>crs(A)</code>.</p></li><li><p><code>invert</code>: invert the mask, so that areas no missing in <code>with</code> are masked, and areas missing in <code>with</code> are masked.</p></li><li><p><code>missingval</code>: the missing value to write to A in masked areas, by default <code>missingval(A)</code>.</p></li></ul><p><strong>Example</strong></p><p>Mask an unmasked AWAP layer with a masked WorldClim layer, by first resampling the mask to match the size and projection.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, ArchGDAL, Plots, Dates</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Load and plot the file</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">awap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AWAP, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:tmin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:tmax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(awap; clims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">45</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:imola</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create a mask my resampling a worldclim file</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{Climate}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:prec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wc_mask </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> resample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wc; to</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">awap)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Mask</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mask!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(awap; with</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wc_mask)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(awap; clims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">45</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/mask_bang_example_before.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/mask_bang_example_after.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span></code></pre></div><p><strong>Before <code>mask!</code>:</strong></p><p><strong>After <code>mask!</code>:</strong></p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/mask.jl#L105-L163" target="_blank" rel="noreferrer">source</a></p>`,15))]),i("details",ls,[i("summary",null,[s[93]||(s[93]=i("a",{id:"Rasters.mask-Tuple{Any}",href:"#Rasters.mask-Tuple{Any}"},[i("span",{class:"jlbinding"},"Rasters.mask")],-1)),s[94]||(s[94]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[95]||(s[95]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractRaster; with, missingval</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">missingval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x; with)</span></span></code></pre></div><p>Return a new array with values of <code>A</code> masked by the missing values of <code>with</code>, or by the shape of <code>with</code>, if <code>with</code> is a geometric object.</p><p><strong>Arguments</strong></p><ul><li><code>x</code>: a <code>Raster</code> or <code>RasterStack</code></li></ul><p><strong>Keywords</strong></p><ul><li><p><code>with</code>: an <code>AbstractRaster</code>, or any GeoInterface.jl compatible objects or table. The coordinate reference system of the point must match <code>crs(A)</code>.</p></li><li><p><code>invert</code>: invert the mask, so that areas no missing in <code>with</code> are masked, and areas missing in <code>with</code> are masked.</p></li><li><p><code>missingval</code>: the missing value to use in the returned file.</p></li><li><p><code>filename</code>: a filename to write to directly, useful for large files.</p></li><li><p><code>suffix</code>: a string or value to append to the filename. A tuple of <code>suffix</code> will be applied to stack layers. <code>keys(stack)</code> are the default.</p></li></ul><p><strong>Geometry keywords</strong></p><p>These can be used when <code>with</code> is a GeoInterface.jl compatible object:</p><ul><li><p><code>shape</code>: Force <code>data</code> to be treated as <code>:polygon</code>, <code>:line</code> or <code>:point</code> geometries. using points or lines as polygons may have unexpected results.</p></li><li><p><code>boundary</code>: for polygons, include pixels where the <code>:center</code> is inside the polygon, where the polygon <code>:touches</code> the pixel, or that are completely <code>:inside</code> the polygon. The default is <code>:center</code>.</p></li><li><p><code>geometrycolumn</code>: <code>Symbol</code> to manually select the column the geometries are in when <code>data</code> is a Tables.jl compatible table, or a tuple of <code>Symbol</code> for columns of point coordinates.</p></li></ul><p><strong>Example</strong></p><p>Mask an unmasked AWAP layer with a masked WorldClim layer, by first resampling the mask.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, ArchGDAL, Plots, Dates</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Load and plot the file</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">awap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AWAP, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:tmax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(awap; clims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">45</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create a mask my resampling a worldclim file</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{Climate}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:prec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wc_mask </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> resample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wc; to</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">awap)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Mask</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">awap_masked </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(awap; with</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wc_mask)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(awap_masked; clims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">45</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/mask_example_before.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/mask_example_after.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span></code></pre></div><p><strong>Before <code>mask</code>:</strong></p><p><strong>After <code>mask</code>:</strong></p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/mask.jl#L14-L75" target="_blank" rel="noreferrer">source</a></p>`,16))]),i("details",os,[i("summary",null,[s[96]||(s[96]=i("a",{id:"Rasters.missingmask-Tuple{Any}",href:"#Rasters.missingmask-Tuple{Any}"},[i("span",{class:"jlbinding"},"Rasters.missingmask")],-1)),s[97]||(s[97]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[98]||(s[98]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">missingmask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">missingmask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj; [to, res, size])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">missingmask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; alllayers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a mask array of <code>missing</code> and <code>true</code> values, from another <code>Raster</code>. <code>AbstractRasterStack</code> or <code>AbstractRasterSeries</code> are also accepted-</p><p>For <a href="/Rasters.jl/v0.14.0/api#Rasters.AbstractRaster"><code>AbstractRaster</code></a> the default <code>missingval</code> is <code>missingval(A)</code>, but others can be chosen manually.</p><p>The array returned from calling <code>missingmask</code> on a <code>AbstractRaster</code> is a <a href="/Rasters.jl/v0.14.0/api#Rasters.Raster"><code>Raster</code></a> with the same size and fields as the original array.</p><p><strong>Arguments</strong></p><ul><li><code>obj</code>: a <a href="/Rasters.jl/v0.14.0/api#Rasters.Raster"><code>Raster</code></a> or one or multiple geometries. Geometries can be a GeoInterface.jl <code>AbstractGeometry</code>, a nested <code>Vector</code> of <code>AbstractGeometry</code>, or a Tables.jl compatible object containing a <code>:geometry</code> column or points and values columns, in which case <code>geometrycolumn</code> must be specified.</li></ul><p><strong>Keywords</strong></p><ul><li><p><code>alllayers</code>: if <code>true</code> a mask is taken for all layers, otherwise only the first layer is used. Defaults to <code>true</code></p></li><li><p><code>invert</code>: invert the mask, so that areas no missing in <code>with</code> are masked, and areas missing in <code>with</code> are masked.</p></li><li><p><code>to</code>: a <code>Raster</code>, <code>RasterStack</code>, <code>Tuple</code> of <code>Dimension</code> or <code>Extents.Extent</code>. If no <code>to</code> object is provided the extent will be calculated from the geometries, Additionally, when no <code>to</code> object or an <code>Extent</code> is passed for <code>to</code>, the <code>size</code> or <code>res</code> keyword must also be used.</p></li><li><p><code>res</code>: the resolution of the dimensions (often in meters or degrees), a <code>Real</code> or <code>Tuple{&lt;:Real,&lt;:Real}</code>. Only required when <code>to</code> is not used or is an <code>Extents.Extent</code>, and <code>size</code> is not used.</p></li><li><p><code>size</code>: the size of the output array, as a <code>Tuple{Int,Int}</code> or single <code>Int</code> for a square. Only required when <code>to</code> is not used or is an <code>Extents.Extent</code>, and <code>res</code> is not used.</p></li><li><p><code>crs</code>: a <code>crs</code> which will be attached to the resulting raster when <code>to</code> not passed or is an <code>Extent</code>. Otherwise the crs from <code>to</code> is used.</p></li><li><p><code>boundary</code>: for polygons, include pixels where the <code>:center</code> is inside the polygon, where the polygon <code>:touches</code> the pixel, or that are completely <code>:inside</code> the polygon. The default is <code>:center</code>.</p></li><li><p><code>shape</code>: Force <code>data</code> to be treated as <code>:polygon</code>, <code>:line</code> or <code>:point</code> geometries. using points or lines as polygons may have unexpected results.</p></li><li><p><code>geometrycolumn</code>: <code>Symbol</code> to manually select the column the geometries are in when <code>data</code> is a Tables.jl compatible table, or a tuple of <code>Symbol</code> for columns of point coordinates.</p></li></ul><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, ArchGDAL, Plots, Dates</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{Climate}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:prec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">missingmask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wc) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> plot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/missingmask_example.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span></code></pre></div><p><img src="`+u+'" alt=""></p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/mask.jl#L361-L401" target="_blank" rel="noreferrer">source</a></p>',13))]),i("details",ps,[i("summary",null,[s[99]||(s[99]=i("a",{id:"Rasters.missingval",href:"#Rasters.missingval"},[i("span",{class:"jlbinding"},"Rasters.missingval")],-1)),s[100]||(s[100]=e()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[101]||(s[101]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">missingval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>Returns the value representing missing data in the dataset</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/array.jl#L39-L43" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",rs,[i("summary",null,[s[102]||(s[102]=i("a",{id:"Rasters.mosaic!-Tuple{Function, Union{AbstractRaster, AbstractRasterStack}, Vararg{Union{AbstractRaster, AbstractRasterStack}}}",href:"#Rasters.mosaic!-Tuple{Function, Union{AbstractRaster, AbstractRasterStack}, Vararg{Union{AbstractRaster, AbstractRasterStack}}}"},[i("span",{class:"jlbinding"},"Rasters.mosaic!")],-1)),s[103]||(s[103]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[104]||(s[104]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mosaic!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, x, regions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; missingval, atol)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mosaic!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, x, regions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; missingval, atol)</span></span></code></pre></div><p>Combine <code>regions</code> in <code>Raster</code> or <code>RasterStack</code> <code>x</code> using the function <code>f</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>f</code> a function (e.g. <code>mean</code>, <code>sum</code>, <code>first</code> or <code>last</code>) that is applied to values where <code>regions</code> overlap.</p></li><li><p><code>x</code>: A <code>Raster</code> or <code>RasterStack</code>. May be a an opened disk-based <code>Raster</code>, the result will be written to disk. With the current algorithm, the read speed is slow.</p></li><li><p><code>regions</code>: source objects to be joined. These should be memory-backed (use <code>read</code> first), or may experience poor performance. If all objects have the same extent, <code>mosaic</code> is simply a merge.</p></li></ul><p><strong>Keywords</strong></p><ul><li><p><code>missingval</code>: Fills empty areas, and defualts to the \`missingval/ of the first layer.</p></li><li><p><code>atol</code>: Absolute tolerance for comparison between index values. This is often required due to minor differences in range values due to floating point error. It is not applied to non-float dimensions. A tuple of tolerances may be passed, matching the dimension order.</p></li></ul><p><strong>Example</strong></p><p>Cut out scandinavian countries and plot:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, NaturalEarth, DataFrames, Dates, Plots</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Get climate data form worldclim</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">climate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{Climate}, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:tmin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:tmax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:prec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:wind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">July)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># And country borders from natural earth</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">countries </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> naturalearth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;admin_0_countries&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">110</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DataFrame</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Cut out each country</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">country_climates </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Norway&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Denmark&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Sweden&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    country </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> subset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(countries, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ByRow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name)))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    trim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(climate; with</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">country); pad</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Mosaic together to a single raster</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scandinavia_climate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mosaic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(first, country_climates)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># And plot</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scandinavia_climate)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/mosaic_bang_example.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span></code></pre></div><p><img src="`+m+'" alt=""></p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/mosaic.jl#L111-L165" target="_blank" rel="noreferrer">source</a></p>',12))]),i("details",hs,[i("summary",null,[s[105]||(s[105]=i("a",{id:"Rasters.mosaic-Tuple{Function, Union{AbstractRaster, AbstractRasterStack}, Vararg{Union{AbstractRaster, AbstractRasterStack}}}",href:"#Rasters.mosaic-Tuple{Function, Union{AbstractRaster, AbstractRasterStack}, Vararg{Union{AbstractRaster, AbstractRasterStack}}}"},[i("span",{class:"jlbinding"},"Rasters.mosaic")],-1)),s[106]||(s[106]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[107]||(s[107]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mosaic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, regions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; missingval, atol)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mosaic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, regions; missingval, atol)</span></span></code></pre></div><p>Combine <code>regions</code> into a single raster.</p><p><strong>Arguments</strong></p><ul><li><p><code>f</code>: A reducing function (<code>mean</code>, <code>sum</code>, <code>first</code>, <code>last</code> etc.) for values where <code>regions</code> overlap.</p></li><li><p><code>regions</code>: Iterable or splatted <code>Raster</code> or <code>RasterStack</code>.</p></li></ul><p><strong>Keywords</strong></p><ul><li><p><code>missingval</code>: Fills empty areas, and defualts to the <code>missingval</code> of the first region.</p></li><li><p><code>atol</code>: Absolute tolerance for comparison between index values. This is often required due to minor differences in range values due to floating point error. It is not applied to non-float dimensions. A tuple of tolerances may be passed, matching the dimension order.</p></li><li><p><code>filename</code>: a filename to write to directly, useful for large files.</p></li><li><p><code>suffix</code>: a string or value to append to the filename. A tuple of <code>suffix</code> will be applied to stack layers. <code>keys(stack)</code> are the default.</p></li></ul><p>If your mosaic has has apparent line errors, increase the <code>atol</code> value.</p><p><strong>Example</strong></p><p>Here we cut out Australia and Africa from a stack, and join them with <code>mosaic</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, NaturalEarth, DataFrames, Dates, Plots</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">countries </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> naturalearth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;admin_0_countries&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">110</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DataFrame</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">climate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{Climate}, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:tmin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:tmax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:prec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:wind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">July)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">country_climates </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Norway&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Denmark&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Sweden&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    country </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> subset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(countries, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ByRow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Norway&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    trim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(climate; with</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">country); pad</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scandinavia_climate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> trim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mosaic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(first, country_climates))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scandinavia_climate)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/mosaic_example_combined.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span></code></pre></div><p><strong>Mosaic of countries</strong></p><p><img src="`+b+'" alt=""></p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/mosaic.jl#L4-L54" target="_blank" rel="noreferrer">source</a></p>',14))]),i("details",ds,[i("summary",null,[s[108]||(s[108]=i("a",{id:"Rasters.points-Tuple{AbstractRaster}",href:"#Rasters.points-Tuple{AbstractRaster}"},[i("span",{class:"jlbinding"},"Rasters.points")],-1)),s[109]||(s[109]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[110]||(s[110]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">points</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRaster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(YDim, XDim), ignore_missing) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Array{Tuple}</span></span></code></pre></div><p>Returns a generator of the points in <code>A</code> for dimensions in <code>dims</code>, where points are a tuple of the values in each specified dimension index.</p><p><strong>Keywords</strong></p><ul><li><p><code>dims</code> the dimensions to return points from. The first slice of other layers will be used.</p></li><li><p><code>ignore_missing</code>: wether to ignore missing values in the array when considering points. If <code>true</code>, all points in the dimensions will be returned, if <code>false</code> only the points that are not <code>=== missingval(A)</code> will be returned.</p></li></ul><p>The order of <code>dims</code> determines the order of the points.</p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/points.jl#L1-L19" target="_blank" rel="noreferrer">source</a></p>',7))]),i("details",ks,[i("summary",null,[s[111]||(s[111]=i("a",{id:"Rasters.rasterize",href:"#Rasters.rasterize"},[i("span",{class:"jlbinding"},"Rasters.rasterize")],-1)),s[112]||(s[112]=e()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[113]||(s[113]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rasterize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([reducer], data; geometrycolumn, kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Rasterize a GeoInterface.jl compatable geometry or feature, or a Tables.jl table with a <code>:geometry</code> column of GeoInterface.jl objects, or points columns specified by <code>geometrycolumn</code></p><p><strong>Arguments</strong></p><ul><li><p><code>reducer</code>: a reducing function to reduce the fill value for all geometries that cover or touch a pixel down to a single value. The default is <code>last</code>. Any that takes an iterable and returns a single value will work, including custom functions. However, there are optimisations for built-in methods including <code>sum</code>, <code>first</code>, <code>last</code>, <code>minimum</code>, <code>maximum</code>, <code>extrema</code> and <code>Statistics.mean</code>. These may be an order of magnitude or more faster than <code>count</code> is a special-cased as it does not need a fill value.</p></li><li><p><code>data</code>: a GeoInterface.jl <code>AbstractGeometry</code>, a nested <code>Vector</code> of <code>AbstractGeometry</code>, or a Tables.jl compatible object containing a <code>:geometry</code> column or points and values columns, in which case <code>geometrycolumn</code> must be specified.</p></li></ul><p><strong>Keywords</strong></p><p>These are detected automatically from <code>data</code> where possible.</p><ul><li><p><code>fill</code>: the value or values to fill a polygon with. A <code>Symbol</code> or tuple of <code>Symbol</code> will be used to retrieve properties from features or column values from table rows. An array or other iterable will be used for each geometry, in order. <code>fill</code> can also be a function of the current value, e.g. <code>x -&gt; x + 1</code>.</p></li><li><p><code>op</code>: A reducing function that accepts two values and returns one, like <code>min</code> to <code>minimum</code>. For common methods this will be assigned for you, or is not required. But you can use it instead of a <code>reducer</code> as it will usually be faster.</p></li><li><p><code>to</code>: a <code>Raster</code>, <code>RasterStack</code>, <code>Tuple</code> of <code>Dimension</code> or <code>Extents.Extent</code>. If no <code>to</code> object is provided the extent will be calculated from the geometries, Additionally, when no <code>to</code> object or an <code>Extent</code> is passed for <code>to</code>, the <code>size</code> or <code>res</code> keyword must also be used.</p></li><li><p><code>res</code>: the resolution of the dimensions (often in meters or degrees), a <code>Real</code> or <code>Tuple{&lt;:Real,&lt;:Real}</code>. Only required when <code>to</code> is not used or is an <code>Extents.Extent</code>, and <code>size</code> is not used.</p></li><li><p><code>size</code>: the size of the output array, as a <code>Tuple{Int,Int}</code> or single <code>Int</code> for a square. Only required when <code>to</code> is not used or is an <code>Extents.Extent</code>, and <code>res</code> is not used.</p></li><li><p><code>crs</code>: a <code>crs</code> which will be attached to the resulting raster when <code>to</code> not passed or is an <code>Extent</code>. Otherwise the crs from <code>to</code> is used.</p></li><li><p><code>boundary</code>: for polygons, include pixels where the <code>:center</code> is inside the polygon, where the polygon <code>:touches</code> the pixel, or that are completely <code>:inside</code> the polygon. The default is <code>:center</code>.</p></li><li><p><code>shape</code>: Force <code>data</code> to be treated as <code>:polygon</code>, <code>:line</code> or <code>:point</code> geometries. using points or lines as polygons may have unexpected results.</p></li><li><p><code>geometrycolumn</code>: <code>Symbol</code> to manually select the column the geometries are in when <code>data</code> is a Tables.jl compatible table, or a tuple of <code>Symbol</code> for columns of point coordinates.</p></li><li><p><code>progress</code>: show a progress bar, <code>true</code> by default, <code>false</code> to hide.</p></li><li><p><code>vebose</code>: whether to print messages about potential problems. <code>true</code> by default.</p></li><li><p><code>threaded</code>: run operations in parallel, <code>false</code> by default. In some circumstances <code>threaded</code> can give large speedups over single-threaded operation. This can be true for complicated geometries written into low-resolution rasters, but may not be for simple geometries with high-resolution rasters. With very large rasters threading may be counter productive due to excessive memory use. Caution should also be used: <code>threaded</code> should not be used in in-place functions writing to <code>BitArray</code> or other arrays where race conditions can occur.</p></li><li><p><code>threadsafe</code>: specify that custom <code>reducer</code> and/or <code>op</code> functions are thread-safe, in that the order of operation or blocking does not matter. For example, <code>sum</code> and <code>maximum</code> are thread-safe, because the answer is approximately (besides floating point error) the same after running on nested blocks, or on all the data. In contrast, <code>median</code> or <code>last</code> are not, because the blocking (<code>median</code>) or order (<code>last</code>) matters.</p></li><li><p><code>filename</code>: a filename to write to directly, useful for large files.</p></li><li><p><code>suffix</code>: a string or value to append to the filename. A tuple of <code>suffix</code> will be applied to stack layers. <code>keys(stack)</code> are the default.</p></li></ul><p>Note on threading. Performance may be much better with <code>threaded=false</code> if <code>reducer</code>/<code>op</code> are not <code>threadsafe</code>. <code>sum</code>, <code>prod</code>, <code>maximum</code>, <code>minimum</code> <code>count</code> and <code>mean</code> (by combining <code>sum</code> and <code>count</code>) are threadsafe. If you know your algorithm is threadsafe, use <code>threadsafe=true</code> to allow all optimisations. Functions passed to <code>fill</code> are always threadsafe, and ignore the <code>threadsafe</code> argument.</p><p><strong>Example</strong></p><p>Rasterize a shapefile for China and plot, with a border.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, ArchGDAL, Plots, Dates, Shapefile, Downloads</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Lookups</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Download a borders shapefile</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shapefile_url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/nvkelso/natural-earth-vector/raw/master/10m_cultural/ne_10m_admin_0_countries.shp&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shapefile_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;country_borders.shp&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(shapefile_name) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Downloads</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">download</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(shapefile_url, shapefile_name)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Load the shapes for china</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">china_border </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Shapefile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(shapefile_name)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shapes[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Rasterize the border polygon</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">china </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rasterize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(last, china_border; res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, missingval</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fill</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, boundary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:touches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, progress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># And plot</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(china; color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, legend</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p, china_border; fillalpha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, linewidth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/china_rasterized.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span></code></pre></div><p><img src="`+F+'" alt=""></p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/rasterize.jl#L343-L400" target="_blank" rel="noreferrer">source</a></p>',14))]),i("details",cs,[i("summary",null,[s[114]||(s[114]=i("a",{id:"Rasters.rasterize!",href:"#Rasters.rasterize!"},[i("span",{class:"jlbinding"},"Rasters.rasterize!")],-1)),s[115]||(s[115]=e()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[116]||(s[116]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rasterize!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([reducer], dest, data; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Rasterize the geometries in <code>data</code> into the <a href="/Rasters.jl/v0.14.0/api#Rasters.Raster"><code>Raster</code></a> or <a href="/Rasters.jl/v0.14.0/api#Rasters.RasterStack"><code>RasterStack</code></a> <code>dest</code>, using the values specified by <code>fill</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>dest</code>: a <code>Raster</code> or <code>RasterStack</code> to rasterize into.</p></li><li><p><code>reducer</code>: a reducing function to reduce the fill value for all geometries that cover or touch a pixel down to a single value. The default is <code>last</code>. Any that takes an iterable and returns a single value will work, including custom functions. However, there are optimisations for built-in methods including <code>sum</code>, <code>first</code>, <code>last</code>, <code>minimum</code>, <code>maximum</code>, <code>extrema</code> and <code>Statistics.mean</code>. These may be an order of magnitude or more faster than <code>count</code> is a special-cased as it does not need a fill value.</p></li><li><p><code>data</code>: a GeoInterface.jl <code>AbstractGeometry</code>, a nested <code>Vector</code> of <code>AbstractGeometry</code>, or a Tables.jl compatible object containing a <code>:geometry</code> column or points and values columns, in which case <code>geometrycolumn</code> must be specified.</p></li></ul><p><strong>Keywords</strong></p><p>These are detected automatically from <code>A</code> and <code>data</code> where possible.</p><ul><li><p><code>fill</code>: the value or values to fill a polygon with. A <code>Symbol</code> or tuple of <code>Symbol</code> will be used to retrieve properties from features or column values from table rows. An array or other iterable will be used for each geometry, in order. <code>fill</code> can also be a function of the current value, e.g. <code>x -&gt; x + 1</code>.</p></li><li><p><code>op</code>: A reducing function that accepts two values and returns one, like <code>min</code> to <code>minimum</code>. For common methods this will be assigned for you, or is not required. But you can use it instead of a <code>reducer</code> as it will usually be faster.</p></li><li><p><code>to</code>: a <code>Raster</code>, <code>RasterStack</code>, <code>Tuple</code> of <code>Dimension</code> or <code>Extents.Extent</code>. If no <code>to</code> object is provided the extent will be calculated from the geometries, Additionally, when no <code>to</code> object or an <code>Extent</code> is passed for <code>to</code>, the <code>size</code> or <code>res</code> keyword must also be used.</p></li><li><p><code>res</code>: the resolution of the dimensions (often in meters or degrees), a <code>Real</code> or <code>Tuple{&lt;:Real,&lt;:Real}</code>. Only required when <code>to</code> is not used or is an <code>Extents.Extent</code>, and <code>size</code> is not used.</p></li><li><p><code>size</code>: the size of the output array, as a <code>Tuple{Int,Int}</code> or single <code>Int</code> for a square. Only required when <code>to</code> is not used or is an <code>Extents.Extent</code>, and <code>res</code> is not used.</p></li><li><p><code>crs</code>: a <code>crs</code> which will be attached to the resulting raster when <code>to</code> not passed or is an <code>Extent</code>. Otherwise the crs from <code>to</code> is used.</p></li><li><p><code>boundary</code>: for polygons, include pixels where the <code>:center</code> is inside the polygon, where the polygon <code>:touches</code> the pixel, or that are completely <code>:inside</code> the polygon. The default is <code>:center</code>.</p></li><li><p><code>shape</code>: Force <code>data</code> to be treated as <code>:polygon</code>, <code>:line</code> or <code>:point</code> geometries. using points or lines as polygons may have unexpected results.</p></li><li><p><code>geometrycolumn</code>: <code>Symbol</code> to manually select the column the geometries are in when <code>data</code> is a Tables.jl compatible table, or a tuple of <code>Symbol</code> for columns of point coordinates.</p></li><li><p><code>progress</code>: show a progress bar, <code>true</code> by default, <code>false</code> to hide.</p></li><li><p><code>vebose</code>: whether to print messages about potential problems. <code>true</code> by default.</p></li><li><p><code>threaded</code>: run operations in parallel, <code>false</code> by default. In some circumstances <code>threaded</code> can give large speedups over single-threaded operation. This can be true for complicated geometries written into low-resolution rasters, but may not be for simple geometries with high-resolution rasters. With very large rasters threading may be counter productive due to excessive memory use. Caution should also be used: <code>threaded</code> should not be used in in-place functions writing to <code>BitArray</code> or other arrays where race conditions can occur.</p></li><li><p><code>threadsafe</code>: specify that custom <code>reducer</code> and/or <code>op</code> functions are thread-safe, in that the order of operation or blocking does not matter. For example, <code>sum</code> and <code>maximum</code> are thread-safe, because the answer is approximately (besides floating point error) the same after running on nested blocks, or on all the data. In contrast, <code>median</code> or <code>last</code> are not, because the blocking (<code>median</code>) or order (<code>last</code>) matters.</p></li><li><p><code>to</code>: a <code>Raster</code>, <code>RasterStack</code>, <code>Tuple</code> of <code>Dimension</code> or <code>Extents.Extent</code>. If no <code>to</code> object is provided the extent will be calculated from the geometries, Additionally, when no <code>to</code> object or an <code>Extent</code> is passed for <code>to</code>, the <code>size</code> or <code>res</code> keyword must also be used.</p></li><li><p><code>res</code>: the resolution of the dimensions (often in meters or degrees), a <code>Real</code> or <code>Tuple{&lt;:Real,&lt;:Real}</code>. Only required when <code>to</code> is not used or is an <code>Extents.Extent</code>, and <code>size</code> is not used.</p></li><li><p><code>size</code>: the size of the output array, as a <code>Tuple{Int,Int}</code> or single <code>Int</code> for a square. Only required when <code>to</code> is not used or is an <code>Extents.Extent</code>, and <code>res</code> is not used.</p></li><li><p><code>crs</code>: a <code>crs</code> which will be attached to the resulting raster when <code>to</code> not passed or is an <code>Extent</code>. Otherwise the crs from <code>to</code> is used.</p></li><li><p><code>boundary</code>: for polygons, include pixels where the <code>:center</code> is inside the polygon, where the polygon <code>:touches</code> the pixel, or that are completely <code>:inside</code> the polygon. The default is <code>:center</code>.</p></li><li><p><code>shape</code>: Force <code>data</code> to be treated as <code>:polygon</code>, <code>:line</code> or <code>:point</code> geometries. using points or lines as polygons may have unexpected results.</p></li></ul><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, ArchGDAL, Plots, Dates, Shapefile, GeoInterface, Downloads</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Lookups</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Download a borders shapefile</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shapefile_url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/nvkelso/natural-earth-vector/raw/master/10m_cultural/ne_10m_admin_0_countries.shp&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shapefile_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;country_borders.shp&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(shapefile_name) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Downloads</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">download</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(shapefile_url, shapefile_name)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Load the shapes for indonesia</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">indonesia_border </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Shapefile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(shapefile_name)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shapes[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Make an empty EPSG 4326 projected Raster of the area of Indonesia</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dimz </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Projected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">145</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; sampling</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Intervals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), crs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EPSG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4326</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Projected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; sampling</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Intervals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), crs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EPSG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4326</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> zeros</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(UInt32, dimz; missingval</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UInt32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Rasterize each indonesian island with a different number. The islands are</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># rings of a multi-polygon, so we use \`GI.getring\` to get them all separately.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">islands </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(GeoInterface</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(indonesia_border))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rasterize!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(last, A, islands; fill</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(islands), progress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># And plot</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Rasters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A); color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p, indonesia_border; fillalpha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, linewidth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/indonesia_rasterized.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span></code></pre></div><p><img src="`+f+'" alt=""></p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/rasterize.jl#L482-L538" target="_blank" rel="noreferrer">source</a></p>',12))]),i("details",gs,[i("summary",null,[s[117]||(s[117]=i("a",{id:"Rasters.replace_missing-Tuple{Any}",href:"#Rasters.replace_missing-Tuple{Any}"},[i("span",{class:"jlbinding"},"Rasters.replace_missing")],-1)),s[118]||(s[118]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[119]||(s[119]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">replace_missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRaster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, newmissingval)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">replace_missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, newmissingval)</span></span></code></pre></div><p>Replace missing values in the array or stack with a new missing value, also updating the <code>missingval</code> field/s.</p><p><strong>Keywords</strong></p><ul><li><p><code>filename</code>: a filename to write to directly, useful for large files.</p></li><li><p><code>suffix</code>: a string or value to append to the filename. A tuple of <code>suffix</code> will be applied to stack layers. <code>keys(stack)</code> are the default.</p></li></ul><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, ArchGDAL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{Climate}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:prec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> replace_missing</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">missingval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">missing</span></span></code></pre></div><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/replace_missing.jl#L1-L23" target="_blank" rel="noreferrer">source</a></p>`,7))]),i("details",Es,[i("summary",null,[s[120]||(s[120]=i("a",{id:"Rasters.reproject-NTuple{4, Any}",href:"#Rasters.reproject-NTuple{4, Any}"},[i("span",{class:"jlbinding"},"Rasters.reproject")],-1)),s[121]||(s[121]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[122]||(s[122]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reproject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(source</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GeoFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GeoFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dimension</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, val)</span></span></code></pre></div><p><code>reproject</code> uses ArchGDAL.reproject, but implemented for a reprojecting a value array of values, a single dimension at a time.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/reproject.jl#L42-L47" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ys,[i("summary",null,[s[123]||(s[123]=i("a",{id:"Rasters.reproject-Tuple{Any}",href:"#Rasters.reproject-Tuple{Any}"},[i("span",{class:"jlbinding"},"Rasters.reproject")],-1)),s[124]||(s[124]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[125]||(s[125]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reproject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj; crs)</span></span></code></pre></div><p>Reproject the lookups of <code>obj</code> to a different crs.</p><p>This is a lossless operation for the raster data, as only the lookup values change. This is only possible when the axes of source and destination projections are aligned: the change is usually from a <a href="./@ref"><code>Regular</code></a> and an <a href="./@ref"><code>Irregular</code></a> lookup spans.</p><p>For converting between projections that are rotated, skewed or warped in any way, use <a href="/Rasters.jl/v0.14.0/api#Rasters.resample-Tuple"><code>resample</code></a>.</p><p>Dimensions without an <code>AbstractProjected</code> lookup (such as a <code>Ti</code> dimension) are silently returned without modification.</p><p><strong>Arguments</strong></p><ul><li><p><code>obj</code>: a <code>Lookup</code>, <code>Dimension</code>, <code>Tuple</code> of <code>Dimension</code>, <code>Raster</code> or <code>RasterStack</code>.</p></li><li><p><code>crs</code>: a <code>crs</code> which will be attached to the resulting raster when <code>to</code> not passed or is an <code>Extent</code>. Otherwise the crs from <code>to</code> is used.</p></li></ul><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/reproject.jl#L1-L21" target="_blank" rel="noreferrer">source</a></p>',8))]),i("details",us,[i("summary",null,[s[126]||(s[126]=i("a",{id:"Rasters.resample-Tuple",href:"#Rasters.resample-Tuple"},[i("span",{class:"jlbinding"},"Rasters.resample")],-1)),s[127]||(s[127]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[128]||(s[128]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; to</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xs), kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><code>resample</code> uses <code>warp</code> (which uses GDALs <code>gdalwarp</code>) to resample a <a href="/Rasters.jl/v0.14.0/api#Rasters.Raster"><code>Raster</code></a> or <a href="/Rasters.jl/v0.14.0/api#Rasters.RasterStack"><code>RasterStack</code></a> to a new <code>resolution</code> and optionally new <code>crs</code>, or to snap to the bounds, resolution and crs of the object <code>to</code>.</p><p>Dimensions without an <code>AbstractProjected</code> lookup (such as a <code>Ti</code> dimension) are iteratively resampled with GDAL and joined back into a single array.</p><p>If projections can be converted for each axis independently, it may be faster and more accurate to use <a href="/Rasters.jl/v0.14.0/api#Rasters.reproject-NTuple{4, Any}"><code>reproject</code></a>.</p><p>Run <code>using ArchGDAL</code> to make this method available.</p><p><strong>Arguments</strong></p><ul><li><code>x</code>: the object/s to resample.</li></ul><p><strong>Keywords</strong></p><ul><li><p><code>to</code>: a <code>Raster</code>, <code>RasterStack</code>, <code>Tuple</code> of <code>Dimension</code> or <code>Extents.Extent</code>. If no <code>to</code> object is provided the extent will be calculated from <code>x</code>,</p></li><li><p><code>res</code>: the resolution of the dimensions (often in meters or degrees), a <code>Real</code> or <code>Tuple{&lt;:Real,&lt;:Real}</code>. Only required when <code>to</code> is not used or is an <code>Extents.Extent</code>, and <code>size</code> is not used.</p></li><li><p><code>size</code>: the size of the output array, as a <code>Tuple{Int,Int}</code> or single <code>Int</code> for a square. Only required when <code>to</code> is not used or is an <code>Extents.Extent</code>, and <code>res</code> is not used.</p></li><li><p><code>crs</code>: a <code>crs</code> which will be attached to the resulting raster when <code>to</code> not passed or is an <code>Extent</code>. Otherwise the crs from <code>to</code> is used.</p></li><li><p><code>method</code>: A <code>Symbol</code> or <code>String</code> specifying the method to use for resampling. From the docs for <a href="https://gdal.org/programs/gdalwarp.html#cmdoption-gdalwarp-r" target="_blank" rel="noreferrer"><code>gdalwarp</code></a>:</p><ul><li><p><code>:near</code>: nearest neighbour resampling (default, fastest algorithm, worst interpolation quality).</p></li><li><p><code>:bilinear</code>: bilinear resampling.</p></li><li><p><code>:cubic</code>: cubic resampling.</p></li><li><p><code>:cubicspline</code>: cubic spline resampling.</p></li><li><p><code>:lanczos</code>: Lanczos windowed sinc resampling.</p></li><li><p><code>:average</code>: average resampling, computes the weighted average of all non-NODATA contributing pixels. rms root mean square / quadratic mean of all non-NODATA contributing pixels (GDAL &gt;= 3.3)</p></li><li><p><code>:mode</code>: mode resampling, selects the value which appears most often of all the sampled points.</p></li><li><p><code>:max</code>: maximum resampling, selects the maximum value from all non-NODATA contributing pixels.</p></li><li><p><code>:min</code>: minimum resampling, selects the minimum value from all non-NODATA contributing pixels.</p></li><li><p><code>:med</code>: median resampling, selects the median value of all non-NODATA contributing pixels.</p></li><li><p><code>:q1</code>: first quartile resampling, selects the first quartile value of all non-NODATA contributing pixels.</p></li><li><p><code>:q3</code>: third quartile resampling, selects the third quartile value of all non-NODATA contributing pixels.</p></li><li><p><code>:sum</code>: compute the weighted sum of all non-NODATA contributing pixels (since GDAL 3.1)</p></li></ul><p>Where NODATA values are set to <code>missingval</code>.</p></li><li><p><code>filename</code>: a filename to write to directly, useful for large files.</p></li><li><p><code>suffix</code>: a string or value to append to the filename. A tuple of <code>suffix</code> will be applied to stack layers. <code>keys(stack)</code> are the default.</p></li></ul><p>Note:</p><ul><li>GDAL may cause some unexpected changes in the raster, such as changing the <code>crs</code> type from <code>EPSG</code> to <code>WellKnownText</code> (it will represent the same CRS).</li></ul><p><strong>Example</strong></p><p>Resample a WorldClim layer to match an EarthEnv layer:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, ArchGDAL, Plots</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{Climate}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:prec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">B </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(EarthEnv{HabitatHeterogeneity}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:evenness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A; to</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">B))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/resample_example_before.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/resample_example_after.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span></code></pre></div><p><strong>Before <code>resample</code>:</strong></p><p><img src="`+C+'" alt=""></p><p><strong>After <code>resample</code>:</strong></p><p><img src="'+A+'" alt=""></p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/extensions.jl#L17-L96" target="_blank" rel="noreferrer">source</a></p>',20))]),i("details",ms,[i("summary",null,[s[129]||(s[129]=i("a",{id:"Rasters.setcrs-Tuple{Union{AbstractRaster, AbstractRasterStack}, Any}",href:"#Rasters.setcrs-Tuple{Union{AbstractRaster, AbstractRasterStack}, Any}"},[i("span",{class:"jlbinding"},"Rasters.setcrs")],-1)),s[130]||(s[130]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[131]||(s[131]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setcrs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, crs)</span></span></code></pre></div><p>Set the crs of a <code>Raster</code>, <code>RasterStack</code>, <code>Tuple</code> of <code>Dimension</code>, or a <code>Dimension</code>. The <code>crs</code> is expected to be a GeoFormatTypes.jl <code>CRS</code> or <code>Mixed</code> <code>GeoFormat</code> type</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/crs.jl#L47-L52" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",bs,[i("summary",null,[s[132]||(s[132]=i("a",{id:"Rasters.setmappedcrs-Tuple{Union{AbstractRaster, AbstractRasterStack}, Any}",href:"#Rasters.setmappedcrs-Tuple{Union{AbstractRaster, AbstractRasterStack}, Any}"},[i("span",{class:"jlbinding"},"Rasters.setmappedcrs")],-1)),s[133]||(s[133]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[134]||(s[134]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setmappedcrs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, crs)</span></span></code></pre></div><p>Set the mapped crs of a <code>Raster</code>, a <code>RasterStack</code>, a <code>Tuple</code> of <code>Dimension</code>, or a <code>Dimension</code>. The <code>crs</code> is expected to be a GeoFormatTypes.jl <code>CRS</code> or <code>Mixed</code> <code>GeoFormat</code> type</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/crs.jl#L64-L70" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Fs,[i("summary",null,[s[135]||(s[135]=i("a",{id:"Rasters.slice-Tuple{Union{AbstractRaster, AbstractRasterStack}, Any}",href:"#Rasters.slice-Tuple{Union{AbstractRaster, AbstractRasterStack}, Any}"},[i("span",{class:"jlbinding"},"Rasters.slice")],-1)),s[136]||(s[136]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[137]||(s[137]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">slice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{AbstractRaster,AbstractRasterStack,AbstracRasterSeries}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dims) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RasterSeries</span></span></code></pre></div><p>Slice views along some dimension/s to obtain a <code>RasterSeries</code> of the slices.</p><p>For a <code>Raster</code> or <code>RasterStack</code> this will return a <code>RasterSeries</code> of <code>Raster</code> or <code>RasterStack</code> that are slices along the specified dimensions.</p><p>For a <code>RasterSeries</code>, the output is another series where the child objects are sliced and the series dimensions index is now of the child dimensions combined. <code>slice</code> on a <code>RasterSeries</code> with no dimensions will slice along the dimensions shared by both the series and child object.</p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/slice_combine.jl#L1-L14" target="_blank" rel="noreferrer">source</a></p>',6))]),i("details",fs,[i("summary",null,[s[138]||(s[138]=i("a",{id:"Rasters.trim-Tuple{Union{AbstractRaster, AbstractRasterStack}}",href:"#Rasters.trim-Tuple{Union{AbstractRaster, AbstractRasterStack}}"},[i("span",{class:"jlbinding"},"Rasters.trim")],-1)),s[139]||(s[139]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[140]||(s[140]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, pad</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Trim <code>missingval(x)</code> from <code>x</code> for axes in <code>dims</code>, returning a view of <code>x</code>.</p><p><strong>Arguments</strong></p><ul><li><code>x</code>: A <code>Raster</code> or <code>RasterStack</code>. For stacks, all layers must having missing values for a pixel for it to be trimmed.</li></ul><p><strong>Keywords</strong></p><ul><li><p><code>dims</code>: By default <code>dims=(XDim, YDim)</code>, so that trimming keeps the area of <code>X</code> and <code>Y</code> that contains non-missing values along all other dimensions.</p></li><li><p><code>pad</code>: The trimmed size will be padded by <code>pad</code> on all sides, although padding will not be added beyond the original extent of the array.</p></li></ul><p>As <code>trim</code> is lazy, <code>filename</code> and <code>suffix</code> keywords are not used.</p><p><strong>Example</strong></p><p>Create trimmed layers of Australian habitat heterogeneity.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, Plots</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">layers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:evenness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:contrast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:correlation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">st </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(EarthEnv{HabitatHeterogeneity}, layers)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Roughly cut out australia</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ausbounds </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 160</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aus </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> st[ausbounds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(aus)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Trim missing values and plot</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(aus))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/trim_example_before.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/trim_example_after.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span></code></pre></div><p><strong>Before <code>trim</code>:</strong></p><p><img src="`+v+'" alt=""></p><p><strong>After <code>trim</code>:</strong></p><p><img src="'+R+'" alt=""></p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/trim.jl#L1-L53" target="_blank" rel="noreferrer">source</a></p>',16))]),i("details",Cs,[i("summary",null,[s[141]||(s[141]=i("a",{id:"Rasters.warp-Tuple",href:"#Rasters.warp-Tuple"},[i("span",{class:"jlbinding"},"Rasters.warp")],-1)),s[142]||(s[142]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[143]||(s[143]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">warp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRaster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, flags</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Gives access to the GDALs <code>gdalwarp</code> method given a <code>Dict</code> of <code>flag =&gt; value</code> arguments that can be converted to strings, or vectors where multiple space-separated arguments are required.</p><p>Arrays with additional dimensions not handled by GDAL (other than <code>X</code>, <code>Y</code>, <code>Band</code>) are sliced, warped, and then combined to match the original array dimensions. These slices will <em>not</em> be written to disk and loaded lazily at this stage - you will need to do that manually if required.</p><p>See <a href="https://gdal.org/programs/gdalwarp.html" target="_blank" rel="noreferrer">the gdalwarp docs</a> for a list of arguments.</p><p>Run <code>using ArchGDAL</code> to make this method available.</p><p><strong>Keywords</strong></p><ul><li><p><code>missingval</code>: value representing missing data, normally detected from the file and automatically converted to <code>missing</code>. Setting to an alternate value, such as <code>0</code> or <code>NaN</code> may be desirable for improved perfomance. <code>nothing</code> specifies no missing value. Using the same <code>missingval</code> the file already has removes the overhead of replacing it, this can be done by passing the <code>missingval</code> function as <code>missingval</code>. If the file has an incorrect value, we can manually define the transformation as a pair like <code>correct_value =&gt; missing</code> or <code>correct_value =&gt; NaN</code>. <code>correct_value =&gt; correct_value</code> will keep remove the overhead of changing it. Note: When <code>raw=true</code> is set, <code>missingval</code> is not changed from the value specified in the file.</p></li><li><p><code>filename</code>: a filename to write to directly, useful for large files.</p></li><li><p><code>suffix</code>: a string or value to append to the filename. A tuple of <code>suffix</code> will be applied to stack layers. <code>keys(stack)</code> are the default.</p></li><li><p><code>missingval</code>: the missing value to use during warping, will default to \`Rasters.missingval(A). Passing a pair will specify the missing value to use after warping.</p></li></ul><p>Any additional keywords are passed to <code>ArchGDAL.Dataset</code>.</p><p><strong>Example</strong></p><p>This simply resamples the array with the <code>:tr</code> (output file resolution) and <code>:r</code> flags, giving us a pixelated version:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, ArchGDAL, RasterDataSources, Plots</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{Climate}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:prec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flags </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    :tr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    :r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :near</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">warp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A, flags))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/warp_example_before.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">savefig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/warp_example_after.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span></code></pre></div><p><strong>Before <code>warp</code>:</strong></p><p><img src="`+D+'" alt=""></p><p><strong>After <code>warp</code>:</strong></p><p><img src="'+B+'" alt=""></p><p>In practise, prefer <a href="/Rasters.jl/v0.14.0/api#Rasters.resample-Tuple"><code>resample</code></a> for this. But <code>warp</code> may be more flexible.</p><p>WARNING: This feature is experimental. It may change in future versions, and may not be 100% reliable in all cases. Please file github issues if problems occur.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/extensions.jl#L99-L160" target="_blank" rel="noreferrer">source</a></p>',18))]),i("details",As,[i("summary",null,[s[144]||(s[144]=i("a",{id:"Rasters.zonal-Tuple{Any, Union{AbstractRaster, AbstractRasterStack}}",href:"#Rasters.zonal-Tuple{Any, Union{AbstractRaster, AbstractRasterStack}}"},[i("span",{class:"jlbinding"},"Rasters.zonal")],-1)),s[145]||(s[145]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[146]||(s[146]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zonal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Raster,RasterStack}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; of, kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Calculate zonal statistics for the the zone of a <code>Raster</code> or <code>RasterStack</code> covered by the <code>of</code> object/s.</p><p><strong>Arguments</strong></p><ul><li><p><code>f</code>: any function that reduces an iterable to a single value, such as <code>sum</code> or <code>Statistics.mean</code></p></li><li><p><code>x</code>: A <code>Raster</code> or <code>RasterStack</code></p></li><li><p><code>of</code>: A <code>DimTuple</code>, <code>Extent</code>, a <a href="/Rasters.jl/v0.14.0/api#Rasters.Raster"><code>Raster</code></a> or one or multiple geometries. Geometries can be a GeoInterface.jl <code>AbstractGeometry</code>, a nested <code>Vector</code> of <code>AbstractGeometry</code>, or a Tables.jl compatible object containing a <code>:geometry</code> column or points and values columns, in which case <code>geometrycolumn</code> must be specified.</p></li></ul><p><strong>Keywords</strong></p><ul><li><code>geometrycolumn</code>: <code>Symbol</code> to manually select the column the geometries are in when <code>data</code> is a Tables.jl compatible table, or a tuple of <code>Symbol</code> for columns of point coordinates.</li></ul><p>These can be used when <code>of</code> is or contains (a) GeoInterface.jl compatible object(s):</p><ul><li><p><code>shape</code>: Force <code>data</code> to be treated as <code>:polygon</code>, <code>:line</code> or <code>:point</code>, where possible.</p></li><li><p><code>boundary</code>: for polygons, include pixels where the <code>:center</code> is inside the polygon, where the line <code>:touches</code> the pixel, or that are completely <code>:inside</code> inside the polygon. The default is <code>:center</code>.</p></li><li><p><code>progress</code>: show a progress bar, <code>true</code> by default, <code>false</code> to hide..</p></li><li><p><code>skipmissing</code>: wether to apply <code>f</code> to the result of <code>skipmissing(A)</code> or not. If <code>true</code> <code>f</code> will be passed an iterator over the values, which loses all spatial information. if <code>false</code> <code>f</code> will be passes a masked <code>Raster</code> or <code>RasterStack</code>, and will be responsible for handling missing values itself. The default value is <code>true</code>.</p></li></ul><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources, ArchGDAL, DataFrames, Statistics, Dates, NaturalEarth</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Download borders</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">countries </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> naturalearth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;admin_0_countries&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DataFrame</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Download and read a raster stack from WorldClim</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">st </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{Climate}; month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Jan)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Calculate the january mean of all climate variables for all countries</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">january_stats </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> zonal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mean, st; of</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">countries, boundary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:touches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, progress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DataFrame</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Add the country name column (natural earth has some string errors it seems)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">insertcols!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(january_stats, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:country</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(countries</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ADMIN, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">r&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">[^A-Za-z ]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">258</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">×</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DataFrame</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Row │ country                       tmin       tmax       tavg       prec     </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">⋯</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     │ SubStrin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">…</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                     Float32    Float32    Float32    Float64  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">⋯</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">─────┼──────────────────────────────────────────────────────────────────────────</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │ Indonesia                      </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">21.5447</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    29.1865</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    25.3656</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   271.063</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ⋯</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │ Malaysia                       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">21.3087</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    28.4291</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    24.8688</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   273.381</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │ Chile                           </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7.24534</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   17.9262</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    12.5858</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    78.1287</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │ Bolivia                        </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">17.2065</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    27.7454</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    22.4758</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   192.542</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │ Peru                           </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15.0273</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    25.5504</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    20.2889</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   180.007</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ⋯</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │ Argentina                      </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13.6751</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    27.6716</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    20.6732</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    67.1837</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │ Dhekelia Sovereign Base Area    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.87126</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   15.8991</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    10.8868</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    76.25</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │ Cyprus                          </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.65921</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   14.6665</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    10.1622</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    97.4474</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ⋮</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  │              </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">⋮</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                    ⋮</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          ⋮</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          ⋮</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         ⋮</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     ⋱</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 252</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │ Spratly Islands                </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       29.2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       27.05</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      70.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋯</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 253</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │ Clipperton Island              </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">21.5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       33.2727</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    27.4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        6.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 254</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │ Macao S                        </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11.6694</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    17.7288</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    14.6988</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    28.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │ Ashmore and Cartier Islands   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NaN</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        NaN</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        NaN</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        NaN</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │ Bajo Nuevo Bank               </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NaN</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        NaN</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        NaN</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        NaN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      ⋯</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 257</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │ Serranilla Bank               </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NaN</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        NaN</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        NaN</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        NaN</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 258</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │ Scarborough Reef              </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NaN</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        NaN</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        NaN</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        NaN</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                                  3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> columns and </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">243</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rows omitted</span></span></code></pre></div><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/methods/zonal.jl#L1-L62" target="_blank" rel="noreferrer">source</a></p>`,11))]),s[196]||(s[196]=i("h2",{id:"Reference-Internal-functions",tabindex:"-1"},[e("Reference - Internal functions "),i("a",{class:"header-anchor",href:"#Reference-Internal-functions","aria-label":'Permalink to "Reference - Internal functions {#Reference-Internal-functions}"'},"​")],-1)),i("details",vs,[i("summary",null,[s[147]||(s[147]=i("a",{id:"Rasters.AbstractProjected",href:"#Rasters.AbstractProjected"},[i("span",{class:"jlbinding"},"Rasters.AbstractProjected")],-1)),s[148]||(s[148]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[149]||(s[149]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractProjected </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractSampled</span></span></code></pre></div><p>Abstract supertype for projected index lookups.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/lookup.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Rs,[i("summary",null,[s[150]||(s[150]=i("a",{id:"Rasters.FileArray",href:"#Rasters.FileArray"},[i("span",{class:"jlbinding"},"Rasters.FileArray")],-1)),s[151]||(s[151]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[152]||(s[152]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileArray{S} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DiskArrays.AbstractDiskArray</span></span></code></pre></div><p>Filearray is a DiskArrays.jl <code>AbstractDiskArray</code>. Instead of holding an open object, it just holds a filename string that is opened lazily when it needs to be read.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/filearray.jl#L1-L7" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ds,[i("summary",null,[s[153]||(s[153]=i("a",{id:"Rasters.FileStack",href:"#Rasters.FileStack"},[i("span",{class:"jlbinding"},"Rasters.FileStack")],-1)),s[154]||(s[154]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[155]||(s[155]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileStack{S,Na}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FileStack{S,Na}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(filename, types, sizes, eachchunk, haschunks, write)</span></span></code></pre></div><p>A wrapper object that holds file pointer and size/chunking metadata for a multi-layered stack stored in a single file, typically netcdf or hdf5.</p><p><code>S</code> is a backend type like <code>NCDsource</code>, and <code>Na</code> is a tuple of <code>Symbol</code> keys.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/filestack.jl#L1-L11" target="_blank" rel="noreferrer">source</a></p>`,4))]),i("details",Bs,[i("summary",null,[s[156]||(s[156]=i("a",{id:"Rasters.OpenStack",href:"#Rasters.OpenStack"},[i("span",{class:"jlbinding"},"Rasters.OpenStack")],-1)),s[157]||(s[157]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[158]||(s[158]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">OpenStack{X,K}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">OpenStack{X,K}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dataset)</span></span></code></pre></div><p>A wrapper for any stack-like opened dataset that can be indexed with <code>Symbol</code> keys to retrieve <code>AbstractArray</code> layers.</p><p><code>OpenStack</code> is usually hidden from users, wrapped in a regular <code>RasterStack</code> passed as the function argument in <code>open(stack)</code> when the stack is contained in a single file.</p><p><code>X</code> is a backend type like <code>NCDsource</code>, and <code>K</code> is a tuple of <code>Symbol</code> keys.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/openstack.jl#L1-L14" target="_blank" rel="noreferrer">source</a></p>`,5))]),i("details",js,[i("summary",null,[s[159]||(s[159]=i("a",{id:"Rasters.RasterDiskArray",href:"#Rasters.RasterDiskArray"},[i("span",{class:"jlbinding"},"Rasters.RasterDiskArray")],-1)),s[160]||(s[160]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[161]||(s[161]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RasterDiskArray </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DiskArrays.AbstractDiskArray</span></span></code></pre></div><p>A basic DiskArrays.jl wrapper for objects that don&#39;t have one defined yet. When we <code>open</code> a <code>FileArray</code> it is replaced with a <code>RasterDiskArray</code>.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/filearray.jl#L80-L85" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ws,[i("summary",null,[s[162]||(s[162]=i("a",{id:"Base.open-Tuple{Function, AbstractRaster}",href:"#Base.open-Tuple{Function, AbstractRaster}"},[i("span",{class:"jlbinding"},"Base.open")],-1)),s[163]||(s[163]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[164]||(s[164]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRaster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; write</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><code>open</code> is used to open any <code>lazy=true</code> <code>AbstractRaster</code> and do multiple operations on it in a safe way. The <code>write</code> keyword opens the file in write lookup so that it can be altered on disk using e.g. a broadcast.</p><p><code>f</code> is a method that accepts a single argument - an <code>Raster</code> object which is just an <code>AbstractRaster</code> that holds an open disk-based object. Often it will be a <code>do</code> block:</p><p><code>lazy=false</code> (in-memory) rasters will ignore <code>open</code> and pass themselves to <code>f</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># A is an \`Raster\` wrapping the opened disk-based object.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(filepath); write</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> A</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    mask!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A; with</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">maskfile)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[I</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.*=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ...  other things you need to do with the open file</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>By using a do block to open files we ensure they are always closed again after we finish working with them.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/array.jl#L126-L150" target="_blank" rel="noreferrer">source</a></p>`,7))]),i("details",xs,[i("summary",null,[s[165]||(s[165]=i("a",{id:"Base.read!-Tuple{AbstractRaster, AbstractArray}",href:"#Base.read!-Tuple{AbstractRaster, AbstractArray}"},[i("span",{class:"jlbinding"},"Base.read!")],-1)),s[166]||(s[166]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[167]||(s[167]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{AbstractString,AbstractRaster}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dst</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRaster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{AbstractString,AbstractRasterStack}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dst</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRasterSeries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dst</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRasterSeries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><code>read!</code> will copy the data from <code>src</code> to the object <code>dst</code>.</p><p><code>src</code> can be an object or a file-path <code>String</code>.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/read.jl#L35-L43" target="_blank" rel="noreferrer">source</a></p>`,4))]),i("details",Ts,[i("summary",null,[s[168]||(s[168]=i("a",{id:"Base.read-Tuple{Union{AbstractRaster, AbstractRasterSeries, AbstractRasterStack}}",href:"#Base.read-Tuple{Union{AbstractRaster, AbstractRasterSeries, AbstractRasterStack}}"},[i("span",{class:"jlbinding"},"Base.read")],-1)),s[169]||(s[169]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[170]||(s[170]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRaster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRasterSeries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><code>read</code> will move a Rasters.jl object completely to memory.</p><p><strong>Keywords</strong></p><ul><li><code>checkmemory</code>: if <code>true</code> (the default), check if there is enough memory for the operation. <code>false</code> will ignore memory needs.</li></ul><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/read.jl#L1-L11" target="_blank" rel="noreferrer">source</a></p>`,5))]),i("details",Ss,[i("summary",null,[s[171]||(s[171]=i("a",{id:"Base.skipmissing-Tuple{Raster}",href:"#Base.skipmissing-Tuple{Raster}"},[i("span",{class:"jlbinding"},"Base.skipmissing")],-1)),s[172]||(s[172]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[173]||(s[173]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">skipmissing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(itr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns an iterable over the elements in a <code>Raster</code> object, skipping any values equal to either the <code>missingval</code> or <code>missing</code>.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/skipmissing.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",qs,[i("summary",null,[s[174]||(s[174]=i("a",{id:"Base.write-Tuple{AbstractString, AbstractRasterSeries}",href:"#Base.write-Tuple{AbstractString, AbstractRasterSeries}"},[i("span",{class:"jlbinding"},"Base.write")],-1)),s[175]||(s[175]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[176]||(s[176]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(filepath</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRasterSeries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Write any <a href="/Rasters.jl/v0.14.0/api#Rasters.AbstractRasterSeries"><code>AbstractRasterSeries</code></a> to multiple files, guessing the backend from the file extension.</p><p>The lookup values of the series will be appended to the filepath (before the extension), separated by underscores.</p><p>All keywords are passed through to these <code>Raster</code> and <code>RasterStack</code> methods.</p><p><strong>Keywords</strong></p><ul><li><p><code>chunks</code>: a <code>NTuple{N,Int}</code> specifying the chunk size for each dimension. To specify only specific dimensions, a Tuple of <code>Dimension</code> wrapping <code>Int</code> or a <code>NamedTuple</code> of <code>Int</code> can be used. Other dimensions will have a chunk size of <code>1</code>. <code>true</code> can be used to mean: use the original chunk size of the lazy <code>Raster</code> being written or X and Y of 256 by 256. <code>false</code> means don&#39;t use chunks at all.</p></li><li><p><code>ext</code>: filename extension such as &quot;.tiff&quot; or &quot;.nc&quot;. Used to specify specific files if only a directory path is used.</p></li><li><p><code>force</code>: <code>false</code> by default. If <code>true</code> it force writing to a file destructively, even if it already exists.</p></li><li><p><code>missingval</code>: value representing missing data, normally detected from the file and automatically converted to <code>missing</code>. Setting to an alternate value, such as <code>0</code> or <code>NaN</code> may be desirable for improved perfomance. <code>nothing</code> specifies no missing value. Using the same <code>missingval</code> the file already has removes the overhead of replacing it, this can be done by passing the <code>missingval</code> function as <code>missingval</code>. If the file has an incorrect value, we can manually define the transformation as a pair like <code>correct_value =&gt; missing</code> or <code>correct_value =&gt; NaN</code>. <code>correct_value =&gt; correct_value</code> will keep remove the overhead of changing it. Note: When <code>raw=true</code> is set, <code>missingval</code> is not changed from the value specified in the file. For series with <code>RasterStack</code> child objects, this may be a <code>NamedTuple</code>, one for each layer.</p></li><li><p><code>source</code>: Usually automatically detected from filepath extension. To manually force, a <code>Symbol</code> can be passed <code>:gdal</code>, <code>:netcdf</code>, <code>:grd</code>, <code>:grib</code>. The internal <a href="./@ref"><code>Rasters.Source</code></a> objects, such as <code>Rasters.GDALsource()</code>, <code>Rasters.GRIBsource()</code> or <code>Rasters.NCDsource()</code> can also be used.</p></li><li><p><code>vebose</code>: whether to print messages about potential problems. <code>true</code> by default.</p></li></ul><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/write.jl#L162-L182" target="_blank" rel="noreferrer">source</a></p>',7))]),i("details",Is,[i("summary",null,[s[177]||(s[177]=i("a",{id:"Base.write-Tuple{AbstractString, AbstractRasterStack}",href:"#Base.write-Tuple{AbstractString, AbstractRasterStack}"},[i("span",{class:"jlbinding"},"Base.write")],-1)),s[178]||(s[178]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[179]||(s[179]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(filename</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Write any <a href="/Rasters.jl/v0.14.0/api#Rasters.AbstractRasterStack"><code>AbstractRasterStack</code></a> to one or multiple files, depending on the backend. Backend is guessed from the filename extension or forced with the <code>source</code> keyword.</p><p>If the source can&#39;t be saved as a stack-like object, individual array layers will be saved.</p><p><strong>Keywords</strong></p><ul><li><p><code>chunks</code>: a <code>NTuple{N,Int}</code> specifying the chunk size for each dimension. To specify only specific dimensions, a Tuple of <code>Dimension</code> wrapping <code>Int</code> or a <code>NamedTuple</code> of <code>Int</code> can be used. Other dimensions will have a chunk size of <code>1</code>. <code>true</code> can be used to mean: use the original chunk size of the lazy <code>Raster</code> being written or X and Y of 256 by 256. <code>false</code> means don&#39;t use chunks at all.</p></li><li><p><code>ext</code>: filename extension such as &quot;.tiff&quot; or &quot;.nc&quot;. Used to specify specific files if only a directory path is used.</p></li><li><p><code>force</code>: <code>false</code> by default. If <code>true</code> it force writing to a file destructively, even if it already exists.</p></li><li><p><code>missingval</code>: value representing missing data, normally detected from the file and automatically converted to <code>missing</code>. Setting to an alternate value, such as <code>0</code> or <code>NaN</code> may be desirable for improved perfomance. <code>nothing</code> specifies no missing value. Using the same <code>missingval</code> the file already has removes the overhead of replacing it, this can be done by passing the <code>missingval</code> function as <code>missingval</code>. If the file has an incorrect value, we can manually define the transformation as a pair like <code>correct_value =&gt; missing</code> or <code>correct_value =&gt; NaN</code>. <code>correct_value =&gt; correct_value</code> will keep remove the overhead of changing it. Note: When <code>raw=true</code> is set, <code>missingval</code> is not changed from the value specified in the file. For <code>RasterStack</code> this may be a <code>NamedTuple</code>, one for each layer.</p></li><li><p><code>source</code>: Usually automatically detected from filepath extension. To manually force, a <code>Symbol</code> can be passed <code>:gdal</code>, <code>:netcdf</code>, <code>:grd</code>, <code>:grib</code>. The internal <a href="./@ref"><code>Rasters.Source</code></a> objects, such as <code>Rasters.GDALsource()</code>, <code>Rasters.GRIBsource()</code> or <code>Rasters.NCDsource()</code> can also be used.</p></li><li><p><code>suffix</code>: a string or value to append to the filename. A tuple of <code>suffix</code> will be applied to stack layers. <code>keys(stack)</code> are the default.</p></li><li><p><code>vebose</code>: whether to print messages about potential problems. <code>true</code> by default.</p></li></ul><p>Other keyword arguments are passed to the <code>write</code> method for the backend.</p><p><strong>NetCDF keywords</strong></p><ul><li><p><code>append</code>: If true, the variable of the current Raster will be appended to <code>filename</code>, if it actually exists.</p></li><li><p><code>deflatelevel</code>: Compression level: <code>0</code> (default) means no compression and <code>9</code> means maximum compression. Each chunk will be compressed individually.</p></li><li><p><code>shuffle</code>: If <code>true</code>, the shuffle filter is activated which can improve the compression ratio.</p></li><li><p><code>checksum</code>: The checksum method can be <code>:fletcher32</code> or <code>:nochecksum</code>, the default.</p></li><li><p><code>typename</code>: The name of the NetCDF type required for vlen arrays (<a href="https://web.archive.org/save/https://www.unidata.ucar.edu/software/netcdf/netcdf-4/newdocs/netcdf-c/nc_005fdef_005fvlen.html" target="_blank" rel="noreferrer">https://web.archive.org/save/https://www.unidata.ucar.edu/software/netcdf/netcdf-4/newdocs/netcdf-c/nc_005fdef_005fvlen.html</a>)</p></li></ul><p><strong>GDAL Keywords</strong></p><ul><li><p><code>force</code>: <code>false</code> by default. If <code>true</code> it force writing to a file destructively, even if it already exists.</p></li><li><p><code>driver</code>: A GDAL driver name <code>String</code> or a GDAL driver retrieved via <code>ArchGDAL.getdriver(drivername)</code>. By default <code>driver</code> is guessed from the filename extension.</p></li><li><p><code>options::Dict{String,String}</code>: A dictionary containing the dataset creation options passed to the driver. For example: <code>Dict(&quot;COMPRESS&quot; =&gt; &quot;DEFLATE&quot;)</code>.</p></li></ul><p>Valid <code>driver</code> names and the <code>options</code> for each can be found at: <a href="https://gdal.org/drivers/raster/index.html" target="_blank" rel="noreferrer">https://gdal.org/drivers/raster/index.html</a></p><p><strong>Source comments</strong></p><p><strong>R grd/grid files</strong></p><p>Write a <code>Raster</code> to a .grd file with a .gri header file. Returns the base of <code>filename</code> with a <code>.grd</code> extension.</p><p><strong>GDAL (tiff, and everything else)</strong></p><p>Used if you <code>write</code> a <code>Raster</code> with a <code>filename</code> extension that no other backend can write. GDAL is the fallback, and writes a lot of file types, but is not guaranteed to work.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/write.jl#L78-L99" target="_blank" rel="noreferrer">source</a></p>',17))]),i("details",Ls,[i("summary",null,[s[180]||(s[180]=i("a",{id:"Base.write-Tuple{AbstractString, AbstractRaster}",href:"#Base.write-Tuple{AbstractString, AbstractRaster}"},[i("span",{class:"jlbinding"},"Base.write")],-1)),s[181]||(s[181]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[182]||(s[182]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(filename</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRaster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; [source], kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Write an <a href="/Rasters.jl/v0.14.0/api#Rasters.AbstractRaster"><code>AbstractRaster</code></a> to file, guessing the backend from the file extension or using the <code>source</code> keyword.</p><p><strong>Keywords</strong></p><ul><li><p><code>chunks</code>: a <code>NTuple{N,Int}</code> specifying the chunk size for each dimension. To specify only specific dimensions, a Tuple of <code>Dimension</code> wrapping <code>Int</code> or a <code>NamedTuple</code> of <code>Int</code> can be used. Other dimensions will have a chunk size of <code>1</code>. <code>true</code> can be used to mean: use the original chunk size of the lazy <code>Raster</code> being written or X and Y of 256 by 256. <code>false</code> means don&#39;t use chunks at all.</p></li><li><p><code>force</code>: <code>false</code> by default. If <code>true</code> it force writing to a file destructively, even if it already exists.</p></li><li><p><code>missingval</code>: set the missing value (i.e. FillValue / nodataval) of the written raster, as Julia&#39;s <code>missing</code> cannot be stored. If not passed in, an appropriate <code>missingval</code> will be detected from the objects <code>missingval</code>, its <code>metadata</code>, or a default will be chosen base on the array element type(s).</p></li><li><p><code>source</code>: Usually automatically detected from filepath extension. To manually force, a <code>Symbol</code> can be passed <code>:gdal</code>, <code>:netcdf</code>, <code>:grd</code>, <code>:grib</code>. The internal <a href="./@ref"><code>Rasters.Source</code></a> objects, such as <code>Rasters.GDALsource()</code>, <code>Rasters.GRIBsource()</code> or <code>Rasters.NCDsource()</code> can also be used.</p></li></ul><p>Other keyword arguments are passed to the <code>write</code> method for the backend.</p><p><strong>NetCDF keywords</strong></p><ul><li><p><code>append</code>: If true, the variable of the current Raster will be appended to <code>filename</code>, if it actually exists.</p></li><li><p><code>deflatelevel</code>: Compression level: <code>0</code> (default) means no compression and <code>9</code> means maximum compression. Each chunk will be compressed individually.</p></li><li><p><code>shuffle</code>: If <code>true</code>, the shuffle filter is activated which can improve the compression ratio.</p></li><li><p><code>checksum</code>: The checksum method can be <code>:fletcher32</code> or <code>:nochecksum</code>, the default.</p></li><li><p><code>typename</code>: The name of the NetCDF type required for vlen arrays (<a href="https://web.archive.org/save/https://www.unidata.ucar.edu/software/netcdf/netcdf-4/newdocs/netcdf-c/nc_005fdef_005fvlen.html" target="_blank" rel="noreferrer">https://web.archive.org/save/https://www.unidata.ucar.edu/software/netcdf/netcdf-4/newdocs/netcdf-c/nc_005fdef_005fvlen.html</a>)</p></li></ul><p><strong>GDAL Keywords</strong></p><ul><li><p><code>force</code>: <code>false</code> by default. If <code>true</code> it force writing to a file destructively, even if it already exists.</p></li><li><p><code>driver</code>: A GDAL driver name <code>String</code> or a GDAL driver retrieved via <code>ArchGDAL.getdriver(drivername)</code>. By default <code>driver</code> is guessed from the filename extension.</p></li><li><p><code>options::Dict{String,String}</code>: A dictionary containing the dataset creation options passed to the driver. For example: <code>Dict(&quot;COMPRESS&quot; =&gt; &quot;DEFLATE&quot;)</code>.</p></li></ul><p>Valid <code>driver</code> names and the <code>options</code> for each can be found at: <a href="https://gdal.org/drivers/raster/index.html" target="_blank" rel="noreferrer">https://gdal.org/drivers/raster/index.html</a></p><p><strong>Source comments</strong></p><p><strong>R grd/grid files</strong></p><p>Write a <code>Raster</code> to a .grd file with a .gri header file. Returns the base of <code>filename</code> with a <code>.grd</code> extension.</p><p><strong>GDAL (tiff, and everything else)</strong></p><p>Used if you <code>write</code> a <code>Raster</code> with a <code>filename</code> extension that no other backend can write. GDAL is the fallback, and writes a lot of file types, but is not guaranteed to work.</p><p>Returns <code>filename</code>.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/write.jl#L44-L60" target="_blank" rel="noreferrer">source</a></p>',17))]),i("details",zs,[i("summary",null,[s[183]||(s[183]=i("a",{id:"Base.write-Tuple{String, Rasters.GRDsource, AbstractRaster}",href:"#Base.write-Tuple{String, Rasters.GRDsource, AbstractRaster}"},[i("span",{class:"jlbinding"},"Base.write")],-1)),s[184]||(s[184]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[185]||(s[185]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(filename</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{GRDsource}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRaster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Write a <code>Raster</code> to a .grd file with a .gri header file.</p><p>This method is called automatically if you <code>write</code> a <code>Raster</code> with a <code>.grd</code> or <code>.gri</code> extension.</p><p><strong>Keywords</strong></p><ul><li><code>force</code>: <code>false</code> by default. If <code>true</code> it force writing to a file destructively, even if it already exists.</li></ul><p>If this method is called directly the extension of <code>filename</code> will be ignored.</p><p>Returns the base of <code>filename</code> with a <code>.grd</code> extension.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/sources/grd.jl#L157-L172" target="_blank" rel="noreferrer">source</a></p>',8))]),i("details",Ns,[i("summary",null,[s[186]||(s[186]=i("a",{id:"Rasters.checkmem!-Tuple{Bool}",href:"#Rasters.checkmem!-Tuple{Bool}"},[i("span",{class:"jlbinding"},"Rasters.checkmem!")],-1)),s[187]||(s[187]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[188]||(s[188]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">checkmem!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set <code>checkmem</code> to <code>true</code> or <code>false</code>.</p><p>In some architectures memory reporting may be wrong and you may wish to disable memory checks.</p><p>This setting can be overridden with the <code>checkmem</code> keyword, where applicable.</p><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/array.jl#L3-L12" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",Gs,[i("summary",null,[s[189]||(s[189]=i("a",{id:"Rasters.rplot-Tuple",href:"#Rasters.rplot-Tuple"},[i("span",{class:"jlbinding"},"Rasters.rplot")],-1)),s[190]||(s[190]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[191]||(s[191]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Rasters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([position</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GridPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], raster; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><code>raster</code> may be a <code>Raster</code> (of 2 or 3 dimensions) or a <code>RasterStack</code> whose underlying rasters are 2 dimensional, or 3-dimensional with a singleton (length-1) third dimension.</p><p><strong>Keywords</strong></p><ul><li><p><code>plottype = Makie.Heatmap</code>: The type of plot. Can be any Makie plot type which accepts a <code>Raster</code>; in practice, <code>Heatmap</code>, <code>Contour</code>, <code>Contourf</code> and <code>Surface</code> are the best bets.</p></li><li><p><code>axistype = Makie.Axis</code>: The type of axis. This can be an <code>Axis</code>, <code>Axis3</code>, <code>LScene</code>, or even a <code>GeoAxis</code> from GeoMakie.jl.</p></li><li><p><code>X = XDim</code>: The X dimension of the raster.</p></li><li><p><code>Y = YDim</code>: The Y dimension of the raster.</p></li><li><p><code>Z = YDim</code>: The Y dimension of the raster.</p></li><li><p><code>draw_colorbar = true</code>: Whether to draw a colorbar for the axis or not.</p></li><li><p><code>colorbar_position = Makie.Right()</code>: Indicates which side of the axis the colorbar should be placed on. Can be <code>Makie.Top()</code>, <code>Makie.Bottom()</code>, <code>Makie.Left()</code>, or <code>Makie.Right()</code>.</p></li><li><p><code>colorbar_padding = Makie.automatic</code>: The amount of padding between the colorbar and its axis. If <code>automatic</code>, then this is set to the width of the colorbar.</p></li><li><p><code>title = Makie.automatic</code>: The titles of each plot. If <code>automatic</code>, these are set to the name of the band.</p></li><li><p><code>xlabel = Makie.automatic</code>: The x-label for the axis. If <code>automatic</code>, set to the dimension name of the X-dimension of the raster.</p></li><li><p><code>ylabel = Makie.automatic</code>: The y-label for the axis. If <code>automatic</code>, set to the dimension name of the Y-dimension of the raster.</p></li><li><p><code>colorbarlabel = &quot;&quot;</code>: Usually nothing, but here if you need it. Sets the label on the colorbar.</p></li><li><p><code>colormap = nothing</code>: The colormap for the heatmap. This can be set to a vector of colormaps (symbols, strings, <code>cgrad</code>s) if plotting a 3D raster or RasterStack.</p></li><li><p><code>colorrange = Makie.automatic</code>: The colormap for the heatmap. This can be set to a vector of <code>(low, high)</code> if plotting a 3D raster or RasterStack.</p></li><li><p><code>nan_color = :transparent</code>: The color which <code>NaN</code> values should take. Default to transparent.</p></li></ul><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/plotrecipes.jl#L239-L261" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",Ms,[i("summary",null,[s[192]||(s[192]=i("a",{id:"Rasters.sample-Tuple",href:"#Rasters.sample-Tuple"},[i("span",{class:"jlbinding"},"Rasters.sample")],-1)),s[193]||(s[193]=e()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[194]||(s[194]=t(`<p>Rasters.sample([rng], x, [n::Integer]; kw...)</p><p>Sample <code>n</code> random and optionally weighted points from from a <code>Raster</code> or <code>RasterStack</code>. Returns a <code>Vector</code> of <code>NamedTuple</code>, closely resembling the return type of <a href="/Rasters.jl/v0.14.0/api#Rasters.extract"><code>extract</code></a>.</p><p>Run <code>using StatsBase</code> to make this method available. Note that this function is not exported to avoid confusion with StatsBase.sample</p><p><strong>Keywords</strong></p><ul><li><p><code>geometry</code>: include <code>:geometry</code> in returned <code>NamedTuple</code>. Specify the type and dimensions of the returned geometry by providing a <code>Tuple</code> or <code>NamedTuple</code> of dimensions. Defaults to <code>(X,Y)</code></p></li><li><p><code>index</code>: include <code>:index</code> of the <code>CartesianIndex</code> in returned <code>NamedTuple</code>, <code>false</code> by default.</p></li><li><p><code>name</code>: a <code>Symbol</code> or <code>Tuple</code> of <code>Symbol</code> corresponding to layer/s of a <code>RasterStack</code> to extract. All layers by default.</p></li><li><p><code>skipmissing</code>: skip missing points automatically.</p></li><li><p><code>weights</code>: A DimArray that matches one or more of the dimensions of <code>x</code> with weights for sampling.</p></li><li><p><code>weightstype</code>: a <code>StatsBase.AbstractWeights</code> specifying the type of weights. Defaults to <code>StatsBase.Weights</code>.</p></li><li><p><code>replace</code>: sample with replacement, <code>true</code> by default. See <code>StatsBase.sample</code></p></li><li><p><code>ordered</code>: sample in order, <code>false</code> by default. See <code>StatsBase.sample</code></p></li></ul><p><strong>Example</strong></p><p>This code draws 5 random points from a raster, weighted by cell area.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, Rasters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Lookups, Proj, StatsBase</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xdim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Projected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; sampling</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Intervals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()), crs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EPSG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4326</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ydim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Projected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; sampling</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Intervals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()), crs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EPSG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4326</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myraster </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xdim, ydim)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Rasters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(myraster, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; weights</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cellarea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(myraster))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># output</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element Vector{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{geometry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple{Float64, Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Missing, Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{geometry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple{Float64, Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Missing, Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}(((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.7360504790189618</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{geometry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple{Float64, Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Missing, Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}(((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5447657183842469</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{geometry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple{Float64, Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Missing, Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}(((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5447657183842469</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{geometry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple{Float64, Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Missing, Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}(((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.7360504790189618</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{geometry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple{Float64, Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Missing, Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}(((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">110.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5291143028176258</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p><a href="https://github.com/rafaqz/Rasters.jl/blob/212db85969602681235786b61d3ddffc79b8c0d3/src/extensions.jl#L240-L279" target="_blank" rel="noreferrer">source</a></p>`,9))])])}const Xs=l(j,[["render",Os]]);export{Ys as __pageData,Xs as default};
