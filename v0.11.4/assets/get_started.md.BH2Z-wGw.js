import{_ as s,c as a,o as i,a7 as n}from"./chunks/framework.R65tX_j8.js";const e="/Rasters.jl/v0.11.4/assets/oatrnfq.DojgcnZi.png",y=JSON.parse('{"title":"Quick start","description":"","frontmatter":{},"headers":[],"relativePath":"get_started.md","filePath":"get_started.md","lastUpdated":null}'),t={name:"get_started.md"},p=n(`<h1 id="Quick-start" tabindex="-1">Quick start <a class="header-anchor" href="#Quick-start" aria-label="Permalink to &quot;Quick start {#Quick-start}&quot;">​</a></h1><h2 id="Install-the-package-by-typing:" tabindex="-1">Install the package by typing: <a class="header-anchor" href="#Install-the-package-by-typing:" aria-label="Permalink to &quot;Install the package by typing: {#Install-the-package-by-typing:}&quot;">​</a></h2><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">add Rasters</span></span></code></pre></div><p>then do</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters</span></span></code></pre></div><p>Using Rasters to read GeoTiff or NetCDF files will output something similar to the following toy examples. This is possible because Rasters.jl extends DimensionalData.jl so that spatial data can be indexed using named dimensions like <code>X</code>, <code>Y</code> and <code>Ti</code> (time) and e.g. spatial coordinates.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, Dates</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lon, lat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ti </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Ti</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Month</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2002</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ras </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lon, lat, ti)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># this generates random numbers with the dimensions given</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>╭──────────────────────────╮</span></span>
<span class="line"><span>│ 6×6×13 Raster{Float64,3} │</span></span>
<span class="line"><span>├──────────────────────────┴───────────────────────────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X  Sampled{Int64} 25:1:30 ForwardOrdered Regular Points,</span></span>
<span class="line"><span>  → Y  Sampled{Int64} 25:1:30 ForwardOrdered Regular Points,</span></span>
<span class="line"><span>  ↗ Ti Sampled{DateTime} DateTime(&quot;2001-01-01T00:00:00&quot;):Month(1):DateTime(&quot;2002-01-01T00:00:00&quot;) ForwardOrdered Regular Points</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (25, 30), Y = (25, 30), Ti = (DateTime(&quot;2001-01-01T00:00:00&quot;), DateTime(&quot;2002-01-01T00:00:00&quot;)))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>[:, :, 1]</span></span>
<span class="line"><span>  ↓ →  25         26         27          28         29          30</span></span>
<span class="line"><span> 25     0.98298    0.184252   0.917464    0.78937    0.0477358   0.307207</span></span>
<span class="line"><span> 26     0.143576   0.776498   0.758344    0.655963   0.0804165   0.169249</span></span>
<span class="line"><span> 27     0.71911    0.162997   0.0156441   0.486923   0.442061    0.523362</span></span>
<span class="line"><span> 28     0.564479   0.325603   0.515429    0.758307   0.0621957   0.787045</span></span>
<span class="line"><span> 29     0.330932   0.698336   0.576844    0.888549   0.661533    0.841773</span></span>
<span class="line"><span> 30     0.762487   0.398862   0.0779634   0.721472   0.80924     0.982145</span></span></code></pre></div><h2 id="Getting-the-lookup-array-from-dimensions" tabindex="-1">Getting the lookup array from dimensions <a class="header-anchor" href="#Getting-the-lookup-array-from-dimensions" aria-label="Permalink to &quot;Getting the lookup array from dimensions {#Getting-the-lookup-array-from-dimensions}&quot;">​</a></h2><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lon </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ras, X) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># if X is longitude</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ras, Y) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># if Y is latitude</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Sampled{Int64} ForwardOrdered Regular Points</span></span>
<span class="line"><span>wrapping: 25:1:30</span></span></code></pre></div><h2 id="Select-by-index" tabindex="-1">Select by index <a class="header-anchor" href="#Select-by-index" aria-label="Permalink to &quot;Select by index {#Select-by-index}&quot;">​</a></h2><p>Selecting a time slice by index is done via</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ras[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ti</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>╭───────────────────────╮</span></span>
<span class="line"><span>│ 6×6 Raster{Float64,2} │</span></span>
<span class="line"><span>├───────────────────────┴───────────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Sampled{Int64} 25:1:30 ForwardOrdered Regular Points,</span></span>
<span class="line"><span>  → Y Sampled{Int64} 25:1:30 ForwardOrdered Regular Points</span></span>
<span class="line"><span>├─────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (25, 30), Y = (25, 30))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>└───────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>  ↓ →  25         26         27          28         29          30</span></span>
<span class="line"><span> 25     0.98298    0.184252   0.917464    0.78937    0.0477358   0.307207</span></span>
<span class="line"><span> 26     0.143576   0.776498   0.758344    0.655963   0.0804165   0.169249</span></span>
<span class="line"><span> 27     0.71911    0.162997   0.0156441   0.486923   0.442061    0.523362</span></span>
<span class="line"><span> 28     0.564479   0.325603   0.515429    0.758307   0.0621957   0.787045</span></span>
<span class="line"><span> 29     0.330932   0.698336   0.576844    0.888549   0.661533    0.841773</span></span>
<span class="line"><span> 30     0.762487   0.398862   0.0779634   0.721472   0.80924     0.982145</span></span></code></pre></div><p>also</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ras[Ti</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>╭───────────────────────╮</span></span>
<span class="line"><span>│ 6×6 Raster{Float64,2} │</span></span>
<span class="line"><span>├───────────────────────┴───────────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Sampled{Int64} 25:1:30 ForwardOrdered Regular Points,</span></span>
<span class="line"><span>  → Y Sampled{Int64} 25:1:30 ForwardOrdered Regular Points</span></span>
<span class="line"><span>├─────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (25, 30), Y = (25, 30))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>└───────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>  ↓ →  25         26         27          28         29          30</span></span>
<span class="line"><span> 25     0.98298    0.184252   0.917464    0.78937    0.0477358   0.307207</span></span>
<span class="line"><span> 26     0.143576   0.776498   0.758344    0.655963   0.0804165   0.169249</span></span>
<span class="line"><span> 27     0.71911    0.162997   0.0156441   0.486923   0.442061    0.523362</span></span>
<span class="line"><span> 28     0.564479   0.325603   0.515429    0.758307   0.0621957   0.787045</span></span>
<span class="line"><span> 29     0.330932   0.698336   0.576844    0.888549   0.661533    0.841773</span></span>
<span class="line"><span> 30     0.762487   0.398862   0.0779634   0.721472   0.80924     0.982145</span></span></code></pre></div><p>or and interval of indices using the syntax =a:b or (a:b)</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ras[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ti</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>╭──────────────────────────╮</span></span>
<span class="line"><span>│ 6×6×10 Raster{Float64,3} │</span></span>
<span class="line"><span>├──────────────────────────┴───────────────────────────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X  Sampled{Int64} 25:1:30 ForwardOrdered Regular Points,</span></span>
<span class="line"><span>  → Y  Sampled{Int64} 25:1:30 ForwardOrdered Regular Points,</span></span>
<span class="line"><span>  ↗ Ti Sampled{DateTime} DateTime(&quot;2001-01-01T00:00:00&quot;):Month(1):DateTime(&quot;2001-10-01T00:00:00&quot;) ForwardOrdered Regular Points</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (25, 30), Y = (25, 30), Ti = (DateTime(&quot;2001-01-01T00:00:00&quot;), DateTime(&quot;2001-10-01T00:00:00&quot;)))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>[:, :, 1]</span></span>
<span class="line"><span>  ↓ →  25         26         27          28         29          30</span></span>
<span class="line"><span> 25     0.98298    0.184252   0.917464    0.78937    0.0477358   0.307207</span></span>
<span class="line"><span> 26     0.143576   0.776498   0.758344    0.655963   0.0804165   0.169249</span></span>
<span class="line"><span> 27     0.71911    0.162997   0.0156441   0.486923   0.442061    0.523362</span></span>
<span class="line"><span> 28     0.564479   0.325603   0.515429    0.758307   0.0621957   0.787045</span></span>
<span class="line"><span> 29     0.330932   0.698336   0.576844    0.888549   0.661533    0.841773</span></span>
<span class="line"><span> 30     0.762487   0.398862   0.0779634   0.721472   0.80924     0.982145</span></span></code></pre></div><h2 id="Select-by-value" tabindex="-1">Select by value <a class="header-anchor" href="#Select-by-value" aria-label="Permalink to &quot;Select by value {#Select-by-value}&quot;">​</a></h2><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ras[Ti</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">At</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))]</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>╭───────────────────────╮</span></span>
<span class="line"><span>│ 6×6 Raster{Float64,2} │</span></span>
<span class="line"><span>├───────────────────────┴───────────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Sampled{Int64} 25:1:30 ForwardOrdered Regular Points,</span></span>
<span class="line"><span>  → Y Sampled{Int64} 25:1:30 ForwardOrdered Regular Points</span></span>
<span class="line"><span>├─────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  extent: Extent(X = (25, 30), Y = (25, 30))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>└───────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>  ↓ →  25         26         27          28         29          30</span></span>
<span class="line"><span> 25     0.98298    0.184252   0.917464    0.78937    0.0477358   0.307207</span></span>
<span class="line"><span> 26     0.143576   0.776498   0.758344    0.655963   0.0804165   0.169249</span></span>
<span class="line"><span> 27     0.71911    0.162997   0.0156441   0.486923   0.442061    0.523362</span></span>
<span class="line"><span> 28     0.564479   0.325603   0.515429    0.758307   0.0621957   0.787045</span></span>
<span class="line"><span> 29     0.330932   0.698336   0.576844    0.888549   0.661533    0.841773</span></span>
<span class="line"><span> 30     0.762487   0.398862   0.0779634   0.721472   0.80924     0.982145</span></span></code></pre></div><p>More options are available, like <code>Near</code>, <code>Contains</code> and <code>Where</code>.</p><div class="tip custom-block"><p class="custom-block-title">Dimensions</p><p>Rasters uses X, Y, and Z dimensions from <a href="https://rafaqz.github.io/DimensionalData.jl/" target="_blank" rel="noreferrer"><code>DimensionalData</code></a> to represent spatial directions like longitude, latitude and the vertical dimension, and subset data with them. Ti is used for time, and Band represent bands. Other dimensions can have arbitrary names, but will be treated generically. See <a href="https://rafaqz.github.io/DimensionalData.jl/" target="_blank" rel="noreferrer"><code>DimensionalData</code></a> for more details on how they work.</p></div><div class="tip custom-block"><p class="custom-block-title">Lookup Arrays</p><p>These specify properties of the index associated with e.g. the X and Y dimension. Rasters.jl defines additional lookup arrays: <a href="/Rasters.jl/v0.11.4/api#Rasters.Projected"><code>Projected</code></a> to handle dimensions with projections, and <a href="/Rasters.jl/v0.11.4/api#Rasters.Mapped"><code>Mapped</code></a> where the projection is mapped to another projection like <code>EPSG(4326)</code>. <code>Mapped</code> is largely designed to handle NetCDF dimensions, especially with <code>Explicit</code> spans.</p></div><h2 id="Subsetting-an-object" tabindex="-1">Subsetting an object <a class="header-anchor" href="#Subsetting-an-object" aria-label="Permalink to &quot;Subsetting an object {#Subsetting-an-object}&quot;">​</a></h2><p>Regular <code>getindex</code> (e.g. <code>A[1:100, :]</code>) and <code>view</code> work on all objects just as with an <code>Array</code>. <code>view</code> is always lazy, and reads from disk are deferred until <code>getindex</code> is used. <code>DimensionalData.jl</code> <code>Dimension</code>s and <code>Selector</code>s are the other way to subset an object, making use of the objects index to find values at e.g. certain <code>X/Y</code> coordinates. The available selectors are listed here:</p><table tabindex="0"><thead><tr><th style="text-align:left;">Selectors</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>At(x)</code></td><td style="text-align:left;">get the index exactly matching the passed in value(s).</td></tr><tr><td style="text-align:left;"><code>Near(x)</code></td><td style="text-align:left;">get the closest index to the passed in value(s).</td></tr><tr><td style="text-align:left;"><code>Where(f::Function)</code></td><td style="text-align:left;">filter the array axis by a function of the dimension index values.</td></tr><tr><td style="text-align:left;"><code>a..b</code>/<code>Between(a, b)</code></td><td style="text-align:left;">get all indices between two values, excluding the high value.</td></tr><tr><td style="text-align:left;"><code>Contains(x)</code></td><td style="text-align:left;">get indices where the value x falls within an interval.</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">Info</p><ul><li>Use the <code>..</code> selector to take a view of madagascar:</li></ul></div><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, RasterDataSources</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RS </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CairoMakie</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CairoMakie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">activate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Raster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{BioClim}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">madagascar </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">43.25</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50.48</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25.61</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12.04</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Note the space between .. -12</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(madagascar)</span></span></code></pre></div><p><img src="`+e+'" alt=""></p>',33),l=[p];function h(d,k,r,o,c,g){return i(),a("div",null,l)}const u=s(t,[["render",h]]);export{y as __pageData,u as default};
